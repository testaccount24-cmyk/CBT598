./ ADD NAME=AIXUTIL  0100-02291-02291-0123-00433-00433-00000-RLRICE
* ------------------------------------------------------------------- *
*                                                                     *
*   If a VSAM alternate index is built on a large base cluster,       *
*   IDCAMS may not be able to sort all of the data in core.  The      *
*   external work files used by IDCAMS must be VSAM ESDSs.  This      *
*   causes several problems getting the JCL in to production control. *
*   This utility builds the AIX by reading the base cluster and       *
*   calling the SORT utility to sort the records.  The SORT utility   *
*   allows the use of non-VSAM temporary work files that can be       *
*   easily handled by production control.  Also IDCAMS sorts the      *
*   entire base record, this utility only sorts the alternate index   *
*   key and base keys so the data involved in the sort is much        *
*   smaller and efficient.                                            *
*                                                                     *
* ------------------------------------------------------------------- *
AIXUTIL  CSECT
         USING AIXUTIL,R12         DEFINE BASE                          ASE00100
         STM   R14,R12,12(R13)     SAVE ENTRY REGISTERS                 ASE00110
         LR    R12,R15             LOAD PERMANENT                       ASE00120
         LR    R2,R13              SAVE OLD REGISTER SAVE AREA ADDRESS  ASE00130
         LA    R13,SAVEAREA        POINT TO OUR SAVE AREA               ASE00140
         ST    R13,8(R2)           CHAIN FORWARD                        ASE00150
         ST    R2,4(R13)           CHAIN BACKWARD                       ASE00160
         B     INIT0000
         DC    CL6'&SYSDATE'       DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'       TIME OF ASSEMBLY
         DC    C'AIXUTIL'
* ------------------------------------------------------------------- *
*                                                                     *
*        Open print, base, and aix datasets                           *
*        The base cluster is verified to be a KSDS.                   *
*        The base cluster key length and relative key position        *
*           are obtained via SHOWCB.                                  *
*        The AIX key and position in the base cluster are obtained    *
*           via SHOWCB from the AIX ACB.                              *
*        Once the key lengths and positions are known:                *
*            1) the work file LRECL and BLKSIZE can be calculated     *
*            2) an I/O area for the work file can be GEMTAINed        *
*            3) the sort key length can be filled in in the SORT      *
*               statement                                             *
*            4) the record size can be filled in in the RECORD        *
*               statement                                             *
*                                                                     *
* ------------------------------------------------------------------- *
INIT0000 DS    0H
         OPEN  (AIXPRT,OUTPUT)     OPEN PRINTER DCB
         OPEN  (BASE)              OPEN ACB
         CH    R15,H4              ACB OPENED SUCCESSFULLY?
         BH    ERR0010             NO
         MVC   PLINE(MSG01L),MSG01 COPY MESSAGE 01
         BAL   R10,PRT0000         PRINT MESSAGE
         TESTCB ACB=BASE,          TEST ACB                            +
               ATRB=KSDS,          .. IS IT A KSDS?                    +
               ERET=ERR0020        .. NO
         SHOWCB ACB=BASE,          SHOW ACB ATTRIBUTES                 +
               AREA=BASEDATA,      .. AREA RETURNED                    +
               LENGTH=8,           .. SIZE OF 'BASEDATA'               +
               FIELDS=(KEYLEN,RKP)    RETURN KEY LENGTH AND POSITION
         LTR   R15,R15             SHOWCB SUCCESSFUL?
         BNZ   ERR0030             NO
         OPEN  (AIX)               OPEN ALTERNATE INDEX
         CH    R15,H4              ACB OPENED SUCCESSFULLY?
         BH    ERR0040             NO
         MVC   PLINE(MSG07L),MSG07 COPY MESSAGE 07
         BAL   R10,PRT0000         PRINT MESSAGE
         SHOWCB ACB=AIX,           SHOW ACB ATTRIBUTES                 +
               AREA=AIXDATA,       .. AREA RETURNED                    +
               LENGTH=8,           .. SIZE OF 'AIXDATA'                +
               FIELDS=(KEYLEN,AIXRKP) RETURN KEY LENGTH AND POSITION
         LTR   R15,R15             OPEN SUCCESSFUL?
         BNZ   ERR0050             NO
         LA    R2,SORTIN           WORK FILE DCB
         USING IHADCB,R2           DEFINE BASE
         L     R1,BASEKEYL         BASE CLUSTER KEY LENGTH
         A     R1,AIXKEYL          PLUS AIX KEY LENGTH
         STH   R1,DCBLRECL         SET LRECL
         CVD   R1,DWORD            CONVERT TO DECIMAL
         ED    MSG08RSZ,DWORD+5    EDIT RECORD SIZE
         ED    SORTKEYL,DWORD+5    EDIT IN SORT KEY LENGTH
         ED    SORTRECL,DWORD+5    EDIT SORT RECORD SIZE
         SR    R8,R8               CLEAR REGISTER
         L     R9,$BLKSIZE         TARGET BLOCK SIZE
         DR    R8,R1               COMPUTE RECORDS PER BLOCK
         SR    R8,R8               DROP REMAINDER
         MR    R8,R1               COMPUTE ACTUAL BLOCK SIZE
         STH   R9,DCBBLKSI         SET BLOCK SIZE
         CVD   R9,DWORD            CONVERT TO DECIMAL
         ED    MSG08BSZ,DWORD+5    EDIT BLOCK SIZE
         MVC   PLINE(MSG08L),MSG08 COPY MESSAGE
         BAL   R10,PRT0000         PRINT MESSAGE
* ------------------------------------------------------------------- *
*                                                                     *
*        Now that the work file LRECL and BLKSIZE are set, we can     *
*        open the workfile DCB.                                       *
*                                                                     *
* ------------------------------------------------------------------- *
         OPEN  (SORTIN,OUTPUT)     OPEN SORTIN (WORK FILE)
         GETMAIN RU,               ACQUIRE AN I/O AREA                 +
               LV=(R9),            .. SIZE OF AREA                     +
               LOC=BELOW           .. FROM 24-BIT STORAGE
         LR    R8,R1               COPY I/O STORAGE ADDRESS
         L     R2,BASEKEYL         BASE KEY LENGTH
         STC   R2,AIXRECPL         SET POINTER LENGTH (BASE KEY LEN)
         BCTR  R2,0                FOR EXECUTES
         L     R3,BASERKP          BASE CLUSTER KEY POSITION
         L     R4,AIXKEYL          AIX KEY LENGTH
         STC   R4,AIXRECAL         SET ALTERNATE KEY LENGTH
         BCTR  R4,0                FOR EXECUTES
         L     R5,AIXRKP           AIX KEY POSTION IN BASE CLUSTER
         LA    R6,1(R4,R8)         BASE KEY ADDRESS IN I/O AREA
* ------------------------------------------------------------------- *
*                                                                     *
*        Read the base cluster and write the work file records        *
*                                                                     *
*         Data in the records is                                      *
*              AIX key                                                *
*              BASE key                                               *
*                                                                     *
* ------------------------------------------------------------------- *
PROC0010 DS    0H
         GET   RPL=READRPL         READ A RECORD
         LTR   R15,R15             READ SUCCESSFUL?
         BNZ   ERR0060             NO
         L     R7,VSAMRECA         BASE RECORD ADDRESS
         LA    R1,0(R5,R7)         AIX KEY ADDRESS IN BASE RECORD
         EX    R4,AIXKYMV1         COPY AIX KEY TO WORK RECORD
         LA    R1,0(R3,R7)         BASE KEY ADDRESS IN BASE RECORD
         EX    R2,BSEKYMV1         COPY BASE KEY TO WORK AREA
         PUT   SORTIN,(R8)         WRITE WORK RECORD
         AP    WORKCNT,P1          ADD 1 TO NUMBER OF RECORDS WRITTEN
         B     PROC0010            LOOP
* ------------------------------------------------------------------- *
*                                                                     *
*        EOF has been reached on the base cluster                     *
*                                                                     *
* ------------------------------------------------------------------- *
PROC0020 DS    0H
         CLOSE SORTIN
         CLOSE BASE
         ED    MSG10CNT,WORKCNT    EDIT NUMBER OF RECORDS WRITTEN
         MVC   PLINE(MSG10L),MSG10 COPY MESSAGE
         BAL   R10,PRT0000         PRINT MESSAGE
* ------------------------------------------------------------------- *
*                                                                     *
*        Call SORT to sort the work file into AIX key sequence        *
*                                                                     *
* ------------------------------------------------------------------- *
         LA    R1,SORTPRMP         SORT PARM POINTER ADDRESS
         LINK  EP=SORT             LINK TO SORT
         LTR   R15,R15             SORT SUCCESSFUL?
         BNZ   ERR0070             NO
* ------------------------------------------------------------------- *
*                                                                     *
*        Open the work file as input and build the AIX                *
*                                                                     *
* ------------------------------------------------------------------- *
         OPEN  (SORTIN,INPUT)      OPEN WORK FILE
         GET   SORTIN,(R8)         READ A WORK FILE RECORD
         B     PROC0040            ENTER MAIN LOGIC
PROC0030 DS    0H
         GET   SORTIN,(R8)         READ NEXT WORK FILE RECORD
         EX    R4,AIXKYCLC         SAME KEY AS LAST RECORD?
         BE    PROC0050            YES
         L     R10,VSAMRECL        RECORD SIZE
         MODCB RPL=WRITERPL,       MODIFY THE RPL                      +
               RECLEN=(R10)        .. INSERT CURRENT RECORD SIZE
         PUT   RPL=WRITERPL        WRITE THE RECORD TO TO AIX
         LTR   R15,R15             SUCCESSFUL?
         BNZ   ERR0080             NO
PROC0040 DS    0H
         XC    AIXRECP#,AIXRECP#   RESET NUMBER OF KEYS IN RECORD
         LA    R1,6(R2)            MINIMUM RECORD SIZE (5+BASE KEY LEN)
         ST    R1,VSAMRECL         SET RECORD LENGTH
         EX    R4,AIXKYMV2
         LA    R7,AIXRECKY+1(R4)   FIRST BASE KEY AREA
PROC0050 DS    0H
         SR    R1,R1               CLEAR REGISTER
         ICM   R1,3,AIXRECP#       NUMBER OF POINTERS SO FAR
         LA    R1,1(R1)            PLUS 1 KEY
         STCM  R1,3,AIXRECP#       SAVE TOTAL
         L     R1,VSAMRECL         RECORD LENGTH SO FAR
         LA    R1,1(R1,R2)         PLUS LENGTH OF 1 MORE KEY
         ST    R1,VSAMRECL         SAVE TOTAL
         EX    R2,BSEKYMV2         COPY KEY TO AIX RECORD
         LA    R7,1(R7,R2)         UPDATE OUTPUT ADDRESS
         B     PROC0030            READ ALL WORK RECORDS
PROC0060 DS    0H
         L     R10,VSAMRECL        RECORD SIZE
         MODCB RPL=WRITERPL,       MODIFY THE RPL                      +
               RECLEN=(R10)        .. INSERT CURRENT RECORD SIZE
         PUT   RPL=WRITERPL        WRITE LAST RECORD TO AIX
         LTR   R15,R15             SUCCESSFUL?
         BNZ   ERR0080             NO
         B     EXIT0000            AND EXIT
JUNKMVC  MVC   PLINE(0),AIXREC
AIXKYMV1 MVC   0(0,R8),0(R1)       COPY AIX KEY TO WORK RECORD
AIXKYMV2 MVC   AIXRECKY(0),0(R8)   COPY AIX KEY TO AIX RECORD
AIXKYCLC CLC   AIXRECKY(0),0(R8)   CHECK KEYS
BSEKYMV1 MVC   0(0,R6),0(R1)       COPY BASE KEY TO WORK RECOD
BSEKYMV2 MVC   0(0,R7),0(R6)       COPY BASE KEY TO AIX RECORD
ERR0010  DS    0H
         ST    R15,DWORD           SAVE RETURN CODE
         UNPK  MSG02RC(5),DWORD+2(3)
         MVZ   MSG02RC,HEX0F0F     CLEAR ZONES
         TR    MSG02RC,HEXCHAR     TRANSLATE TO PRINTABLE
         MVI   MSG02RC+4,C' '      RESTORE BLANK
         MVC   PLINE(MSG02L),MSG02 COPY MESSAGE
         BAL   R10,PRT0000         PRINT MESSAGE
         ABEND 1,DUMP,,USER
ERR0020  DS    0H
         MVC   PLINE(MSG03L),MSG03 COPY MESSAGE
         BAL   R10,PRT0000         PRINT MESSAGE
         MVI   RC,16               SET RETURN CODE
         B     EXIT0000            EXIT
ERR0030  DS    0H
         ST    R15,DWORD           SAVE RETURN CODE
         UNPK  MSG04RC(5),DWORD+2(3)
         MVZ   MSG04RC,HEX0F0F     CLEAR ZONES
         TR    MSG04RC,HEXCHAR     TRANSLATE TO PRINTABLE
         MVI   MSG04RC+4,C' '      RESTORE BLANK
         MVC   PLINE(MSG04L),MSG04 COPY MESSAGE
         BAL   R10,PRT0000         PRINT MESSAGE
         ABEND 2,DUMP,,USER
ERR0040  DS    0H
         ST    R15,DWORD           SAVE RETURN CODE
         UNPK  MSG05RC(5),DWORD+2(3)
         MVZ   MSG05RC,HEX0F0F     CLEAR ZONES
         TR    MSG05RC,HEXCHAR     TRANSLATE TO PRINTABLE
         MVI   MSG05RC+4,C' '      RESTORE BLANK
         MVC   PLINE(MSG05L),MSG05 COPY MESSAGE
         BAL   R10,PRT0000         PRINT MESSAGE
         ABEND 3,DUMP,,USER
ERR0050  DS    0H
         ST    R15,DWORD           SAVE RETURN CODE
         UNPK  MSG06RC(5),DWORD+2(3)
         MVZ   MSG06RC,HEX0F0F     CLEAR ZONES
         TR    MSG06RC,HEXCHAR     TRANSLATE TO PRINTABLE
         MVI   MSG06RC+4,C' '      RESTORE BLANK
         MVC   PLINE(MSG06L),MSG06 COPY MESSAGE
         BAL   R10,PRT0000         PRINT MESSAGE
         ABEND 4,DUMP,,USER
ERR0060  DS    0H
         ST    R15,DWORD           SAVE RETURN CODE
         UNPK  MSG09RC(5),DWORD+2(3)
         MVZ   MSG09RC,HEX0F0F     CLEAR ZONES
         TR    MSG09RC,HEXCHAR     TRANSLATE TO PRINTABLE
         MVI   MSG09RC+4,C' '      RESTORE BLANK
         MVC   PLINE(MSG09L),MSG09 COPY MESSAGE
         BAL   R10,PRT0000         PRINT MESSAGE
         ABEND 5,DUMP,,USER
ERR0070  DS    0H
         ST    R15,DWORD           SAVE RETURN CODE
         UNPK  MSG11RC(5),DWORD+2(3)
         MVZ   MSG11RC,HEX0F0F     CLEAR ZONES
         TR    MSG11RC,HEXCHAR     TRANSLATE TO PRINTABLE
         MVI   MSG11RC+4,C' '      RESTORE BLANK
         MVC   PLINE(MSG11L),MSG11 COPY MESSAGE
         BAL   R10,PRT0000         PRINT MESSAGE
         ABEND 6,DUMP,,USER
ERR0080  DS    0H
         ST    R15,DWORD           SAVE RETURN CODE
         UNPK  MSG12RC(5),DWORD+2(3)
         MVZ   MSG12RC,HEX0F0F     CLEAR ZONES
         TR    MSG12RC,HEXCHAR     TRANSLATE TO PRINTABLE
         MVI   MSG12RC+4,C' '      RESTORE BLANK
         MVC   PLINE(MSG12L),MSG12 COPY MESSAGE
         BAL   R10,PRT0000         PRINT MESSAGE
         ABEND 7,DUMP,,USER
PRT0000  DS    0H
         PUT   AIXPRT,PLINE        WRITE PRINT LINE
         MVC   PLINE,PLINE-1       CLEAR PRINT I/O AREA
         BR    R10                 DONE
*--------------------------------------------------------------------*
*                                                                    *
*                  END OF JOB PROCESSING                             *
*                                                                    *
*--------------------------------------------------------------------*
EXIT0000 DS    0H
         CLOSE AIXPRT
         CLOSE SORTIN
         CLOSE AIX
         SR    R15,R15             CLEAR REGISTER
         IC    R15,RC              SET RETURN CODE
         L     R13,4(R13)          RESTORE SAVE AREA ADDRESS
         L     R14,12(R13)         RESTORE R14
         LM    R0,R12,20(R13)      RESTORE REMAINING REGISTERS
         BR    R14                 EXIT
         LTORG
*--------------------------------------------------------------------*
*                                                                    *
*                CONSTANTS/WORKAREAS                                 *
*                                                                    *
*--------------------------------------------------------------------*
DWORD    DS    D
SAVEAREA DS    18F
BASEDATA DS    0F
BASEKEYL DS    F                   BASE KSDS KEY LENGTH
BASERKP  DS    F                   BASE KSDS RELATIVE KEY POSITION
AIXDATA  DS    0F
AIXKEYL  DS    F                   AIX KEY LENGTH
AIXRKP   DS    F                   AIX KEY POSITION IN BASE CLUSTER
$BLKSIZE DC    A(8000)
VSAMRECA DS    F                   VSAM RECORD ADDRESS
VSAMRECL DS    F                   VSAM RECORD LENGTH
SORTPRMP DC    A(SORTPRM+X'80000000')
         DS    H                   ALIGNMENT
SORTPRM  DC    Y(SORTPRML-2)       LENGTH OF PARM LIST
         DC    A(SORTBEGN)         SORT STATEMENT BEGINNING
         DC    A(SORTEND)          SORT STATEMENT END
         DC    A(RECDBEGN)         RECORD STATEMENT BEGINNING
         DC    A(RECDEND)          RECORD STATEMENT END
         DC    A(0)                E15/E32 EXIT ADDRESS
         DC    A(0)                E35 EXIT ADDRESS
SORTPRML EQU   *-SORTPRM
H4       DC    H'4'
H8       DC    H'8'
SORTBEGN DS    0C
         DC    C' SORT FIELDS=('
SORTKEYP DC    CL5'00001'          DOESN'T CHANGE
         DC    C','
SORTKEYL DC    XL6'F02020202020'
         DC    C',CH,A)'
SORTEND  DS    0C
RECDBEGN DS    0C
         DC    C' RECORD TYPE=F,LENGTH='
SORTRECL DC    XL6'F02020202020'
         DC    C' '
RECDEND  DS    0C
RC       DC    X'00'
WORKCNT  DC    PL4'0'
P1       DC    P'1'
HEX0F0F  DC    8X'0F'
HEXCHAR  DC    C'0123456789ABCDEF'
         DC    C' '
PLINE    DC    CL133' '
MSG01    DC    C'BASE ACB IS OPEN'
MSG01L   EQU   *-MSG01
MSG02    DS    0C
         DC    C'BASE ACB OPEN ERROR, R15='
MSG02RC  DC    CL4' '
         DC    C' '
MSG02L   EQU   *-MSG02
MSG03    DS    0C
         DC    C'BASE CLUSTER IS NOT A KSDS'
MSG03L   EQU   *-MSG03
MSG04    DS    0C
         DC    C'BASE ACB SHOWCB ERROR, R15='
MSG04RC  DC    CL4' '
         DC    C' '
MSG04L   EQU   *-MSG04
MSG05    DS    0C
         DC    C'AIX ACB OPEN ERROR, R15='
MSG05RC  DC    CL4' '
         DC    C' '
MSG05L   EQU   *-MSG05
MSG06    DS    0C
         DC    C'AIX ACB SHOWCB ERROR, R15='
MSG06RC  DC    CL4' '
         DC    C' '
MSG06L   EQU   *-MSG06
MSG07    DC    C'AIX ACB IS OPEN'
MSG07L   EQU   *-MSG07
MSG08    DS    0C
         DC    C'WORK FILE RECORD SIZE='
MSG08RSZ DC    X'402020202120'
         DC    C', BLOCK SIZE='
MSG08BSZ DC    X'402020202120'
MSG08L   EQU   *-MSG08
MSG09    DS    0C
         DC    C'BASE CLUSTER READ ERROR, R15='
MSG09RC  DC    CL4' '
         DC    C' '
MSG09L   EQU   *-MSG09
MSG10    DS    0C
         DC    C'NUMBER OF RECORDS IN WORK FILE='
MSG10CNT DC    X'4020202020202120'
MSG10L   EQU   *-MSG10
MSG11    DS    0C
         DC    C'SORT FAILED, R15='
MSG11RC  DC    CL4' '
         DC    C' '
MSG11L   EQU   *-MSG11
MSG12    DS    0C
         DC    C'AIX PUT FAILED, R15='
MSG12RC  DC    CL4' '
         DC    C' '
MSG12L   EQU   *-MSG12
AIXPRT   DCB   DSORG=PS,                                               +
               DDNAME=AIXPRT,                                          +
               RECFM=FBA,                                              +
               LRECL=L'PLINE,                                          +
               MACRF=PM
SORTIN   DCB   DSORG=PS,                                               +
               DDNAME=SORTIN,                                          +
               RECFM=FB,                                               +
               LRECL=0,                                                +
               BLKSIZE=0,                                              +
               EODAD=PROC0060,                                         +
               MACRF=(PM,GM)
READRPL  RPL   AM=VSAM,                                                +
               ACB=BASE,                                               +
               AREA=VSAMRECA,                                          +
               AREALEN=4,                                              +
               OPTCD=(KEY,SEQ,FWD,SYN,NUP,LOC)
WRITERPL RPL   AM=VSAM,                                                +
               ACB=AIX,                                                +
               AREA=AIXREC,                                            +
               RECLEN=0,                                               +
               OPTCD=(KEY,SEQ,FWD,SYN,MVE)
BASE     ACB   AM=VSAM,                                                +
               DDNAME=BASE,                                            +
               EXLST=BASEEXIT,                                         +
               MACRF=(IN)
BASEEXIT EXLST AM=VSAM,                                                +
               EODAD=(PROC0020,A)
AIX      ACB   AM=VSAM,                                                +
               DDNAME=AIX,                                             +
               MACRF=(OUT,AIX)
AIXREC   DS    0A
         DC    XL1'01'             INDEX CONTAINS PRIME KEYS
AIXRECPL DC    XL1'00'             POINTER LENGTH (BASE KEY LENGTH)
AIXRECP# DC    XL2'0000'           NUMBER OF POINTERS IN THIS RECORD
AIXRECAL DC    XL1'00'             ALTERNATE KEY LENGTH
AIXRECKY DS    4000X               ALTERNATE KEYS
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
         DCBD  DSORG=PS
*---------------------------------------------------------------------*
*                  REGISTER EQUATES                                   *
*---------------------------------------------------------------------*
         COPY  REGEQU
         END   AIXUTIL
./ ADD NAME=FILECOMM 0100-02291-02291-0123-00008-00008-00000-RLRICE
*---------------------------------------------------------------------*
*                                                                     *
*        FILE UTILITY COMMON AREAS                                    *
*                                                                     *
*---------------------------------------------------------------------*
FILECOMM CSECT
         FILECOMM
         END   FILECOMM
./ ADD NAME=FILEPH00 0100-02291-02291-0123-00588-00588-00000-RLRICE
*---------------------------------------------------------------------*
*                                                                     *
*           THIS PHASE:                                               *
*              1) OPENS THE FILES                                     *
*              2) READS THE CONTROL CARDS                             *
*              3) DOES LIMITED PARAMETER VALIDATION CHECKING          *
*              4) PASSES CONTROL TO THE CROSS CHECKING PHASE          *
*                                                                     *
*---------------------------------------------------------------------*
FILEPH00 CSECT
         USING FILEPH00,R15            SPECIFY CSECT BASE
         ID                            DATE AND TIME COMPILED
         STM   R14,R12,12(R13)         SAVE REGISTERS
         L     R12,VCOMM               COMMON MODULE ADDRESS
         USING FILECOMM,R12            DEFINE COMMON BASE
         LA    R2,COMSAVE              SAVE AREA ADDRESS
         ST    R13,4(R2)               CHAIN
         ST    R2,8(R13)               CHAIN
         LR    R13,R2                  POINT TO NEW SAVE AREA
         LR    R11,R15                 LOAD NEW BASE REGISTER
         LA    R10,2048(R11)           2ND BASE REGISTER
         LA    R10,2048(R10)           2ND BASE REGISTER
         DROP  R15                     DISCONTINUE OLD BASE
         USING FILEPH00,R11,R10        RESUME WITH NEW BASE
         USING IHADCB,R2               DEFINE DCB DSECT BASE
         LA    R2,PRINTER
         OPEN  ((R2),OUTPUT)           OPEN PRINT FILE
         LA    R2,SYSUT1
         OPEN  ((R2),INPUT)            OPEN INPUT FILE
         RDJFCB MF=(E,JFCBREQ)         READ JFCB
*---------------------------------------------------------------------*
*                                                                     *
*           SCAN THE TIOT FOR A 'SYSIN' DD                            *
*                                                                     *
*---------------------------------------------------------------------*
         EXTRACT TIOTADDR,FIELDS=TIOT  EXTRACT ADDRESS OF TIOT          WMW02330
         L     R3,TIOTADDR             LOAD ADDRESS OF MY TIOT          WMW08140
         USING TIOT1,R3                DECLARE DSECT BASE               WMW08150
         SR    R4,R4                   CLEAR FOR TIOT ENTRY LENGTH      WMW08160
TIOT0010 DS    0H                                                       WMW08180
         ICM   R4,1,TIOELNGH           INSERT LENGTH OF THIS ENTRY      WMW08190
         BZ    PHSE0000                SYSIN DD DOES NOT EXIST          WMW08200
         CLC   TIOEDDNM,=CL8'SYSIN'    IS SYSIN DD PRESENT ???          WMW08210
         BE    READ0000                YES                              WMW08220
TIOT0020 DS    0H                                                       WMW08390
         AR    R3,R4                   ADD LENGTH TO BASE               WMW08400
         B     TIOT0010                KEEP CHECKING THE TIOT           WMW08410
*---------------------------------------------------------------------*
*                                                                     *
*           SYSIN DD EXISTS, SO PROCESS CONTROL CARDS                 *
*                                                                     *
*---------------------------------------------------------------------*
READ0000 DS    0H
         LA    R2,SYSIN
         LA    R1,CLSE0000             END OF DATA ROUTINE ADDRESS
         STCM  R1,7,DCBEODAD+1         INSERT ROUTINE ADDRESS IN DCB
         OPEN  ((R2),INPUT)            OPEN CONTROL FILE
         BAL   R9,HEADINGS             PRINT HEADINGS
READ0010 DS    0H
         LA    R2,SYSIN
         GET   (R2),CARDAREA           READ A CONTROL RECORD
         MVC   PLINE+1(L'CARDAREA),CARDAREA
         MVI   PLINE,C'0'              DOUBLE SPACE
         BAL   R9,PRT0000              PRINT CONTROL CARD
         CLI   CARDAREA,C'*'           COMMENT CARD??
         BE    READ0010                YES
         MVC   PLINE,PLINE-1           CLEAR PRINT LINE
*---------------------------------------------------------------------*
*                                                                     *
*           CHECK FOR KEYWORDS                                        *
*                                                                     *
*       WITHIN THE KEYWORD PROCESSING ROUTINES REGISTER USAGE IS:     *
*       R7  CURRENT ADDRESS IN WORK AREA                              *
*       R3  ADDRESS OF NUMERIC TARGETS                                *
*                                                                     *
*---------------------------------------------------------------------*
PARM0000 DS    0H
         LA    R7,CARDAREA             INITIALIZE CURRENT ADDRESS REG
PARM0010 DS    0H
         CLI   0(R7),C' '              END OF CARD?
         BE    READ0010                YES
         CLC   =C'SKIP=',0(R7)         SKIP CONTROL CARD?
         BE    SKIP0000                YES
         CLC   =C'COUNT=',0(R7)        COUNT CONTROL CARD?
         BE    COUNT000                YES
         CLC   =C'MAXLINES=',0(R7)     OUTPUT LINES LIMIT CARD?
         BE    MAXL0000                YES
         CLC   =C'SCAN=',0(R7)         SCAN1 VALUE CONTROL CARD?
         BE    SCAN1010                YES
         CLC   =C'SCAN1=',0(R7)        SCAN1 VALUE CONTROL CARD?
         BE    SCAN1000                YES
         CLC   =C'ZONE=',0(R7)         ZONE1 CONTROL CARD?
         BE    ZONE1010                YES
         CLC   =C'ZONE1=',0(R7)        ZONE1 CONTROL CARD?
         BE    ZONE1000                YES
         CLC   =C'SCAN2=',0(R7)        SCAN2 VALUE CONTROL CARD?
         BE    SCAN2000                YES
         CLC   =C'ZONE2=',0(R7)        ZONE2 CONTROL CARD?
         BE    ZONE2000                YES
         CLC   =C'TZONE=',0(R7)        TRIGGER ZONE CARD?
         BE    TZONE000                YES
         CLC   =C'TRIGGER=',0(R7)      TRIGGER CONTROL CARD?
         BE    TRGR0000                YES
         CLC   =C'TITLE=',0(R7)        TITLE CONTROL CARD?
         BE    TITLE000                YES
         CLC   =C'NOHEX',0(R7)         NO HEX?
         BE    NOHEX000                YES
         CLC   =C'SINGLE',0(R7)        SINGLE SPACING REQUEST??
         BE    SPCE0000                YES
         CLC   =C'SCANCTRL',0(R7)      SCAN CONTROL REQUEST??
         BE    SCTRL000                YES
         CLC   =C'COPY',0(R7)          COPY REQUEST??
         BE    COPY0000                YES
         CLC   =C'HELP',0(R7)          HELP REQUEST??
         BE    HELP0000                YES
         CLC   =C'FIRST100',0(R7)      FIRST100 REQUEST??
         BE    FIRST100                YES
         OI    COMFLAG,$ERROR          TURN ON ERROR INDICATOR
         MVC   PLINE,MSG0006           INVALID PARAMETER
         BAL   R9,PRT0000              PRINT MESSAGE
         B     READ0010                READ NEXT STATEMENT
SPCE0000 DS    0H
         LA    R7,7(R7)                POINT PAST KEYWORD
         MVI   COMSPACE,$SINGLE        SET SINGLE SPACING
         B     PARM0010                SEARCH FOR MORE KEYWORDS
NOHEX000 DS    0H
         MVI   COMHEX,C' '             SET NO HEX FLAG
         LA    R7,6(R7)                POINT PAST KEYWORD
         B     PARM0010                SEARCH FOR MORE KEYWORDS
SKIP0000 DS    0H
         LA    R7,5(R7)                POINT TO END OF KEYWORD
         OI    COMFLAG,$SKIP           INDICATE SKIP REQUESTED
         LA    R3,COMSKIP              POINT TO OUTPUT AREA
         BAL   R8,CNV0000              CONVERT QUANTITY
         B     PARM0010                CHECK FOR MORE PARAMETERS
COUNT000 DS    0H
         LA    R7,6(R7)                POINT END OF KEYWORD
         LA    R3,COMCOUNT             POINT TO OUTPUT AREA
         OI    COMFLAG,$COUNT          TURN ON COUNT FLAG
         BAL   R8,CNV0000              GO CONVERT AMOUNT
         B     PARM0010                CHECK FOR MORE PARAMETERS
MAXL0000 DS    0H
         LA    R7,9(R7)                POINT END OF KEYWORD
         LA    R3,COMMAXL              POINT TO OUTPUT AREA
         BAL   R8,CNV0000              GO CONVERT AMOUNT
         ST    R2,COMMAXL  *MICKEY-MOUSE*  STORE MAX LINES
         B     PARM0010                CHECK FOR MORE PARAMETERS
COPY0000 DS    0H
         MVI   COMCOPY,$COPY           SET COPY FLAG
         LA    R7,5(R7)                POINT PAST KEYWORD
         B     PARM0010                SEARCH FOR MORE KEYWORDS
HELP0000 DS    0H
         MVI   COMHELP,$HELP           SET HELP FLAG
         LA    R7,5(R7)                POINT PAST KEYWORD
         B     PARM0010                SEARCH FOR MORE KEYWORDS
FIRST100 DS    0H
         OI    COMFLAG,$100            SET FIRST100 FLAG
         LA    R7,9(R7)                POINT PAST KEYWORD
         B     PARM0010                SEARCH FOR MORE KEYWORDS
SCTRL000 DS    0H
         LA    R7,9(R7)                POINT END OF KEYWORD
         OI    COMFLAG,$SCTRL          TURN ON SCAN CONTROL FLAG
         CLC   =C'1 AND 2',0(R7)       REQUEST FOR 1 AND 2??
         BNE   SCTRL010                NO
         MVI   COMSCTRL,$AND           SET 'AND' INDICATOR
         LA    R7,8(R7)                ADVANCE INPUT ADDRESS
         B     PARM0010                LOOK FOR MORE PARAMETERS
SCTRL010 DS    0H
         CLC   =C'1 OR 2',0(R7)        REQUEST FOR 1 OR 2??
         BNE   SCTRL020                NO
         MVI   COMSCTRL,$OR            SET 'OR' INDICATOR
         LA    R7,7(R7)                ADVANCE INPUT ADDRESS
         B     PARM0010                CHECK FOR MORE PARAMETERS
SCTRL020 DS    0H
         MVC   PLINE,MSG0009           MOVE MESSAGE
         BAL   R9,PRT0000              PRINT MESSAGE
         OI    COMFLAG,$ERROR          INDICATE ERROR OCCURRED
         B     READ0010                BYPASS REMAINDER OF CARD
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*           PROCESS SCAN/TRIGGER/OR TITLE                             *
*                                                                     *
*---------------------------------------------------------------------*
SCAN1000 DS    0H
         LA    R7,1(R7)                ADVANCE 1 EXTRA BYTE
SCAN1010 DS    0H
         LA    R7,5(R7)                POINT TO SCAN VALUE
         MVI   HEXFLAG,C' '            TURN OFF HEX INDICATOR
         CLC   =C'X''',0(R7)           HEX VALUE??
         BNE   SCAN1020                NO
         MVI   HEXFLAG,$HEX            INDICATE HEX SCAN VALUE
         LA    R7,1(R7)                BYPASS HEX INDICATOR
SCAN1020 DS    0H
         BAL   R8,SCAN5000             BEGIN INTREPRETING SCAN CARD
         MVC   COMSCAN1,SCANDATA       MOVE SCAN DATA
         LH    R15,SCANLEN             SCAN PARAMETER LENGTH
         BCTR  R15,0                   MINUS 1 FOR EXECUTES
         CLI   HEXFLAG,$HEX            WAS SCAN 'HEX'??
         BNE   SCAN1030                NO
         TM    SCANLEN+1,X'01'         IS LENGTH ODD??
         BO    SCAN1040                YES
         EX    R15,HEXTRT              TEST DATA
         BNZ   SCAN5120                INVALID HEX DATA
         EX    R15,HEXTR               TRANSLATE FOR PACKING
         SRL   R15,1                   DIVIDE BY 2
         PACK  COMSCAN1+00(6),SCANDATA+00(11)
         PACK  COMSCAN1+05(6),SCANDATA+10(11)
         PACK  COMSCAN1+10(6),SCANDATA+20(11)
         PACK  COMSCAN1+15(6),SCANDATA+30(11)
         PACK  COMSCAN1+20(6),SCANDATA+40(11)
         PACK  COMSCAN1+25(6),SCANDATA+50(11)
         PACK  COMSCAN1+30(6),SCANDATA+60(11)
         PACK  COMSCAN1+35(6),SCANDATA+70(11)
SCAN1030 DS    0H
         LA    R15,1(R15)              RESTORE FULL LENGTH
         STH   R15,COMSCN1L            SAVE LENGTH OF SEARCH ARGUEMENT
         OI    COMSCN1F,$SCAN1         SCAN IN EFFECT
         B     PARM0010                SEARCH FOR MORE KEYWORDS
SCAN1040 DS    0H
         OI    COMFLAG,$ERROR          TURN ON ERROR INDICATOR
         MVC   PLINE,MSG0001           MOVE ERROR MESSAGE
         BAL   R9,PRT0000              PRINT ERROR MESSAGE
         B     PARM0010                SEARCH FOR MORE KEYWORDS
SCAN2000 DS    0H
         LA    R7,6(R7)                POINT TO SCAN VALUE
         MVI   HEXFLAG,C' '            TURN OFF HEX INDICATOR
         CLC   =C'X''',0(R7)           HEX VALUE??
         BNE   SCAN2010                NO
         MVI   HEXFLAG,$HEX            INDICATE HEX SCAN VALUE
         LA    R7,1(R7)                BYPASS HEX INDICATOR
SCAN2010 DS    0H
         BAL   R8,SCAN5000             BEGIN INTREPRETING SCAN CARD
         MVC   COMSCAN2,SCANDATA       MOVE SCAN DATA
         LH    R15,SCANLEN             SCAN PARAMETER LENGTH
         BCTR  R15,0                   MINUS 1 FOR EXECUTES
         CLI   HEXFLAG,$HEX            WAS SCAN 'HEX'??
         BNE   SCAN2020                NO
         TM    SCANLEN+1,X'01'         IS LENGTH ODD??
         BO    SCAN2030                YES
         EX    R15,HEXTRT              TEST DATA
         BNZ   SCAN5120                INVALID HEX DATA
         EX    R15,HEXTR               TRANSLATE FOR PACKING
         SRL   R15,1                   DIVIDE BY 2
         PACK  COMSCAN2+00(6),SCANDATA+00(11)
         PACK  COMSCAN2+05(6),SCANDATA+10(11)
         PACK  COMSCAN2+10(6),SCANDATA+20(11)
         PACK  COMSCAN2+15(6),SCANDATA+30(11)
         PACK  COMSCAN2+20(6),SCANDATA+40(11)
         PACK  COMSCAN2+25(6),SCANDATA+50(11)
         PACK  COMSCAN2+30(6),SCANDATA+60(11)
         PACK  COMSCAN2+35(6),SCANDATA+70(11)
SCAN2020 DS    0H
         LA    R15,1(R15)              RESTORE FULL LENGTH
         STH   R15,COMSCN2L            SAVE LENGTH OF SEARCH ARGUEMENT
         OI    COMSCN2F,$SCAN2         SCAN IN EFFECT
         B     PARM0010                SEARCH FOR MORE KEYWORDS
SCAN2030 DS    0H
         OI    COMFLAG,$ERROR          TURN ON ERROR INDICATOR
         MVC   PLINE,MSG0001           MOVE ERROR MESSAGE
         BAL   R9,PRT0000              PRINT ERROR MESSAGE
         B     PARM0010                SEARCH FOR MORE KEYWORDS
TRGR0000 DS    0H
         LA    R7,8(R7)                POINT TO SCAN VALUE
         MVI   HEXFLAG,C' '            TURN OFF HEX INDICATOR
         CLC   =C'X''',0(R7)           HEX VALUE??
         BNE   TRGR0010                NO
         MVI   HEXFLAG,$HEX            INDICATE HEX SCAN VALUE
         LA    R7,1(R7)                BYPASS HEX INDICATOR
TRGR0010 DS    0H
         BAL   R8,SCAN5000             BEGIN INTREPRETING SCAN CARD
         MVC   COMTRGR,SCANDATA        MOVE SCAN DATA
         LH    R15,SCANLEN             SCAN PARAMETER LENGTH
         BCTR  R15,0                   MINUS 1 FOR EXECUTES
         CLI   HEXFLAG,$HEX            WAS VALUE HEX??
         BNE   TRGR0020                NO
         TM    SCANLEN+1,X'01'         IS LENGTH ODD??
         BO    TRGR0030                YES
         EX    R15,HEXTRT              TEST DATA
         BNZ   SCAN5120                INVALID HEX DATA
         EX    R15,HEXTR               TRANSLATE FOR PACKING
         SRL   R15,1                   DIVIDE BY 2
         PACK  COMTRGR+00(6),SCANDATA+00(11)
         PACK  COMTRGR+05(6),SCANDATA+10(11)
         PACK  COMTRGR+10(6),SCANDATA+20(11)
         PACK  COMTRGR+15(6),SCANDATA+30(11)
         PACK  COMTRGR+20(6),SCANDATA+40(11)
         PACK  COMTRGR+25(6),SCANDATA+50(11)
         PACK  COMTRGR+30(6),SCANDATA+60(11)
         PACK  COMTRGR+35(6),SCANDATA+70(11)
TRGR0020 DS    0H
         LA    R15,1(R15)              RESTORE FULL LENGTH
         STH   R15,COMTRGL             SAVE LENGTH OF SEARCH ARGUEMENT
         OI    COMTRGRF,$TRIGGER       SCAN IN EFFECT
         B     PARM0010                SEARCH FOR MORE KEYWORDS
TRGR0030 DS    0H
         OI    COMFLAG,$ERROR          TURN ON ERROR INDICATOR
         MVC   PLINE,MSG0001           MOVE ERROR MESSAGE
         BAL   R9,PRT0000              PRINT ERROR MESSAGE
         B     PARM0010                SEARCH FOR MORE KEYWORDS
TITLE000 DS    0H
         LA    R7,6(R7)                POINT TO SCAN VALUE
         BAL   R8,SCAN5000             BEGIN INTERPRET TITLE
         MVC   COMTITLE,SCANDATA       MOVE SCAN DATA
         B     PARM0010                CONTINUE SCANNING PARAMETERS
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*           PROCESS SCAN/TRIGGER/ OR TITLE VALUES                     *
*                                                                     *
*---------------------------------------------------------------------*
SCAN5000 DS    0H
         MVC   SCANDATA,SCANDATA-1     INITIALIZE WORK AREA
         LA    R1,SCANDATA             START OF SCAN WORK AREA
         SR    R2,R2                   ZERO LENGTH
         CLI   0(R7),X'7D'             OPENING QUOTE?
         BNE   SCAN5100                NO ???
         LA    R7,1(R7)                ADD 1 TO ADDRESS
SCAN5010 DS    0H
         CLI   0(R7),X'7D'             QUOTE?
         BE    SCAN5040                YES
SCAN5020 DS    0H
         MVC   0(1,R1),0(R7)           MOVE TO OUTPUT VALUE
         LA    R1,1(R1)                ADD 1 TO ADDRESS
         LA    R2,1(R2)                ADD 1 TO LENGTH
SCAN5030 DS    0H
         LA    R7,1(R7)                ADD 1 TO ADDRESS
         C     R1,=A(SCANDATA+70)      END OF WORK AREA?
         BE    SCAN5110                YES... NO ENDING QUOTE
         B     SCAN5010                CONTINUE
SCAN5040 DS    0H
         CLI   1(R7),X'7D'             DOUBLE QUOTE?
         BNE   SCAN5050                NO
         LA    R7,1(R7)                ADD 1 TO ADDRESS
         B     SCAN5020                MOVE IT INTO OUTPUT
SCAN5050 DS    0H
         STH   R2,SCANLEN              SAVE LENGTH
         LA    R7,2(R7)                POINT TO NEXT PARAMETER
         BR    R8                      RETURN
SCAN5100 DS    0H
         OI    COMFLAG,$ERROR          TURN ON ERROR INDICATOR
         MVC   PLINE,MSG0002           MOVE MESSAGE
         BAL   R9,PRT0000              PRINT ERROR MESSAGE
         B     READ0010                BYPASS REMAINDER OF THIS CARD
SCAN5110 DS    0H
         OI    COMFLAG,$ERROR          TURN ON ERROR INDICATOR
         MVC   PLINE,MSG0003           MOVE MESSAGE
         BAL   R9,PRT0000              PRINT ERROR MESSAGE
         B     READ0010                BYPASS REMAINDER OF THIS CARD
SCAN5120 DS    0H
         OI    COMFLAG,$ERROR          TURN ON ERROR INDICATOR
         MVC   PLINE,MSG0008           MOVE MESSAGE
         BAL   R9,PRT0000              PRINT ERROR MESSAGE
         B     PARM0010                SEARCH FOR MORE PARAMETERS
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*           PROCESS ZONE FOR SCAN OR TRIGGER                          *
*                                                                     *
*---------------------------------------------------------------------*
ZONE1000 DS    0H
         LA    R7,1(R7)                1 EXTRA FOR ZONE1
ZONE1010 DS    0H
         LA    R7,5(R7)                POINT PAST KEYWORD
         LA    R3,COMZ1BGN             POINT TO ZONE START
         BAL   R8,CNV0000              CONVERT NUMBER
         OC    COMZ1BGN,COMZ1BGN       STARTING POSITION ZERO??
         BZ    ZONE1020                NO STARTING POSITION
         OI    COMSCN1F,$Z1BGN         ZONE1 STARTING FLAG
ZONE1020 DS    0H
         CLI   0(R7),C' '              ENDING ZONE PRESENT??
         BE    READ0010                NO
         CLI   0(R7),C','              ENDING ZONE PRESENT??
         BE    ZONE1030                NO
         LA    R3,COMZ1END             POINT TO ZONE END
         BAL   R8,CNV0000              CONVERT NUMBER
         CLC   COMZ1END,COMZ1BGN       IS BEGIN LARGER THAN END?
         BL    ZONE5000                YES
         OC    COMZ1END,COMZ1END       LOAD ENDING POSITION
         BZ    ZONE5000                BAD ZONE
         OI    COMSCN1F,$Z1END         ZONE END FLAG
         B     PARM0010                CHECK FOR MORE PARAMETERS
ZONE1030 DS    0H
         LA    R7,1(R7)                ADVANCE INPUT ADDRESS
         B     PARM0010                CHECK FOR MORE PARAMETERS
ZONE2000 DS    0H
         LA    R7,6(R7)                POINT PAST KEYWORD
         LA    R3,COMZ2BGN             POINT TO ZONE START
         BAL   R8,CNV0000              CONVERT NUMBER
         OC    COMZ2BGN,COMZ2BGN       STARTING POINT ZERO??
         BZ    ZONE2010                NO STARTING POSITION
         OI    COMSCN2F,$Z2BGN         ZONE2 STARTING FLAG
ZONE2010 DS    0H
         CLI   0(R7),C' '              ENDING ZONE PRESENT??
         BE    READ0010                NO
         CLI   0(R7),C','              ENDING ZONE PRESENT??
         BE    ZONE1030                NO
         LA    R3,COMZ2END             POINT TO ZONE END
         BAL   R8,CNV0000              CONVERT NUMBER
         CLC   COMZ2END,COMZ2BGN       IS BEGIN LARGER THAN END?
         BL    ZONE5000                NO
         OC    COMZ2END,COMZ2END       ENDING POSITION ZERO??
         BZ    ZONE5000                BAD ZONE
         BCTR  R1,0                    CONVERT TO OFFSET
         STH   R1,COMZ2END             SAVE ENDING OFFSET
         OI    COMSCN2F,$Z2END         ZONE END FLAG
         B     PARM0010
TZONE000 DS    0H
         LA    R7,6(R7)                POINT PAST KEYWORD
         LA    R3,COMTZBGN             POINT TO ZONE START
         BAL   R8,CNV0000              CONVERT NUMBER
         OC    COMTZBGN,COMTZBGN       LOAD STARTING POSITION
         BZ    TZONE010                NO STARTING POSITION
         OI    COMTRGRF,$TZBGN         TRIGGER STARTING FLAG
TZONE010 DS    0H
         CLI   0(R7),C' '              ENDING ZONE PRESENT??
         BE    READ0010                NO
         CLI   0(R7),C','              ENDING ZONE PRESENT??
         BE    ZONE1030                NO
         LA    R3,COMTZEND             POINT TO ZONE END
         BAL   R8,CNV0000              CONVERT NUMBER
         CLC   COMTZEND,COMTZBGN       IS BEGIN LARGER THAN END?
         BL    ZONE5000                NO
         OC    COMTZEND,COMTZEND       ENDING POSITION ZERO??
         BZ    ZONE5000                BAD ZONE
         OI    COMTRGRF,$TZEND         ZONE END FLAG
         B     PARM0010
ZONE5000 DS    0H
         OI    COMFLAG,$ERROR          TURN ON ERROR INDICATOR
         MVC   PLINE,MSG0004           MOVE MESSAGE
         BAL   R9,PRT0000              PRINT MESSAGE
         B     PARM0010                CONTINUE PROCESSING PARAMETERS
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*           CONVERT CHARACTER TO BINARY                               *
*                                                                     *
*---------------------------------------------------------------------*
CNV0000  DS    0H
         TRT   0(12,R7),NUMTAB         SCAN NUMBER
         BZ    CNV0030                 BAD NUMBER
         CLI   0(R1),C' '              STOP ON A BLANK??
         BE    CNV0010                 YES
         CLI   0(R1),C','              STOP ON A COMMA??
         BNE   CNV0030                 NO .. INVALID NUMERIC DATA
         XC    0(2,R3),0(R3)           ZERO RESULT
CNV0010  DS    0H
         SR    R1,R7                   COMPUTE LENGTH OF NUMBER
         BZ    CNV0020                 NUMBER OMITTED
         BCTR  R1,0                    REDUCE BY 1 FOR EXECUTES
         MVC   CNVBEGIN,CNVBEGIN-1     INITIALIZE
         LA    R2,CNVBEGIN+10          POINT AT CONVERT BEGIN
         SR    R2,R1                   COMPUTE STARTING ADDRESS
         EX    R1,CNVMOVE              MOVE NUMBER TO STARTING
         PACK  DWORD,CNVBEGIN          PACK THE VALUE
         CVB   R2,DWORD                CONVERT IT TO BINARY
         STH   R2,0(R3)                SAVE AMOUNT
         LA    R7,2(R1,R7)             POINT TO NEXT PARAMETER
         BR    R8                      RETURN
CNV0020  DS    0H
         LA    R7,1(R7)                POINT TO NEXT FIELD
         BR    R8                      PROCESSING COMPLETE
CNV0030  DS    0H
         MVC   PLINE,MSG0005           MOVE MESSAGE
         BAL   R9,PRT0000              PRINT MESSAGE
         B     PARM0010                CONTINUE PROCESSING PARAMETERS
CNVMOVE  MVC   0(0,R2),0(R7)           MOVE FOR PACKING
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*           PRINTING/HEADING ROUTINES                                 *
*                                                                     *
*---------------------------------------------------------------------*
PRT0000  DS    0H
         LA    R2,PRINTER
         PUT   (R2),PRCC               PRINT
         AP    COMLINE,P1              ADD 1 TO LINE COUNTER
         CLI   PRCC,C' '               SINGLE SPACE??
         BE    PRT0010                 YES
         AP    COMLINE,P1              ADD 1 TO LINE COUNTER
         CLI   PRCC,C'0'               DOUBLE SPACE??
         BE    PRT0010                 YES
         AP    COMLINE,P1              ADD 1 TO LINE COUNTER
PRT0010  DS    0H
         CP    COMLINE,P65             TIME FOR HEADINGS?
         BLR   R9                      NO
HEADINGS DS    0H
         AP    COMPAGE,P1              ADD 1 TO PAGE COUNT
         MVC   PRPAGE,=X'402020202120' EDIT WORD
         ED    PRPAGE,COMPAGE          EDIT PAGE NUMBER
         LA    R2,PRINTER
         PUT   (R2),HEADING            PRINT PAGE HEADING
         PUT   (R2),HELPHEAD           PRINT 'HELP' HEADING
         ZAP   COMLINE,P3              RESET LINE COUNT
         BR    R9                      RETURN
CLSE0000 DS    0H
         LA    R2,SYSIN
         CLOSE ((R2))                  CLOSE SYSIN
PHSE0000 DS    0H
         L     R15,VPH1                ADDRESS OF NEXT PHASE
         BR    R15                     CONTINUE WITH NEXT PHASE
HEXTRT   TRT   SCANDATA(0),HEXTAB1     TEST HEX DATA
HEXTR    TR    SCANDATA(0),HEXTAB2     TRANSLATE DATA FOR PACKING
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*                     WORKAREAS                                       *
*                                                                     *
*---------------------------------------------------------------------*
DWORD    DC    D'0'                    FOR CVB'S
VCOMM    DC    V(FILECOMM)             ADDRESS OF 'COMMON'
VPH1     DC    V(FILEPH01)             ADDRESS OF PHASE '01'
TIOTADDR DC    F'0'
SCANLEN  DC    H'0'                    LENGTH OF SCAN/TRIGGER/TITLE
         DC    C' '
SCANDATA DC    CL80' '                 SCAN/TRIGGER/ OR TITLE DATA
P0       DC    P'0'
P1       DC    P'1'
P3       DC    P'3'
P65      DC    P'65'
HEXFLAG  DC    X'00'
         DC    C'0'
CNVBEGIN DC    CL11'0'                 CONVERSION BEGINNING
         DC    C' '
PLINE    DS    0CL121
PRCC     DC    C' '                    CARRIAGE CONTROL
PAREA    DC    CL120' '                PRINT AREA
CARDAREA DC    CL80' '                 CARD FILE I/O AREA
HEADING  DS    0C
         DC    C'1'
         DC    CL109'       FILE UTILITY CONTROL STATEMENTS'
         DC    C'PAGE '
PRPAGE   DC    CL6' '
HELPHEAD DC    CL121'0 FOR A LIST OF PARAMETERS AND THEIR USAGE SPECIFY+
                ''HELP'' ON A CONTROL STATEMENT'
         LTORG
MSG0001  DC    CL121'  HEX STRING HAS ODD NUMBER OF CHARACTERS'
MSG0002  DC    CL121'  NO OPEN QUOTE FOR SCAN, TRIGGER, OR TITLE'
MSG0003  DC    CL121'  NO CLOSING QUOTE FOR SCAN, TRIGGER, OR TITLE'
MSG0004  DC    CL121'  INVALID ZONE FOR SCAN OR TRIGGER'
MSG0005  DC    CL121'  INVALID NUMERIC VALUE'
MSG0006  DC    CL121'  UNKNOWN PARAMETER'
MSG0007  DC    CL121'  INVALID ZONE FOR SCAN OR TRIGGER'
MSG0008  DC    CL121'  INVALID HEX DATA'
MSG0009  DC    CL121'  INVALID SCANCTRL VALUE (MUST BE ''1 AND 2'' OR '+
               '1 OR 2'')'
*---------------------------------------------------------------------*
*                                                                     *
*                                                                     *
*                                                                     *
*---------------------------------------------------------------------*
NUMTAB   DC    256X'FF'
         ORG   NUMTAB+C'0'
         DC    10X'00'
         ORG   NUMTAB+256
HEXTAB1  DC    256X'FF'
         ORG   HEXTAB1+C'A'
         DC    06X'00'
         ORG   HEXTAB1+C'0'
         DC    10X'00'
         ORG   HEXTAB1+256
HEXTAB2  DC    256X'00'
         ORG   HEXTAB2+C'A'
         DC    X'AABBCCDDEEFF'
         ORG   HEXTAB2+C'0'
         DC    X'00112233445566778899'
         ORG   HEXTAB2+256
         SPACE
*---------------------------------------------------------------------*
*                                                                     *
*                     DSECTS                                          *
*                                                                     *
*---------------------------------------------------------------------*
FILECOMM DSECT
         FILECOMM
         DCBD  DSORG=PS
         PRINT NOGEN
         DSECT                                                          WMW26810
         IEFTIOT1                                                       WMW26820
         PRINT GEN
         SPACE
*---------------------------------------------------------------------*
*                                                                     *
*                     REGISTER EQUATES                                *
*                                                                     *
*---------------------------------------------------------------------*
         COPY  REGEQU
         END   FILEPH00
./ ADD NAME=FILEPH01 0100-02291-02291-0123-00394-00394-00000-RLRICE
*---------------------------------------------------------------------*
*                                                                     *
*           THIS PHASE:                                               *
*              1) CROSS CHECKS PARAMETERS                             *
*              2) INITIALIZES SCAN AND TRIGGER TABLES                 *
*                                                                     *
*---------------------------------------------------------------------*
FILEPH01 CSECT
         USING FILEPH01,R15            SPECIFY CSECT BASE
         ID                            DATE AND TIME COMPILED
         LR    R10,R15                 COPY BASE ADDRESS
         LA    R11,2048(R10)           SET 2ND BASE
         LA    R11,2048(R11)           .. 4K FROM FIRST BASE
         DROP  R15                     DROP PREVIOUS BASE
         USING FILEPH01,R10,R11        RESUME WITH NEW BASE
         L     R12,VCOMM               COMMON MODULE ADDRESS
         USING FILECOMM,R12            DEFINE COMMON BASE
         USING IHADCB,R2               DEFINE DCB DSECT BASE
         CLI   COMHELP,$HELP           HELP REQUESTED??
         BE    HELP0000                YES
         TM    COMFLAG,$100            FIRST100 REQUESTED??
         BO    FIRST100                YES
*---------------------------------------------------------------------*
*                                                                     *
*           CROSS CHECK SCAN AND ZONE PARAMETERS                      *
*                                                                     *
*---------------------------------------------------------------------*
TEST0000 DS    0H
         TM    COMSCN1F,$SCAN1         IS SCAN 1 IN EFFECT??            WMW02330
         BO    TEST0020                YES                              WMW08140
         TM    COMSCN1F,$Z1BGN         IS ZONE BEGIN IN EFFECT??        WMW08150
         BO    TEST0010                YES .. NOT ALLOWED               WMW08160
         TM    COMSCN1F,$Z1END         IS ZONE END IN EFFECT??          WMW08180
         BNO   TEST0020                NO                               WMW08190
TEST0010 DS    0H                                                       WMW08200
         MVC   PLINE,MSG0001           MOVE MESSAGE                     WMW08210
         BAL   R9,PRT0000              PRINT IT                         WMW08220
         OI    COMFLAG,$ERROR          SET ERROR INDICATOR              WMW08390
TEST0020 DS    0H                                                       WMW08400
         TM    COMSCN2F,$SCAN2         IS SCAN 2 IN EFFECT??            WMW02330
         BO    TEST0040                YES                              WMW08140
         TM    COMSCN2F,$Z2BGN         IS ZONE BEGIN IN EFFECT??        WMW08150
         BO    TEST0030                YES .. NOT ALLOWED               WMW08160
         TM    COMSCN2F,$Z2END         IS ZONE END IN EFFECT??          WMW08180
         BNO   TEST0040                NO                               WMW08190
TEST0030 DS    0H                                                       WMW08200
         MVC   PLINE,MSG0002           MOVE MESSAGE                     WMW08210
         BAL   R9,PRT0000              PRINT IT                         WMW08220
         OI    COMFLAG,$ERROR          SET ERROR INDICATOR              WMW08390
TEST0040 DS    0H                                                       WMW08400
         TM    COMTRGRF,$TRIGGER       IS TRIGGER IN EFFECT??           WMW02330
         BO    TEST0060                YES                              WMW08140
         TM    COMTRGRF,$TZBGN         IS ZONE BEGIN IN EFFECT??        WMW08150
         BO    TEST0050                YES .. NOT ALLOWED               WMW08160
         TM    COMTRGRF,$TZEND         IS ZONE END IN EFFECT??          WMW08180
         BNO   TEST0060                NO                               WMW08190
TEST0050 DS    0H                                                       WMW08200
         MVC   PLINE,MSG0003           MOVE MESSAGE                     WMW08210
         BAL   R9,PRT0000              PRINT IT                         WMW08220
         OI    COMFLAG,$ERROR          SET ERROR INDICATOR              WMW08390
*---------------------------------------------------------------------*
*                                                                     *
*           CROSS CHECK SCAN1, SCAN2, AND SCANCTRL                    *
*                                                                     *
*---------------------------------------------------------------------*
TEST0060 DS    0H                                                       WMW08400
         TM    COMSCN2F,$SCAN2         SCAN2 SPECIFIED??
         BNO   TEST0065                NO
         TM    COMSCN1F,$SCAN1         SCAN1 SPECIFIED??
         BO    TEST0065                YES
         MVC   PLINE,MSG0021           MOVE MESSAGES
         OI    COMFLAG,$ERROR          INDICATE ERROR
         BAL   R9,PRT0000              PRINT MESSAGE
TEST0065 DS    0H
         TM    COMFLAG,$SCTRL          SCAN CONTROL SPECIFIED??
         BNO   TEST0080                NO
         TM    COMSCN1F,$SCAN1         WAS SCAN 1 SPECIFIED??
         BNO   TEST0070                NO .. NOT ALLOWED
         TM    COMSCN2F,$SCAN2         WAS SCAN 2 SPECIFIED??
         BO    TEST0080                YES
TEST0070 DS    0H                                                       WMW08200
         MVC   PLINE,MSG0004           MOVE MESSAGE                     WMW08210
         BAL   R9,PRT0000              PRINT IT                         WMW08220
         OI    COMFLAG,$ERROR          SET ERROR INDICATOR              WMW08390
*---------------------------------------------------------------------*
*                                                                     *
*           CHECK ZONE(S) AGAINST DCB MAXIMUM RECORD LENGTH           *
*                                                                     *
*---------------------------------------------------------------------*
TEST0080 DS    0H                                                       WMW08200
         TM    COMSCN1F,$SCAN1         SCAN1 IN EFFECT??
         BNO   TEST0100                NO
         LA    R2,SYSUT1               DCB ADDRESS
         TM    COMSCN1F,$Z1BGN         ZONE BEGIN GIVEN??
         BNO   TEST0090                NO
         CLC   COMZ1BGN,DCBLRECL       TOO LARGE??
         BNH   TEST0090                NO
         MVC   PLINE,MSG0005           MOVE MESSAGE                     WMW08210
         BAL   R9,PRT0000              PRINT IT                         WMW08220
         OI    COMFLAG,$ERROR          SET ERROR INDICATOR              WMW08390
TEST0090 DS    0H
         TM    COMSCN1F,$Z1END         ZONE END GIVEN??
         BNO   TEST0100                NO
         CLC   COMZ1END,DCBLRECL       TOO LARGE??
         BNH   TEST0100                NO
         MVC   PLINE,MSG0006           MOVE MESSAGE                     WMW08210
         BAL   R9,PRT0000              PRINT IT                         WMW08220
         OI    COMFLAG,$ERROR          SET ERROR INDICATOR              WMW08390
TEST0100 DS    0H
         TM    COMSCN2F,$SCAN2         SCAN2 IN EFFECT??
         BNO   TEST0120                NO
         LA    R2,SYSUT1               DCB ADDRESS
         TM    COMSCN2F,$Z2BGN         ZONE BEGIN GIVEN??
         BNO   TEST0110                NO
         CLC   COMZ2BGN,DCBLRECL       TOO LARGE??
         BNH   TEST0110                NO
         MVC   PLINE,MSG0007           MOVE MESSAGE                     WMW08210
         BAL   R9,PRT0000              PRINT IT                         WMW08220
         OI    COMFLAG,$ERROR          SET ERROR INDICATOR              WMW08390
TEST0110 DS    0H
         TM    COMSCN2F,$Z2END         ZONE END GIVEN??
         BNO   TEST0120                NO
         CLC   COMZ2END,DCBLRECL       TOO LARGE??
         BNH   TEST0120                NO
         MVC   PLINE,MSG0008           MOVE MESSAGE                     WMW08210
         BAL   R9,PRT0000              PRINT IT                         WMW08220
         OI    COMFLAG,$ERROR          SET ERROR INDICATOR              WMW08390
TEST0120 DS    0H
         TM    COMTRGRF,$TRIGGER       TRIGGER IN EFFECT??
         BNO   TEST0140                NO
         LA    R2,SYSUT1               DCB ADDRESS
         TM    COMTRGRF,$TZBGN         ZONE BEGIN GIVEN??
         BNO   TEST0130                NO
         CLC   COMTZBGN,DCBLRECL       TOO LARGE??
         BNH   TEST0130                NO
         MVC   PLINE,MSG0009           MOVE MESSAGE                     WMW08210
         BAL   R9,PRT0000              PRINT IT                         WMW08220
         OI    COMFLAG,$ERROR          SET ERROR INDICATOR              WMW08390
TEST0130 DS    0H
         TM    COMTRGRF,$TZEND         ZONE END GIVEN??
         BNO   TEST0140                NO
         CLC   COMTZEND,DCBLRECL       TOO LARGE??
         BNH   TEST0150                NO
         MVC   PLINE,MSG0010           MOVE MESSAGE                     WMW08210
         BAL   R9,PRT0000              PRINT IT                         WMW08220
         OI    COMFLAG,$ERROR          SET ERROR INDICATOR              WMW08390
*---------------------------------------------------------------------*
*                                                                     *
*           CHECK NOHEX AGAINST SPACING                               *
*                                                                     *
*---------------------------------------------------------------------*
TEST0140 DS    0H
         CLI   COMHEX,$HEX             PRINT HEX??
         BNE   TEST0150                NO
         CLI   COMSPACE,$SINGLE        SINGLE SPACING REQUESTED??
         BNE   TEST0150                NO
         MVC   PLINE,MSG0014           MOVE MESSAGE                     WMW08210
         BAL   R9,PRT0000              PRINT IT                         WMW08220
         OI    COMFLAG,$ERROR          SET ERROR INDICATOR              WMW08390
*---------------------------------------------------------------------*
*                                                                     *
*           CHECK ZONE WIDTH'S AGAINST SCAN ARGUEMENTS                *
*                                                                     *
*---------------------------------------------------------------------*
TEST0150 DS    0H
         TM    COMSCN1F,$SCAN1         SCAN 1 IN EFFECT??
         BNO   TEST0170                NO
         TM    COMSCN1F,$Z1BGN+$Z1END  USING START AND END??
         BNO   TEST0160                NO
         LH    R1,COMZ1END             END OF ZONE
         SH    R1,COMZ1BGN             MINUS START OF ZONE
         LA    R1,1(R1)                FULL NUMBER OF COLUMNS
         CH    R1,COMSCN1L             ZONE TOO SMALL??
         BNL   TEST0160                NO
         MVC   PLINE,MSG0011           MOVE MESSAGE                     WMW08210
         BAL   R9,PRT0000              PRINT IT                         WMW08220
         OI    COMFLAG,$ERROR          SET ERROR INDICATOR              WMW08390
         B     TEST0170                CHECK SCAN 2
TEST0160 DS    0H
         LH    R3,COMSCN1L             LENGTH OF STRING
         XLOC  TYPE=INIT,              INITIALIZE SCAN                 +
               STRLEN=(R3),            STRING LENGTH                   +
               STRING=COMSCAN1,        ARGUEMENT                       +
               WORK=COMSCN1T,          TRANSLATE TABLE FOR SCAN 1      +
               TABLE=FOCTABLE,         FREQUENCY OF OCCURRENCE TABLE   +
               MF=(E,COMSCN1P)         SCAN 1 PARAMETER LIST
         CLI   COMSCN1P+(XLOCSTAT-XLOCLIST),$XLOCOK  INITIALIZE OK??
         BE    TEST0170                YES
         MVC   PLINE,MSG0015           ASSUME LENGTH IS < 1
         CLI   COMSCN1P+(XLOCSTAT-XLOCLIST),$XLOCER1
         BE    TEST0165                LENGTH < 1
         MVC   PLINE,MSG0016           LENGTH > 256
TEST0165 DS    0H
         BAL   R9,PRT0000              PRINT ERROR MESSAGE
         OI    COMFLAG,$ERROR          SET ERROR FLAG
TEST0170 DS    0H
         TM    COMSCN2F,$SCAN2         SCAN 2 IN EFFECT??
         BNO   TEST0190                NO
         TM    COMSCN2F,$Z2BGN+$Z2END  USING START AND END??
         BNO   TEST0180                NO
         LH    R1,COMZ2END             END OF ZONE
         SH    R1,COMZ2BGN             MINUS START OF ZONE
         LA    R1,1(R1)                FULL NUMBER OF COLUMNS
         CH    R1,COMSCN2L             ZONE TOO SMALL??
         BNL   TEST0180                NO
         MVC   PLINE,MSG0012           MOVE MESSAGE                     WMW08210
         BAL   R9,PRT0000              PRINT IT                         WMW08220
         OI    COMFLAG,$ERROR          SET ERROR INDICATOR              WMW08390
         B     TEST0190                CHECK TRIGGER
TEST0180 DS    0H
         LH    R3,COMSCN2L             LENGTH OF STRING
         XLOC  TYPE=INIT,              INITIALIZE SCAN                 +
               STRLEN=(R3),            STRING LENGTH                   +
               STRING=COMSCAN2,        ARGUEMENT                       +
               WORK=COMSCN2T,          TRANSLATE TABLE FOR SCAN 2      +
               TABLE=FOCTABLE,         FREQUENCY OF OCCURRENCE TABLE   +
               MF=(E,COMSCN2P)         SCAN 2 PARAMETER LIST
         CLI   COMSCN2P+(XLOCSTAT-XLOCLIST),$XLOCOK  INITIALIZE OK??
         BE    TEST0190                YES
         MVC   PLINE,MSG0017           ASSUME LENGTH < 1
         CLI   COMSCN2P+(XLOCSTAT-XLOCLIST),$XLOCER1
         BE    TEST0185                LENGTH < 1
         MVC   PLINE,MSG0018           LENGTH > 256
TEST0185 DS    0H
         BAL   R9,PRT0000              PRINT MESSAGE
         OI    COMFLAG,$ERROR          SET ERROR FLAG
TEST0190 DS    0H
         TM    COMTRGRF,$TRIGGER       TRIGGER IN EFFECT??
         BNO   TEST0210                NO
         TM    COMTRGRF,$TZBGN+$TZEND  USING START AND END??
         BNO   TEST0200                NO
         LH    R1,COMTZEND             END OF ZONE
         SH    R1,COMTZBGN             MINUS START OF ZONE
         LA    R1,1(R1)                FULL NUMBER OF COLUMNS
         CH    R1,COMTRGL              ZONE TOO SMALL??
         BNL   TEST0200                NO
         MVC   PLINE,MSG0013           MOVE MESSAGE                     WMW08210
         BAL   R9,PRT0000              PRINT IT                         WMW08220
         OI    COMFLAG,$ERROR          SET ERROR INDICATOR              WMW08390
         B     TEST0190                CHECK TRIGGER
TEST0200 DS    0H
         LH    R3,COMTRGL              LENGTH OF STRING
         XLOC  TYPE=INIT,              INITIALIZE SCAN                 +
               STRLEN=(R3),            STRING LENGTH                   +
               STRING=COMTRGR,         ARGUEMENT                       +
               WORK=COMTRGRT,          TRANSLATE TABLE FOR TRIGGER     +
               TABLE=FOCTABLE,         FREQUENCY OF OCCURRENCE TABLE   +
               MF=(E,COMTRGRP)         TRIGGER PARAMETER LIST
         CLI   COMTRGRP+(XLOCSTAT-XLOCLIST),$XLOCOK  INITIALIZE OK??
         BE    TEST0210                YES
         MVC   PLINE,MSG0019           ASSUME LENGTH < 1
         CLI   COMTRGRP+(XLOCSTAT-XLOCLIST),$XLOCOK  INITIALIZE OK??
         BE    TEST0205                LENGTH < 1
         MVC   PLINE,MSG0020           LENGTH > 256
TEST0205 DS    0H
         BAL   R9,PRT0000              PRINT MESSAGE
         OI    COMFLAG,$ERROR          SET ERROR FLAG
TEST0210 DS    0H
         TM    COMFLAG,$ERROR          HAS AN ERROR OCCURRED??
         BNO   PHSE0000                NO
         MVC   PLINE,MSG0025           MOVE MESSAGE                     WMW08210
         BAL   R9,PRT0000              PRINT IT                         WMW08220
         B     PHSE0000                GO TO NEXT PROGRAM PHASE
HELP0000 DS    0H
         MVC   PLINE,MSG0030           MOVE MESSAGE
         BAL   R9,PRT0000              PRINT IT
         B     PHSE0010                GO TO NEXT PROGRAM PHASE
FIRST100 DS    0H
         MVC   PLINE,MSG0040           MOVE MESSAGE
         BAL   R9,PRT0000              PRINT IT
         MVC   PLINE,MSG0041           MOVE MESSAGE
         BAL   R9,PRT0000              PRINT IT
         MVC   PLINE,MSG0042           MOVE MESSAGE
         BAL   R9,PRT0000              PRINT IT
         B     TEST0000                PERFORM NORMAL CHECKING
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*           PRINTING/HEADING ROUTINES                                 *
*                                                                     *
*---------------------------------------------------------------------*
PRT0000  DS    0H
         LA    R2,PRINTER
         PUT   (R2),PRCC               PRINT
         AP    COMLINE,P1              ADD 1 TO LINE COUNTER
         CLI   PRCC,C' '               SINGLE SPACE??
         BE    PRT0010                 YES
         AP    COMLINE,P1              ADD 1 TO LINE COUNTER
         CLI   PRCC,C'0'               DOUBLE SPACE??
         BE    PRT0010                 YES
         AP    COMLINE,P1              ADD 1 TO LINE COUNTER
PRT0010  DS    0H
         CP    COMLINE,P60             TIME FOR HEADINGS?
         BLR   R9                      NO
HEADINGS DS    0H
         AP    COMPAGE,P1              ADD 1 TO PAGE COUNT
         MVC   PRPAGE,=X'402020202120' EDIT WORD
         ED    PRPAGE,COMPAGE          EDIT PAGE NUMBER
         LA    R2,PRINTER
         PUT   (R2),HEADING            PRINT
         ZAP   COMLINE,P0              RESET LINE COUNT
         BR    R9                      RETURN
PHSE0000 DS    0H
         L     R15,VPH2                ADDRESS OF NEXT PHASE
         BR    R15                     CONTINUE WITH NEXT PHASE
PHSE0010 DS    0H
         L     R15,VPH3                ADDRESS OF NEXT PHASE
         BR    R15                     CONTINUE WITH NEXT PHASE
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*                     WORKAREAS                                       *
*                                                                     *
*---------------------------------------------------------------------*
DWORD    DC    D'0'                    FOR CVB'S
VCOMM    DC    V(FILECOMM)             ADDRESS OF 'COMMON'
VPH2     DC    V(FILEPH02)             ADDRESS OF PHASE '02'
VPH3     DC    V(FILEPH03)             ADDRESS OF PHASE '03'
P0       DC    P'0'
P1       DC    P'1'
P60      DC    P'60'
FOCTABLE XLOC  TYPE=TABLE              FREQUENCY OF OCCURRENCE TABLE
PLINE    DS    0CL121
PRCC     DC    C' '                    CARRIAGE CONTROL
PAREA    DC    CL120' '                PRINT AREA
HEADING  DS    0C
         DC    C'1'
         DC    CL109'       FILE UTILITY CONTROL STATEMENTS'
         DC    C'PAGE '
PRPAGE   DC    CL6' '
MSG0001  DC    CL121'  ZONE OR ZONE1 SPECIFIED WITHOUT SCAN OR SCAN1'
MSG0002  DC    CL121'  ZONE2 SPECIFIED WITHOUT SCAN2'
MSG0003  DC    CL121'  TZONE SPECIFIED WITHOUT TRIGGER'
MSG0004  DC    CL121'  SCANCTRL NOT ALLOWED WITHOUT SCAN 1 AND SCAN 2'
MSG0005  DC    CL121'  ZONE1 BEGIN IS LARGER THAN RECORD LENGTH'
MSG0006  DC    CL121'  ZONE1 END IS LARGER THAN RECORD LENGTH'
MSG0007  DC    CL121'  ZONE2 BEGIN IS LARGER THAN RECORD LENGTH'
MSG0008  DC    CL121'  ZONE2 END IS LARGER THAN RECORD LENGTH'
MSG0009  DC    CL121'  TZONE BEGIN IS LARGER THAN RECORD LENGTH'
MSG0010  DC    CL121'  TZONE END IS LARGER THAN RECORD LENGTH'
MSG0011  DC    CL121'  ZONE SMALLER THAN SCAN ARGUEMENT LENGTH'
MSG0012  DC    CL121'  ZONE2 SMALLER THAN SCAN2 ARGUEMENT LENGTH'
MSG0013  DC    CL121'  TZONE SMALLER THAN TRIGGER ARGUEMENT LENGTH'
MSG0014  DC    CL121'  SINGLE SPACING ALLOWED ONLY WITH ''NOHEX'''
MSG0015  DC    CL121'  SCAN/SCAN1 LENGTH < 1'
MSG0016  DC    CL121'  SCAN/SCAN1 LENGTH > 256'
MSG0017  DC    CL121'  SCAN2 LENGTH < 1'
MSG0018  DC    CL121'  SCAN2 LENGTH > 256'
MSG0019  DC    CL121'  TRIGGER LENGTH < 1'
MSG0020  DC    CL121'  TRIGGER LENGTH > 256'
MSG0021  DC    CL121'  SCAN2 SPECIFIED WITHOUT SCAN/SCAN1'
MSG0025  DC    CL121'0 ***** ERRORS DETECTED, EXECUTION ABORTED *****'
MSG0030  DC    CL121'0 ***** HELP REQUESTED, ALL OTHER PARAMETERS IGNOR+
               ED *****'
MSG0040  DC    CL121'0 ***** FIRST100 REQUESTED, NOHEX AND SINGLE SPACI+
               NG FORCED'
MSG0041  DC    CL121'  RECORDS WILL BE TRUNCATED AT 100 CHARACTERS'
MSG0042  DC    CL121'  LOGICAL RECORD NUMBER AND RECORD LENGTHS WILL BE+
                SUPPRESSED'
         SPACE
*---------------------------------------------------------------------*
*                                                                     *
*                     DSECTS                                          *
*                                                                     *
*---------------------------------------------------------------------*
FILECOMM DSECT
         FILECOMM
         XLOC  TYPE=DSECT
         DCBD  DSORG=PS
         PRINT NOGEN
         PRINT GEN
         SPACE
*---------------------------------------------------------------------*
*                                                                     *
*                     REGISTER EQUATES                                *
*                                                                     *
*---------------------------------------------------------------------*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END   FILEPH01
./ ADD NAME=FILEPH02 0100-02291-02291-0123-00533-00533-00000-RLRICE
*---------------------------------------------------------------------*
*                                                                     *
*           THIS MODULE IS THE ACTUAL READ/PRINT MODULE               *
*                                                                     *
*---------------------------------------------------------------------*
FILEPH02 CSECT
         USING FILEPH02,R15            SPECIFY CSECT BASE
         ID                            DATE AND TIME COMPILED
         LR    R11,R15                 COPY BASE ADDRESS
         DROP  R15                     DROP PREVIOUS BASE
         USING FILEPH02,R11            RESUME WITH NEW BASE
         L     R12,VCOMM               COMMON MODULE ADDRESS
         USING FILECOMM,R12            DEFINE COMMON BASE
         USING IHADCB,R2               DEFINE DCB DSECT BASE
         TM    COMFLAG,$ERROR          ERROR FLAG ON??
         BO    EXIT0010                YES, EXIT
         ZAP   COMPAGE,P0              RESET PAGE NUMBER
         LA    R2,SYSUT1               POINT TO INPUT DCB
         CLI   COMCOPY,$COPY           COPY FLAG ON??
         BNE   INIT0010                NO
         LA    R3,SYSUT2
         MVC   DCBRECFM-IHADCB(L'DCBRECFM,R3),DCBRECFM
         MVC   DCBLRECL-IHADCB(L'DCBLRECL,R3),DCBLRECL
         MVC   DCBBLKSI-IHADCB(L'DCBBLKSI,R3),DCBBLKSI
         OPEN  ((R3),OUTPUT)         OPEN 'COPY' FILE
INIT0010 DS    0H
         LA    R1,EXIT0010             END OF DATA ROUTINE
         STCM  R1,7,DCBEODAD+1         INSERT IT INTO DCB
         TM    COMFLAG,$100            FIRST 100 FORMAT??
         BO    ATTR0060                YES, SKIP RECORD FORMAT
         LA    R1,PRRECFM              POINT TO RECORD FORMAT
         MVI   0(R1),C'U'              INDICATE UNDEFINED FORMAT
         TM    DCBRECFM,DCBRECU        UNDEFINED FORMAT??
         BO    ATTR0010                YES
         MVI   0(R1),C'V'              INDICATE VARIABLE FORMAT
         TM    DCBRECFM,DCBRECV        VARIABLE LENGTH RECORDS??
         BO    ATTR0010                YES
         MVI   0(R1),C'F'              INDICATE FIXED LENGTH
ATTR0010 DS    0H
         LA    R1,1(R1)                NEXT ATTRIBUTE POSITION
         TM    DCBRECFM,DCBRECBR       BLOCKED??
         BNO   ATTR0020                NO
         MVI   0(R1),C'B'              INDICATE BLOCKED
         LA    R1,1(R1)                NEXT ATTRIBUTE POSITION
ATTR0020 DS    0H
         TM    DCBRECFM,DCBRECSB       SPANNED RECORDS??
         BNO   ATTR0030                NO
         MVI   0(R1),C'S'              INDICATE SPANNED
         LA    R1,1(R1)                NEXT ATTRIBUTE POSITION
ATTR0030 DS    0H
         TM    DCBRECFM,DCBRECCA       ASA CONTROL CHARACTERS
         BNO   ATTR0040                NO
         MVI   0(R1),C'A'              INDICATE ASA
         B     ATTR0050                CONTINUE
ATTR0040 DS    0H
         TM    DCBRECFM,DCBRECCM       MACHINE CONTROL CHARACTERS
         BNO   ATTR0050                NO
         MVI   0(R1),C'M'              INDICATE MACHINE
ATTR0050 DS    0H
         LH    R1,DCBLRECL             RECORD LENGTH
         CVD   R1,DWORD                CONVERT TO DECIMAL
         ED    PRLRECL,DWORD+5         EDIT RECORD SIZE
         LH    R1,DCBBLKSI             GET BLOCK SIZE
         CVD   R1,DWORD                CONVERT TO DECIMAL
         ED    PRBLKSI,DWORD+5         EDIT BLOCK SIZE
ATTR0060 DS    0H
         BAL   R10,HEADINGS            PRINT HEADINGS
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*           PROCESS SKIP IF REQUESTED                                 *
*                                                                     *
*---------------------------------------------------------------------*
SKIP0000 DS    0H
         TM    COMFLAG,$SKIP           SKIP REQUESTED??
         BNO   TRGR0000                NO
         SR    R3,R3                   CLEAR REGISTER
         ICM   R3,3,COMSKIP            NUMBER OF RECORDS TO SKIP
         BZ    TRGR0000                NO RECORDS TO SKIP
SKIP0010 DS    0H
         BAL   R9,READ0000             READ A RECORD
         BCT   R3,SKIP0010             LOOP REQUESTED NUMBER OF TIMES
*---------------------------------------------------------------------*
*                                                                     *
*           PROCESS TRIGGER IF REQUESTED                              *
*                                                                     *
*---------------------------------------------------------------------*
TRGR0000 DS    0H
         TM    COMTRGRF,$TRIGGER       TRIGGER REQUESTED??
         BNO   PROC0000                NO
TRGR0010 DS    0H
         BAL   R9,READ0000             READ A RECORD
         LA    R2,SYSUT1               MAKE SURE R2 IS AIMED RIGHT
         CLC   COMTZBGN,RECLEN         IS RECORD TOO SMALL??
         BH    TRGR0010                YES
         SR    R3,R3                   ASSUME ZONE BEGIN
         TM    COMTRGRF,$TZBGN         ZONE BEGIN GIVEN??
         BNO   TRGR0020                NO
         CLC   COMTZBGN,RECLEN         IS RECORD TOO SMALL??
         BH    PROC0000                YES
         LH    R3,COMTZBGN             ZONE BEGIN
         BCTR  R3,0                    RELATIVE TO ZERO
TRGR0020 DS    0H
         LH    R4,RECLEN               RECORD LENGTH
         TM    COMTRGRF,$TZEND         ZONE END REQUESTED??
         BNO   TRGR0030                NO
         CH    R4,COMTZEND             SMALLER THAN ENDING ZONE??
         BL    TRGR0030                YES
         LH    R4,COMTZEND             USE ENDING ZONE
TRGR0030 DS    0H
         L     R5,RECADDR              RECORD ADDRESS
         AR    R5,R3                   PLUS ZONE BEGIN
         SR    R4,R3                   SCAN LENGTH
         LH    R6,COMTRGL              STRING LENGTH
         XLOC  RECORD=(R5),            RECORD ADDRESS                  +
               RECLEN=(R4),            RECORD LENGTH                   +
               STRING=COMTRGR,         SEARCH STRING                   +
               STRLEN=(R6),            SEARCH STRING LENGTH            +
               ERROR=TRGR0010,         STRING NOT FOUND                +
               MF=(E,COMTRGRP)         TRIGGER PARAMETER LIST
         B     PROC0020                BYPASS READ IN 'PROC'
*---------------------------------------------------------------------*
*                                                                     *
*           MAIN READ/PRINT PROCEDURE                                 *
*                                                                     *
*---------------------------------------------------------------------*
PROC0000 DS    0H
         TM    COMFLAG,$COUNT          COUNT REQUESTED??
         BNO   PROC0010                NO
         CLC   RECPRT,COMCOUNT         ENOUGH RECORDS PRINTED??
         BNL   EXIT0010                YES
PROC0010 DS    0H
         BAL   R9,READ0000             READ A RECORD
PROC0020 DS    0H
         MVI   SCANFLAG,X'00'          TURN OFF SCAN INDICATORS
         TM    COMSCN1F,$SCAN1         SCAN 1 REQUESTED??
         BNO   PROC0050                NO
         LA    R2,SYSUT1               MAKE SURE R2 IS AIMED RIGHT
         SR    R3,R3                   ASSUME NO ZONE BEGIN
         TM    COMSCN1F,$Z1BGN         ZONE BEGIN GIVEN??
         BNO   PROC0030                NO
         CLC   COMZ1BGN,RECLEN         IS RECORD TOO SMALL??
         BH    PROC0000                YES
         LH    R3,COMZ1BGN             ZONE BEGIN
         BCTR  R3,0                    RELATIVE TO ZERO
PROC0030 DS    0H
         LH    R4,RECLEN               RECORD LENGTH
         TM    COMSCN1F,$Z1END         ZONE END REQUESTED??
         BNO   PROC0040                NO
         CH    R4,COMZ1END             RECORD SMALLER THAN ZONE END??
         BL    PROC0040                YES
         LH    R4,COMZ1END             USE ZONE END
PROC0040 DS    0H
         L     R5,RECADDR              RECORD ADDRESS
         AR    R5,R3                   PLUS ZONE BEGIN
         SR    R4,R3                   SCAN LENGTH
         LH    R6,COMSCN1L             STRING LENGTH
         XLOC  RECORD=(R5),            RECORD ADDRESS                  +
               RECLEN=(R4),            RECORD LENGTH                   +
               STRING=COMSCAN1,        SEARCH STRING                   +
               STRLEN=(R6),            SEARCH STRING LENGTH            +
               ERROR=PROC0050,         STRING NOT FOUND                +
               MF=(E,COMSCN1P)         TRIGGER PARAMETER LIST
         OI    SCANFLAG,$1FND          INDICATE SCAN 1 FOUND
PROC0050 DS    0H
         TM    COMSCN2F,$SCAN2         SCAN 2 REQUESTED??
         BNO   PROC0080                NO
         LA    R2,SYSUT1               MAKE SURE R2 IS AIMED RIGHT
         SR    R3,R3                   ASSUME NO ZONE BEGIN
         TM    COMSCN2F,$Z2BGN         ZONE BEGIN GIVEN??
         BNO   PROC0060                NO
         CLC   COMZ2BGN,RECLEN         IS RECORD TOO SMALL??
         BH    PROC0000                YES
         LH    R3,COMZ2BGN             ZONE BEGIN
         BCTR  R3,0                    RELATIVE TO ZERO
PROC0060 DS    0H
         LH    R4,RECLEN               RECORD LENGTH
         TM    COMSCN2F,$Z2END         ZONE END REQUESTED??
         BNO   PROC0070                NO
         CH    R4,COMZ2END             RECORD SMALLER THAN ZONE END??
         BL    PROC0070                YES
         LH    R4,COMZ2END             LIMIT SEARCH TO ZONE END
PROC0070 DS    0H
         L     R5,RECADDR              RECORD ADDRESS
         AR    R5,R3                   PLUS ZONE BEGIN
         SR    R4,R3                   SCAN LENGTH
         LH    R6,COMSCN2L             STRING LENGTH
         XLOC  RECORD=(R5),            RECORD ADDRESS                  +
               RECLEN=(R4),            RECORD LENGTH                   +
               STRING=COMSCAN2,        SEARCH STRING                   +
               STRLEN=(R6),            SEARCH STRING LENGTH            +
               ERROR=PROC0080,         STRING NOT FOUND                +
               MF=(E,COMSCN2P)         TRIGGER PARAMETER LIST
         OI    SCANFLAG,$2FND          INDICATE SCAN 2 FOUND
PROC0080 DS    0H
         CLI   COMSCTRL,C'A'           SCAN 1 AND SCAN 2 REQUIRED??
         BNE   PROC0090                NO
         TM    SCANFLAG,$1FND+$2FND    WERE 1 AND 2 FOUND??
         BNO   PROC0000                NO
PROC0090 DS    0H
         TM    COMSCN1F,$SCAN1         SCAN 1 REQUESTED??
         BNO   PROC0100                NO
         TM    SCANFLAG,$1FND          WAS SCAN 1 FOUND??
         BO    PROC0110                ACCEPT THE RECORD
         CLI   COMSCTRL,C'O'           SCAN 1 OR SCAN 2 ALLOWED??
         BNE   PROC0000                NO
PROC0100 DS    0H
         TM    COMSCN2F,$SCAN2         SCAN 2 REQUESTED??
         BNO   PROC0110                NO
         TM    SCANFLAG,$2FND          WAS SCAN 2 FOUND??
         BNO   PROC0000                NO
PROC0110 DS    0H
         BAL   R9,RPRT0000             PRINT THE RECORD
         B     PROC0000                REPEAT
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*           READ INPUT FILE                                           *
*                                                                     *
*---------------------------------------------------------------------*
READ0000 DS    0H
         LA    R2,SYSUT1               INPUT FILE ADDRESS
         GET   (R2)                    READ A RECORD
         L     R14,RECNBR              LOGICAL RECORD NUMBER
         LA    R14,1(R14)              ADD 1
         ST    R14,RECNBR              SAVE RECORD NUMBER
         ST    R1,RECADDR              SAVE DATA ADDRESS
         MVC   RECLEN,DCBLRECL         MOVE RECORD LENGTH
         TM    DCBRECFM,DCBRECV        VARIABLE LENGTH RECORDS?
         BNOR  R9                      NO
         MVC   RECLEN,0(R1)            MOVE RECORD LENGTH
         BR    R9                      RETURN
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*           FORMAT RECORD                                             *
*                                                                     *
*---------------------------------------------------------------------*
RPRT0000 DS    0H
         L     R8,RECADDR              DATA ADDRESS
         CLI   COMCOPY,$COPY           COPY OF RECORD WANTED??
         BNE   RPRT0005                NO
         LA    R3,SYSUT2               OUTPUT DCB
         PUT   (R3),(R8)               WRITE THE RECORD
RPRT0005 DS    0H
         LH    R1,RECPRT               NUMBER OF RECORDS PRINTED
         LA    R1,1(R1)                ADD 1
         STH   R1,RECPRT               SAVE RECORDS PRINTED
         MVC   RPRTLEN,RECLEN          COPY RECORD LENGTH
         ZAP   CENTURY,P0              ZERO 100'S ACCUMULATOR
RPRT0010 DS    0H
         TM    COMFLAG,$100            FIRST 100 FORMAT??
         BO    RPRT0020                YES
         CLI   COMHEX,$HEX             RECORD TO BE PRINTED IN HEX
         BNE   RPRT0020                NO
         CP    COMLINE,P55             ENOUGH LINES FOR 1 'GROUP'??
         BNH   RPRT0020                YES
         BAL   R10,HEADINGS            FORCE HEADINGS
RPRT0020 DS    0H
         LH    R3,RPRTLEN              DATA LENGTH
         LTR   R3,R3                   ZERO?
         BZR   R9                      EXIT
         CH    R3,H100                 TOO MUCH FOR 1 LINE??
         BNH   RPRT0030                NO
         LH    R3,H100                 LIMIT LENGTH TO 100
RPRT0030 DS    0H
         BCTR  R3,0                    ADJUST FOR EXECUTE
         MVC   PLINE,PLINE-1           CLEAR PRINT LINE
         EX    R3,CHARMVC              MOVE CHARACTER
         EX    R3,CHARTR               TRANSLATE OUT UNPRINTABLES
         TM    COMFLAG,$100            FIST100 FORMAT??
         BO    RPRT0050                YES
         CP    CENTURY,P0              FIRST LINE FOR RECORD??
         BNE   RPRT0040                NO
         MVI   PR#,C'#'                MOVE IN RECORD NUMBER PREFIX
         L     R1,RECNBR               CURRENT LOGICAL RECORD NUMBER
         CVD   R1,DWORD                CONVERT TO DECIMAL
         MVC   PRRECNBR,=X'402020202021'
         ED    PRRECNBR,DWORD+5        EDIT RECORD NUMBER
         MVC   PRSIZE,=C' SIZE'        MOVE RECORD SIZE PREFIX
         LH    R1,RECLEN               CURRENT RECORD SIZE
         CVD   R1,DWORD                CONVERT TO DECIMAL
         MVC   PRRECLEN,=X'402020202021'
         ED    PRRECLEN,DWORD+5        EDIT RECORD NUMBER
RPRT0040 DS    0H
         MVI   PRCC,C' '               SINGLE SPACE CONTROL
         CLI   COMSPACE,$SINGLE        SINGLE SPACING?
         BE    RPRT0050                YES
         MVI   PRCC,C'0'               DOUBLE SPACE CONTROL
RPRT0050 DS    0H
         BAL   R10,PRT0000             PRINT CHARACTER
         TM    COMFLAG,$100            FIRST 100 FORMAT??
         BOR   R9                      YES
         CLI   COMHEX,$HEX             RECORD TO BE PRINTED IN HEX??
         BNE   RPRT0060                NO
         MVC   PLINE,PLINE-1           CLEAR PRINT LINE
         EX    R3,CHARMVC              MOVE CHARACTER
         EX    R3,NUMRNULL             NULL NUMERIC
         EX    R3,HEXTR                TRANSLATE ZONES
         BAL   R10,PRT0000             PRINT ZONES
         MVC   PLINE,PLINE-1           CLEAR PRINT LINE
         EX    R3,CHARMVC              MOVE CHARACTER
         EX    R3,ZONENULL             NULL ZONES
         EX    R3,HEXTR                TRANSLATE NUMERIC'S
         BAL   R10,PRT0000             PRINT NUMERICS
         MVC   PLINE,PLINE-1           CLEAR PRINT LINE
         MVC   PR100,=X'402020202020'  EDIT WORD
         ED    PR100,CENTURY           EDIT 100'S COUNTER
         EX    R3,SCALEMVC             MOVE SCALE
         BAL   R10,PRT0000             PRINT SCALE
RPRT0060 DS    0H
         AP    CENTURY,P10             ADD TO 100'S COUNTER
         LA    R3,1(R3)                RESTORE DATA LENGTH
         LH    R1,RPRTLEN              DATA LENGTH
         SR    R1,R3                   REMAINING LENGTH
         STH   R1,RPRTLEN              SAVE LENGTH LEFT
         LA    R8,100(R8)              NEXT 100 BYTES
         B     RPRT0010                REPEAT
CHARMVC  MVC   PAREA+20(0),0(R8)       MOVE CHARACTER
CHARTR   TR    PAREA+20(0),CHRTABLE    TRANSLATE OUT UNPRINTABLES
ZONENULL MVZ   PAREA+20(0),HEXZEROS    NULLIFY ZONES
NUMRNULL MVN   PAREA+20(0),HEXZEROS    NULLIFY NUMERICS
HEXTR    TR    PAREA+20(0),HEXTABLE    TRANSLATE TO PRINTABLE
SCALEMVC MVC   PAREA+20(0),SCALE       MOVE SCALE
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*           PRINTING/HEADING ROUTINES                                 *
*                                                                     *
*---------------------------------------------------------------------*
PRT0000  DS    0H
         CLC   TOTLINES,COMMAXL        EXCEEDED OUTPUT LINE MAXIMUM??
         BH    EXIT0000                YES
         LA    R2,PRINTER
         PUT   (R2),PRCC               PRINT
         AP    COMLINE,P1              ADD 1 TO LINE COUNTER
         L     R1,TOTLINES             ADD 1 TO LINE COUNTER
         A     R1,FONE
         ST    R1,TOTLINES
         CLI   PRCC,C' '               SINGLE SPACE??
         BE    PRT0010                 YES
         AP    COMLINE,P1              ADD 1 TO LINE COUNTER
         L     R1,TOTLINES             ADD 1 TO LINE COUNTER
         A     R1,FONE
         ST    R1,TOTLINES
         CLI   PRCC,C'0'               DOUBLE SPACE??
         BE    PRT0010                 YES
         AP    COMLINE,P1              ADD 1 TO LINE COUNTER
         L     R1,TOTLINES             ADD 1 TO LINE COUNTER
         A     R1,FONE
         ST    R1,TOTLINES
PRT0010  DS    0H
         CP    COMLINE,P60             TIME FOR HEADINGS?
         BLR   R10                     NO
HEADINGS DS    0H
         AP    COMPAGE,P1              ADD 1 TO PAGE COUNT
         MVC   PRPAGE,=X'402020202120' EDIT WORD
         ED    PRPAGE,COMPAGE          EDIT PAGE NUMBER
         MVC   PRTITLE,COMTITLE        MOVE PAGE TITLE
         LA    R2,PRINTER
         PUT   (R2),HEADING            PRINT PAGE HEADING
         ZAP   COMLINE,P1              SET LINE COUNT TO 1
         L     R1,TOTLINES             ADD 1 TO LINE COUNTER
         A     R1,FONE
         ST    R1,TOTLINES
         LA    R2,PRINTER
         MVC   DSNDSN,JFCBDSNM         MOVE DATASET NAME TO HEADING
         PUT   (R2),DSNLINE            PRINT DATASET NAME LINE
         AP    COMLINE,P1              ADD 1 TO LINE COUNT
         L     R1,TOTLINES             ADD 1 TO LINE COUNTER
         A     R1,FONE
         ST    R1,TOTLINES
         TM    COMFLAG,$100            FIRST 100 FORMAT??
         BOR   R10                     YES, EXIT HERE
         PUT   (R2),ATTRLINE           PRINT FILE ATTRIBUTE LINE
         AP    COMLINE,P1              ADD 1 TO LINE COUNT
         L     R1,TOTLINES             ADD 1 TO LINE COUNTER
         A     R1,FONE
         ST    R1,TOTLINES
         BR    R10                     RETURN
EXIT0000 DS    0H
         LA    R2,PRINTER
         PUT   (R2),MAXLMSG            PRINT MESSAGE
EXIT0010 DS    0H
         LA    R2,SYSUT1               INPUT FILE ADDRESS
         CLOSE ((R2))                  CLOSE INPUT FILE
         LA    R2,PRINTER              PRINTER FILE ADDRESS
         CLOSE ((R2))                  CLOSE PRINT FILE
         CLI   COMCOPY,$COPY           'COPYING' RECORDS??
         BNE   EXIT0020                NO
         LA    R2,PRINTER              PRINTER FILE ADDRESS
         CLOSE ((R2))                  CLOSE PRINT FILE
EXIT0020 DS    0H
         L     R13,4(R13)              RESTORE SAVE AREA ADDRESS
         L     R14,12(R13)             RESTORE REGISTER 14
         LM    R0,R12,20(R13)          RESTORE ALL OTHER REGISTERS
         SR    R15,R15                 RETURN CODE
         BR    R14                     EXIT
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*                                                                     *
*                                                                     *
*---------------------------------------------------------------------*
         LTORG
DWORD    DC    D'0'
VCOMM    DC    V(FILECOMM)             'COMMON' MODULE ADDRESS
RECADDR  DC    A(0)                    CURRENT REOCRD ADDRESS
TOTLINES DC    F'0'                    TOTAL LINES PRINTED
RECNBR   DC    F'0'                    CURRENT RECORD'S RECORD NUMBER
FONE     DC    F'1'                    CONSTANT
RECLEN   DC    H'0'                    CURRENT RECORD LENGTH
RECPRT   DC    H'0'                    NUMBER OF RECORDS PRINTED
RPRTLEN  DC    H'0'                    PRINT ROUTINE WORK LENGTH
H100     DC    H'100'                  CONSTANT
P0       DC    P'0'                    CONSTANT
P1       DC    P'1'                    CONSTANT
P3       DC    P'3'                    CONSTANT
P10      DC    P'10'                   CONSTANT
P55      DC    P'55'                   CONSTANT
P60      DC    P'60'                   CONSTANT
CENTURY  DC    PL3'0'                  100'S COUNTER
SCANFLAG DC    X'00'                   SCAN RESULTS INDICATORS
$1FND    EQU   X'80'                   .. SCAN 1 FOUND
$2FND    EQU   X'40'                   .. SCAN 2 FOUND
HEXZEROS DC    100X'00'                CONSTANT
*                   0 1 2 3 4 5 6 7 8 9 A B C D E F                     VUT16120
CHRTABLE DC    XL16'40404040404040404040404040404040'     X'00' - X'0F' VUT16130
         DC    XL16'40404040404040404040404040404040'     X'10' - X'1F' VUT16140
         DC    XL16'40404040404040404040404040404040'     X'20' - X'2F' VUT16150
         DC    XL16'40404040404040404040404040404040'     X'30' - X'3F' VUT16160
         DC    XL16'404040404040404040404A4B4C4D4E4F'     X'40' - X'4F' VUT16170
         DC    XL16'504040404040404040405A5B5C5D5E5F'     X'50' - X'5F' VUT16180
         DC    XL16'60614040404040404040406B6C6D6E6F'     X'60' - X'6F' VUT16190
         DC    XL16'404040404040404040407A7B7C7D7E7F'     X'70' - X'7F' VUT16200
         DC    XL16'40404040404040404040408B8C8D8E8F'     X'80' - X'8F' VUT16210
         DC    XL16'40404040404040404040409B9C9D9E9F'     X'90' - X'9F' VUT16220
         DC    XL16'4040404040404040404040ABACADAEAF'     X'A0' - X'AF' VUT16230
         DC    XL16'4040404040404040404040BBBCBDBEBF'     X'B0' - X'BF' VUT16240
         DC    XL16'40C1C2C3C4C5C6C7C8C9404040404040'     X'C0' - X'CF' VUT16250
         DC    XL16'40D1D2D3D4D5D6D7D8D9404040404040'     X'D0' - X'DF' VUT16260
         DC    XL16'4040E2E3E4E5E6E7E8E9404040404040'     X'E0' - X'EF' VUT16270
         DC    XL16'F0F1F2F3F4F5F6F7F8F9404040404040'     X'F0' - X'FF' VUT16280
*                   0 1 2 3 4 5 6 7 8 9 A B C D E F                     VUT16120
HEXTABLE DC    CL16'0123456789ABCDEF'                     X'00' - X'0F'
         DC    CL16'1               '                     X'10' - X'1F'
         DC    CL16'2               '                     X'20' - X'2F'
         DC    CL16'3               '                     X'30' - X'3F'
         DC    CL16'4               '                     X'40' - X'4F'
         DC    CL16'5               '                     X'50' - X'5F'
         DC    CL16'6               '                     X'60' - X'6F'
         DC    CL16'7               '                     X'70' - X'7F'
         DC    CL16'8               '                     X'80' - X'8F'
         DC    CL16'9               '                     X'90' - X'9F'
         DC    CL16'A               '                     X'A0' - X'AF'
         DC    CL16'B               '                     X'B0' - X'BF'
         DC    CL16'C               '                     X'C0' - X'CF'
         DC    CL16'D               '                     X'D0' - X'DF'
         DC    CL16'E               '                     X'E0' - X'EF'
         DC    CL16'F               '                     X'F0' - X'FF'
HEADING  DS    0C
         DC    C'1'
         DC    CL14' '
PRTITLE  DC    CL80' '
         DC    CL15' '
         DC    C'PAGE '
PRPAGE   DC    CL6' '
SCALE    DC    CL100'1...5...10...15...20...25...30...35...40...45...50+
               ...55...60...65...70...75...80...85...90...95..100'
DSNLINE  DC    C' RECORDS PRINTED FROM DATASET:'
DSNDSN   DC    CL44' '
         DC    CL50' '
MAXLMSG  DC    CL121'- ********** OUTPUT EXCEEDED, PROGRAM TERMINATED *+
               *********'
ATTRLINE DC    C' '
         DC    C'RECORD FORMAT '
PRRECFM  DC    CL5' '                  SYSUT1 RECORD FORMAT
         DC    C'   RECORD SIZE'
PRLRECL  DC    X'4020206B202120'       SYSUT1 LOGICAL RECORD LENGTH
         DC    C'   BLOCK SIZE'
PRBLKSI  DC    X'4020206B202120'       SYSUT1 BLOCK SIZE
         DC    CL75' '
PLINE    DS    0CL121
PRCC     DC    C' '                    CARRIAGE CONTROL
PAREA    DS    0CL120                  PRINT AREA
         DC    CL14' '
PR100    DC    X'402020202020'         100'S PREFIX
         ORG   PAREA
PR#      DC    C' '                    RECORD NUMBER PREFIX
PRRECNBR DC    X'402020202021'         RECORD NUMBER
PRSIZE   DC    C' SIZE'
PRRECLEN DC    X'402020202021'         RECORD SIZE
         DC    C'  '
         DC    CL100' '
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*                                                                     *
*                                                                     *
*---------------------------------------------------------------------*
FILECOMM DSECT
         FILECOMM
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*                                                                     *
*                                                                     *
*---------------------------------------------------------------------*
         XLOC  TYPE=DSECT
         EJECT
         DCBD  DSORG=PS
*---------------------------------------------------------------------*
*                                                                     *
*                     REGISTER EQUATES                                *
*                                                                     *
*---------------------------------------------------------------------*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END   FILEPH02
./ ADD NAME=FILEPH03 0100-02291-02291-0123-00254-00254-00000-RLRICE
         MACRO
&NAME    HELP  &DATA
         LCLC  &NDX
&NDX     SETC  '&SYSNDX'
&NAME    DS    0C
         DC    AL2(E&NDX-B&NDX)
B&NDX    DS    0C
         DC    C&DATA
E&NDX    DS    0C
         MEND
FILEPH03 CSECT
         USING FILEPH03,R15            SPECIFY CSECT BASE
         ID                            DATE AND TIME COMPILED
         LR    R11,R15                 COPY BASE ADDRESS
         DROP  R15                     DROP PREVIOUS BASE
         USING FILEPH03,R11            RESUME WITH NEW BASE
         L     R12,VCOMM               COMMON MODULE ADDRESS
         USING FILECOMM,R12            DEFINE COMMON BASE
         BAL   R10,HEADINGS            PRINT 'HELP' HEADINGS
         LA    R9,HELPDATA             HELP DATA
HELP0010 DS    0H
         CLI   0(R9),X'FF'             END OF HELP DATA??
         BE    EXIT0000                YES
         MVC   PLINE,PLINE-1           CLEAR PRINT AREA
         SR    R3,R3                   CLEAR FOR LENGTH
         ICM   R3,3,0(R9)              DATA LENGTH
         BCTR  R3,0                    ADJUST FOR EXECUTE
         EX    R3,HELPMVC              MOVE HELP DATA
         BAL   R10,PRT0000             PRINT HELP DATA
         LA    R9,3(R3,R9)             NEXT HELP DATA
         B     HELP0010                PRINT NEXT LINE
HELPMVC  MVC   PLINE(0),2(R9)          MOVE HELP DATA
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*           PRINTING/HEADING ROUTINES                                 *
*                                                                     *
*---------------------------------------------------------------------*
PRT0000  DS    0H
         LA    R2,PRINTER
         PUT   (R2),PRCC               PRINT
         AP    COMLINE,P1              ADD 1 TO LINE COUNTER
         CLI   PRCC,C' '               SINGLE SPACE??
         BE    PRT0010                 YES
         AP    COMLINE,P1              ADD 1 TO LINE COUNTER
         CLI   PRCC,C'0'               DOUBLE SPACE??
         BE    PRT0010                 YES
         AP    COMLINE,P1              ADD 1 TO LINE COUNTER
PRT0010  DS    0H
         CP    COMLINE,P55             TIME FOR HEADINGS?
         BLR   R10                     NO
HEADINGS DS    0H
         AP    COMPAGE,P1              ADD 1 TO PAGE COUNT
         MVC   PRPAGE,=X'402020202120' EDIT WORD
         ED    PRPAGE,COMPAGE          EDIT PAGE NUMBER
         LA    R2,PRINTER
         PUT   (R2),HEADING            PRINT PAGE HEADING
         LA    R2,PRINTER
         ZAP   COMLINE,P1              RESET LINE COUNT
         BR    R10                     RETURN
EXIT0000 DS    0H
         LA    R2,SYSUT1               INPUT FILE ADDRESS
         CLOSE ((R2))                  CLOSE INPUT FILE
         LA    R2,PRINTER              PRINTER FILE ADDRESS
         CLOSE ((R2))                  CLOSE PRINT FILE
         CLI   COMCOPY,$COPY           'COPYING' RECORDS??
         BNE   EXIT0010                NO
         LA    R2,SYSUT2               OUTPUT FILE ADDRESS
         CLOSE ((R2))                  CLOSE OUTPUT FILE
EXIT0010 DS    0H
         L     R13,4(R13)              RESTORE SAVE AREA ADDRESS
         L     R14,12(R13)             RESTORE REGISTER 14
         LM    R0,R12,20(R13)          RESTORE ALL OTHER REGISTERS
         SR    R15,R15                 RETURN CODE
         BR    R14                     EXIT
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*                                                                     *
*                                                                     *
*---------------------------------------------------------------------*
         LTORG
VCOMM    DC    V(FILECOMM)             'COMMON' MODULE ADDRESS
P0       DC    P'0'                    CONSTANT
P1       DC    P'1'                    CONSTANT
P55      DC    P'55'                   CONSTANT
HEADING  DS    0C
         DC    CL111'1                   FILE UTILITY CONTROL PARAMETER+
               S'
         DC    C'PAGE'
PRPAGE   DC    CL6' '
         DC    C' '
PLINE    DS    0CL121
PRCC     DC    C' '
         DC    CL120' '
         EJECT
HELPDATA DS    0H
         HELP  '0                     FILE UTILITY PARAMETERS'
         HELP  '0*                 AN ASTERISK IN COLUMN 1 SPECIFIES A +
               COMMENT.  THE'
         HELP  '                   REMAINDER OF THE RECORD WILL BE IGNO+
               RED.  ANY NUMBER'
         HELP  '                   OF COMMENTS MAY BE USED INTERMIXED W+
               ITH PARAMETER'
         HELP  '                   STATEMENTS IN ANY ORDER.'
         HELP  '0COPY              SPECIFIES THAT THE RECORDS PRINTED W+
               ILL ALSO BE COPIED'
         HELP  '                   TO THE DATASET POINTED TO BY THE ''S+
               YSUT2'' DD.'
         HELP  '0COUNT=NNN         SPECIFIES THE MAXIMUM NUMBER OF RECO+
               RDS TO BE PRINTED.'
         HELP  '                   NOTE THAT THIS IS NOT THE NUMBER OF +
               RECORDS READ.  IF'
         HELP  '                   SCAN(S) ARE USED MANY MORE RECORDS M+
               AY BE READ THAN'
         HELP  '                   ARE PRINTED.'
         HELP  '0MAXLINES=NNNNN    SPECIFIES THE MAXIMUM NUMBER OF LINE+
               S TO BE PRINTED.'
         HELP  '                   THIS CAN PREVENT ''RUN AWAY'' PRINT.+
                DEFAULT=10000.'
         HELP  '0NOHEX             SPECIFIES THAT THE CHARACTER PORTION+
                ONLY BE PRINTED.'
         HELP  '                   ZONE, NUMERIC, AND SCALE LINES WILL +
               BE SUPPRESSED.'
         HELP  '0SKIP=NNN          SPECIFIES A NUMBER OF RECORDS TO BE +
               SKIPPED BEFORE ANY'
         HELP  '                   OTHER PARAMETERS ARE PROCESSED (SUCH+
                AS SCAN OR TRIGGER).'
         HELP  '0   SCAN='' ''       SPECIFIES A DATA STRING TO BE LOCA+
               TED IN EACH RECORD'
         HELP  ' OR SCAN=X'' ''      BEFORE IT IS SELECTED TO BE PRINTE+
               D.  THIS PROVIDES'
         HELP  ' OR SCAN1='' ''      A METHOD TO ''FILTER'' DESIRED REC+
               ORDS.  THE STRING MAY'
         HELP  ' OR SCAN1=X'' ''     BE EITHER IN CHARACTER OR HEX.  DE+
               FAULT IS CHARACTER.'
         HELP  '                   THE LETTER ''X'' PRECEEDING THE OPEN+
               ING QUOTE INDICATES'
         HELP  '                   THAT THE DATA IS IN HEX.'
         HELP  '0   SCAN2='' ''      SPECIFIES A SECOND DATA STRING TO +
               BE LOCATED IN EACH'
         HELP  ' OR SCAN2=X'' ''     RECORD.  SCAN OR SCAN1 MUST BE USE+
               D WHEN SCAN2 IS USED'
         HELP  '                   (IF YOU ONLY HAVE ONE STRING USE SCA+
               N OR SCAN1).  THE'
         HELP  '                   RELATIONSHIP OF SCAN1 AND SCAN2 MAY +
               BE ''AND'' OR ''OR''.'
         HELP  '                   IF ''AND'', THEN BOTH SCAN1 AND SCAN+
               2 MUST BE FOUND IN'
         HELP  '                   THE SAME RECORD BEFORE IT WILL BE PR+
               INTED.  IF ''OR'','
         HELP  '                   THEN IF EITHER SCAN1 OR SCAN2 IS FOU+
               ND IN A RECORD IT'
         HELP  '                   WILL BE PRINTED.  THIS RELATIONSHIP +
               IS DETERMINED BY'
         HELP  '                   THE ''SCANCTRL'' PARAMETER.'
         HELP  '0SCANCTRL=1 OR 2   SPECIFIES THE RELATIONSHIP OF SCAN/S+
               CAN1 AND SCAN2.'
         HELP  '     OR            THIS PARAMETER IS ONLY VALID WHEN SC+
               AN/SCAN1 AND'
         HELP  ' SCANCTRL=1 AND 2  SCAN2 ARE SPECIFIED.'
         HELP  '0SINGLE            SPECIFIES SINGLE SPACING.  THIS IS V+
               ALID ONLY WHEN'
         HELP  '                   ''NOHEX'' IS ALSO SPECIFIED.'
         HELP  '0FIRST100          FORCES SINGLE SPACING, NOHEX, SUPPRE+
               SSES FILE DCB  '
         HELP  '                   ATTRIBUTES, LOGICAL RECORD NUMBER, A+
               ND TRUNCATES'
         HELP  '                   RECORDS AT 100 CHARACTERS.'
         HELP  '0TITLE='' ''         SPECIFIES A CHARACTER STRING TO BE+
                PRINTED IN THE'
         HELP  '                   HEADINGS OF EACH PAGE.'
         HELP  ' TRIGGER='' ''       SIMILAR TO ''SCAN'' THIS SPECIFIES+
                A DATA STRING TO'
         HELP  '                   LOCATE IN A RECORD BEFORE PRINTING A+
               NY RECORDS.'
         HELP  '0ZONE=NNN          SPECIFIES A STARTING AND ENDING POSI+
               TION WITHIN THE'
         HELP  '   OR              RECORDS TO FIND THE SCAN/SCAN1 VALUE+
               .  THIS'
         HELP  ' ZONE1=NNN         PARAMETER IS VALID ONLY WHEN SCAN/SC+
               AN1 IS ALSO'
         HELP  '                   SPECIFIED.'
         HELP  '0ZONE2=NNN         SAME AS ZONE/ZONE1 FOR THE ''SCAN2''+
                PARAMETER.'
         HELP  '0TZONE=NNN         SAME AS ZONE/ZONE1 FOR THE ''TRIGGER+
               '' PARAMETER.'
         HELP  '-                     USAGE NOTES'
         HELP  '0   THE FILE UTILITY WILL READ ANY SEQUENTIAL DATASET O+
               R PDS MEMBER'
         HELP  ' THAT IS SUPPORTED BY THE MVS QSAM ACCESS METHOD.  THE +
               RECORD FORMAT,'
         HELP  ' RECORD LENGTH, AND BLOCK SIZE ARE PRINTED IN THE HEADI+
               NG OF EACH PAGE.'
         HELP  ' SINCE RECORDS MAY BE OF VARIABLE LENGTH, THE LENGTH OF+
                EACH RECORD'
         HELP  ' IS PRINTED IN THE PREFIX AREA OF THE FIRST LINE OF EAC+
               H RECORD.  THE'
         HELP  ' RELATIVE RECORD NUMBER OF EACH RECORD IS ALSO PRINTED +
               IN THE PREFIX'
         HELP  ' OF THE FIRST LINE FOR EACH RECORD.'
         HELP  '0   THE CONTROL STATEMENTS ARE PRINTED SO YOU CAN LATER+
                VERIFY SCAN/'
         HELP  ' TRIGGER/SKIP OR OTHER PARAMETERS, OR AS DOCUMENTATION +
               OF HOW THE'
         HELP  ' PRINTED RECORDS WERE SELECTED.'
         HELP  '0   ANY NUMBER OF CONTROL STATEMENTS MAY BE USED.  YOU +
               MAY SPECIFY ONE'
         HELP  ' OR MORE PARAMETERS ON EACH STATEMENT.  SEPARATE PARAME+
               TERS WITH COMMAS.'
         HELP  ' THE FIRST BLANK FOLLOWING A COMPLETE PARAMETER MARKS T+
               HE END OF THE'
         HELP  ' PARAMETERS, THE REMAINING COLUMNS WILL BE IGNORED AND +
               CAN BE USED FOR'
         HELP  ' COMMENTS.  STATEMENTS CANNOT BE CONTINUED.'
         HELP  '0   DD STATEMENTS REQUIRED ARE:'
         HELP  '0      SYSUT1    - INPUT DATASET'
         HELP  '       SYSPRINT  - PRINT OUTPUT'
         HELP  '       SYSUT2    - OUTPUT DATASET (ONLY IF THE ''COPY''+
                FUNCTION IS USED)'
         HELP  '0   THE SYSIN DD STATEMENT IS OPTIONAL.  IF OMITTED, AL+
               L RECORDS WILL'
         HELP  ' BE PRINTED IN HEX.'
         DC    X'FFFF'
*---------------------------------------------------------------------*
*                                                                     *
*                                                                     *
*                                                                     *
*---------------------------------------------------------------------*
FILECOMM DSECT
         FILECOMM
         DCBD  DSORG=PS
*---------------------------------------------------------------------*
*                                                                     *
*                     REGISTER EQUATES                                *
*                                                                     *
*---------------------------------------------------------------------*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END   FILEPH03
./ ADD NAME=PDSCOMM  0100-02291-02291-0123-00007-00007-00000-RLRICE
*---------------------------------------------------------------------*
*                                                                     *
*               COMMON MODULE                                         *
*                                                                     *
*---------------------------------------------------------------------*
        PDSBLOK BLOCK=COMM,TYPE=CSECT
        END
./ ADD NAME=PDSPH00  0100-02291-02291-0123-00950-00950-00000-RLRICE
*---------------------------------------------------------------------*
*     NAME: PDSPH00                                                   *
*                                                                     *
* FUNCTION: THIS MODULE OPENS ALL FILES IN THE 'FILECOMM' BLOCK AND   *
*           READS THE CONTROL STATEMENTS.  THE SCANNED DATASET NAME   *
*           AND DCB INFORMATION IS PRINTED IN THE HEADINGS, AND       *
*           CONTROL STATEMENTS LISTED TO PROVIDE A METHOD TO REVIEW   *
*           OR VERIFY HOW A PARTICULAR SCAN WAS PERFORMED.            *
*                                                                     *
*           EACH SCAN RECORD WILL BE ALLOCATED TO A SEPARATE OUTPUT   *
*           DD SO EACH REQUESTED SCAN VALUE WILL BE PRINTED ON A      *
*           LOGICALLY SEPARATE REPORT.  THE DD'S FOR THESE REPORTS    *
*           ARE DYNAMICALLY ALLOCATED VIA THE 'DAIR' FACILITY,        *
*           ALLOWING YOU TO SCAN ON VARYING NUMBERS OF SCAN ARGUEMENTS*
*           WITHOUT HAVING TO CHANGE THE JCL.                         *
*                                                                     *
*           WHEN ALL CONTROL STATEMENTS HAVE BEEN PROCESSED, CONTROL  *
*           IS EITHER PASSED TO 'PDSPH01' FOR SCANNING THE PDS, OR    *
*           'PDSPH02' FOR THE 'HELP' FUNCTION.                        *
*                                                                     *
*       THE CONTROL STATEMENTS ARE:                                   *
*                                                                     *
*     COMMENT: AN ASTERISK '*' IN COLUMN 1 DENOTES THE STATEMENT IS   *
*              A COMMENT.  ANY NUMBER OF COMMENTS MAY BE USED IN ANY  *
*              ORDER.                                                 *
*                                                                     *
*     LINE COUNT: (LINECT= IN COLUMNS 1-7).  THE LINE COUNT MAY BE    *
*              SET TO A VALUE IN THE RANGE 10-999 (THREE DIGITS MAX). *
*              LINE COUNT IS GLOBAL, THAT IS IT APPLIES TO THE        *
*              SYSPRINT OUTPUT AND ALL SCAN OUTPUT FILES.  DEFAULT    *
*              LINE COUNT IS 72.                                      *
*                                                                     *
*     OUTPUT CLASS: (CLASS= IN COLUMNS 1-6).  THE OUTPUT CLASS        *
*              ALLOCATED BY THE DYNAMIC SCAN DD FUNCTION MAY BE       *
*              CHANGED TO ANY CLASS (A-Z AND 0-9).  THE CLASS MAY     *
*              BE CHANGED MULTIPLE TIMES IF DESIRED AND APPLIES ONLY  *
*              TO DYNAMIC ALLOCATION OF SCAN DD'S FOLLOWING THE CLASS *
*              CONTROL STATEMENT.  DEFAULT CLASS IS 'X'.              *
*                                                                     *
*     CHARACTER SCAN:  (SCAN=' IN COLUMNS 1-6).  SPECIFIES A STRING TO*
*              BE SEARCHED FOR.  THE VALUE MAY BE 1 TO 70 CHARACTERS  *
*              IN LENGTH AND MUST BE ENCLOSED IN APOSTROPHES.         *
*              APOSTROPHES IN THE SEARCH ARGUEMENT MUST BE SPECFIED   *
*              AS TWO APOSTROPHES ('O''CLOCK').                      *
*                                                                     *
*     HEX SCAN: (SCAN=X' IN COLUMNS 1-7).  SPECIFIES A HEX STRING TO  *
*              BE SEARCHED FOR.  THE VALUE MAY BE 1 TO 35 BYTES       *
*              (2-70 HEX CHARACTERS).                                 *
*                                                                     *
*     HELP: (HELP IN COLUMNS 1-4).  REQUEST THE PDSSCAN HELP REPORT.  *
*              NO ACTUAL SCAN WILL BE PERFORMED, ONLY THE HELP REPORT *
*              WILL BE PRINTED.                                       *
*                                                                     *
*                                                                     *
*  JCL REQUIRED TO EXECUTE THE PDSSCAN UTILITY IS:                    *
*                                                                     *
*   //...      JOB                                                    *
*   //PDSSCAN  EXEC PGM=PDSSCAN                                       *
*   //SYSUT1   DD  DSN=PDS NAME,DISP=SHR                              *
*   //SYSPRINT DD  SYSOUT=*                                           *
*   //SYSIN    DD  *                                                  *
*      CONTROL STATEMENTS                                             *
*      .                                                              *
*      .                                                              *
*      .                                                              *
*   /*                                                                *
*   //                                                                *
*                                                                     *
*---------------------------------------------------------------------*
PDSPH00 CSECT
         USING PDSPH00,R12,R8                                           ASE00100
         STM   R14,R12,12(R13)     SAVE ENTRY REGISTERS                 ASE00110
         LR    R12,R15             LOAD PERMANENT                       ASE00120
         LA    R8,2048(R12)        INITIALIZE 2NDARY BASE
         LA    R8,2048(R8)         ... DITTO
         L     R10,VCOMM           COMMON MODULE ADDRESS
         USING PDSCOMM,R10         DEFINE COMM BASE
         LR    R2,R13              SAVE OLD REGISTER SAVE AREA ADDRESS  ASE00130
         LA    R13,COMMSAVE        POINT TO OUR SAVE AREA               ASE00140
         ST    R13,8(R2)           CHAIN FORWARD                        ASE00150
         ST    R2,4(R13)           CHAIN BACKWARD                       ASE00160
         B     INIT0000
         DC    C'PDS SCAN PH00 INITIALIZATION MODULE'
INIT0000 DS    0H
         LA    R2,PRINTER          PRINTER DCB
         OPEN  ((R2),OUTPUT)       OPEN PRINTER DCB
         LA    R2,SYSIN            CONTROL STATEMENT DCB
         USING IHADCB,R2           DEFINE DCB BASE
         LA    R1,EOF0000          SYSIN END OF FILE ROUTINE
         STCM  R1,7,DCBEODA        INSERT END OF FILE ADDRESS
         OPEN  ((R2),INPUT)        OPEN CONTROL STATEMENT DCB
         LA    R2,PDSDIR           PDS DIRECTORY DCB
         OPEN  ((R2),INPUT)        OPEN DIRECTORY DCB
         LA    R2,PDSMEM           PDS MEMBER DCB
         OPEN  ((R2),INPUT)        OPEN PDS MEMBER DCB
         RDJFCB MF=(E,JFCBREQ)     READ JFCB FOR THIS DATASET
         LA    R1,COMMRF           TRANSLATED RECORD FORMAT
         MVI   0(R1),C'U'          ASSUME UNDEFINE FORMAT
         TM    DCBRECFM,DCBRECU    UNDEFINED??
         BO    ATTR0010            YES
         MVI   0(R1),C'V'          ASSUME VARIABLE LENGTH RECORDS
         TM    DCBRECFM,DCBRECV    VARIABLE LENGTH RECORDS??
         BO    ATTR0010            YES
         MVI   0(R1),C'F'          ASSUME FIXED LENGTH RECORDS
ATTR0010 DS    0H
         LA    R1,1(R1)            ADVANCE ADDRESS
         TM    DCBRECFM,DCBRECBR   BLOCKED RECORDS??
         BNO   ATTR0020            NO
         MVI   0(R1),C'B'          INDICATE BLOCKED
         LA    R1,1(R1)            ADVANCE ADDRESS
ATTR0020 DS    0H
         TM    DCBRECFM,DCBRECSB   SPANNED RECORDS??
         BNO   ATTR0030            NO
         MVI   0(R1),C'S'          INDICATE SPANNED
         LA    R1,1(R1)            ADVANCE ADDRESS
ATTR0030 DS    0H
         TM    DCBRECFM,DCBRECCA   ASA CONTROL CHARACTERS??
         BNO   ATTR0040            NO
         MVI   0(R1),C'A'          INDICATE ASA CONTROL CHARACTERS
         LA    R1,1(R1)            ADVANCE ADDRESS
ATTR0040 DS    0H
         TM    DCBRECFM,DCBRECCM   MACHINE CONTROL CHARACTERS??
         BNO   ATTR0050            NO
         MVI   0(R1),C'M'          INDICATE MACHINE CONTROL CHARACTERS
ATTR0050 DS    0H
         MVC   COMMRSZ,DCBLRECL    COPY RECORD LENGTH
         MVC   COMMBSZ,DCBBLKSI    COPY BLOCK SIZE
         BAL   R9,HEAD0000         PRINT HEADING
         MVC   PRDSN,JFCBDSNM      COPY DATASET NAME
         MVC   PRRECFM,COMMRF      COPY TRANSLATED RECORD FORMAT
         SR    R1,R1               CLEAR FOR RECORD SIZE
         ICM   R1,3,COMMRSZ        RECORD SIZE
         CVD   R1,DWORD            CONVERT TO DECIMAL
         MVC   PRLRECL,=X'402020202120'
         ED    PRLRECL,DWORD+5     EDIT RECORD LENGTH
         ICM   R1,3,COMMBSZ        BLOCK SIZE
         CVD   R1,DWORD            CONVERT TO DECIMAL
         MVC   PRBLKSZ,=X'402020202120'
         ED    PRBLKSZ,DWORD+5     EDIT BLOCK SIZE
         MVC   PLINE(DSNLINEL),DSNLINE
         BAL   R9,PRT0000          PRINT DATASET NAME
         MVC   PLINE(DCBLINEL),DCBLINE
         BAL   R9,PRT0000          PRINT DCB INFO
         MVC   PLINE(MSG0L),MSG0   MOVE MESSAGE
         BAL   R9,PRT0000          PRINT 'HELP' INFO MESSAGE
         LA    R1,ALORB            DAIR REQUEST BLOCK
         USING S99RB,R1            DEFINE BASE
         MVI   S99VERB,S99VRBAL    INSERT ALLOCATION VERB
         MVI   S99RBLN,S99RBEND-S99RB     INSERT RB LENGTH
         LA    R2,ALOPARM          FIRST TEXT UNIT ADDRESS
         ST    R2,S99TXTPP         INSERT TEXT ADDRESS ADDRESS
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*        PROCESS CONTROL STATEMENTS                                   *
*                                                                     *
*---------------------------------------------------------------------*
PROC0000 DS    0H
         GET   SYSIN,CTLAREA       READ CONTROL STATEMENT
         MVC   PLINE+1(CTLAREAL),CTLAREA
         CLI   CTLAREA,C'*'        COMMENT??
         BE    PROC0010            YES
         MVI   PLINE,C'0'          DOUBLE SPACE
PROC0010 DS    0H
         BAL   R9,PRT0000          PRINT CONTROL STATEMENT
         CLI   CTLAREA,C'*'        COMMENT??
         BE    PROC0000            READ NEXT CONTROL STATEMENT
         CLC   =C'LINECT=',CTLAREA LINE COUNT CONTROL STATEMENT??
         BE    LINE0000            YES
         CLC   =C'SCAN=X''',CTLAREA HEX SCAN CONTROL STATEMENT??
         BE    SCAN0000            YES
         CLC   =C'SCAN=''',CTLAREA SCAN CONTROL STATEMENT??
         BE    SCAN1000            YES
         CLC   =C'ZONE=',CTLAREA   ZONE CONTROL STATEMENT??
         BE    ZONE0000            YES
         CLC   =C'CLASS=',CTLAREA  SYSOUT CLASS CONTROL STATEMENT??
         BE    CLASS000            YES
         CLC   =C'HELP ',CTLAREA   'HELP' CONTROL STATEMENT??
         BE    HELP0000            YES
         CLC   =C'NAME=',CTLAREA   'NAME' CONTROL STATEMENT??
         BE    NAME0000            YES
         CLC   =C'ABEND ',CTLAREA  'ABEND' CONTROL STATEMENT??
         BE    ABEND000            YES
         MVC   PLINE(MSG1L),MSG1   INVALID COMMAND MESSAGE
         BAL   R9,PRT0000          PRINT MESSAGE
         B     PROC0000            READ NEXT CONTROL STATEMENT
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*        PROCESS LINE COUNT CONTROL STATEMENT                         *
*                                                                     *
*---------------------------------------------------------------------*
LINE0000 DS    0H
         LA    R1,3                MAXIMUM NUMBER OF DIGITS
         MVC   NUMWORK,=C'00000'   INITIALIZE WORK AREA
         LA    R2,CTLAREA+7        FIRST DIGIT
LINE0010 DS    0H
         CLI   0(R2),C' '          BLANK??
         BE    LINE0020            YES
         CLI   0(R2),C'0'          VALID DIGIT??
         BL    LINE0030            NO
         CLI   0(R2),C'9'          VALID DIGIT??
         BH    LINE0030            NO
         MVC   NUMWORK(4),NUMWORK+1
         MVC   NUMWORK+4(1),0(R2)  MOVE DIGIT TO UNITS POSITION
         LA    R2,1(R2)            NEXT DIGIT
         B     LINE0010            PROCESS ALL DIGITS
LINE0020 DS    0H
         PACK  DWORD,NUMWORK       PACK LINE COUNT
         CP    DWORD,P10           LINE COUNT TOO SMALL??
         BL    LINE0040            YES
         ZAP   COMMAXL,DWORD       SET MAX LINE COUNT
         B     PROC0000            READ NEXT CONTROL STATEMENT
LINE0030 DS    0H
         MVC   PLINE(MSG2L),MSG2   MOVE MESSAGE
         BAL   R9,PRT0000          PRINT MESSAGE
         B     PROC0000            READ NEXT CONTROL STATEMENT
LINE0040 DS    0H
         MVC   PLINE(MSG3L),MSG3   MOVE MESSAGE
         BAL   R9,PRT0000          PRINT MESSAGE
         B     PROC0000            READ NEXT CONTROL STATEMENT
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*        PROCESS SYSOUT CLASS CONTROL STATEMENT                       *
*                                                                     *
*---------------------------------------------------------------------*
CLASS000 DS    0H
         CLI   CTLAREA+6,C'A'      VALID CLASS??
         BL    CLASS020            NO
         CLI   CTLAREA+6,C'Z'      VALID CLASS??
         BNH   CLASS010            YES
         CLI   CTLAREA+6,C'0'      VALID CLASS??
         BL    CLASS020            NO
         CLI   CTLAREA+6,C'9'      VALID CLASS??
         BH    CLASS020            NO
CLASS010 DS    0H
         MVC   PRTCLASS,CTLAREA+6  SET NEW SYSOUT CLASS
         B     PROC0000            READ NEXT CONTROL STATEMENT
CLASS020 DS    0H
         MVC   PLINE(MSG9L),MSG9   MOVE MESSAGE
         BAL   R9,PRT0000          PRINT MESSAGE
         B     PROC0000            READ NEXT CONTROL STATEMENT
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*        PROCESS HEX SCAN CONTROL STATEMENTS                          *
*                                                                     *
*---------------------------------------------------------------------*
SCAN0000 DS    0H
         NI    PGMFLAGS,255-$VALIDSC TURN OFF VALID SCAN FLAG
         SR    R1,R1               CLEAR FOR LENGTH
         LA    R2,CTLAREA+7        FIRST HEX DIGIT
         LA    R3,70               MAXIMUM HEX DIGITS
SCAN0010 DS    0H
         CLI   0(R2),X'7D'         CLOSING QUOTE??
         BE    SCAN0030            YES
         CLI   0(R2),C'A'          VALID HEX DIGIT??
         BL    SCAN0050            NO
         CLI   0(R2),C'G'          VALID HEX DIGIT??
         BL    SCAN0020            YES
         CLI   0(R2),C'0'          VALID HEX DIGIT??
         BL    SCAN0050            NO
         CLI   0(R2),C'9'          VALID HEX DIGIT??
         BH    SCAN0050            NO
SCAN0020 DS    0H
         LA    R1,1(R1)            ADD TO LENGTH
         LA    R2,1(R2)            NEXT HEX DIGIT
         BCT   R3,SCAN0010         LOOP
         B     SCAN0060            NO CLOSING QUOTE
SCAN0030 DS    0H
         STH   R1,TEMPL            STORE LENGTH
         TM    TEMPL+1,X'01'       IS LENGTH ODD??
         BO    SCAN0070            YES, INVALID
         LTR   R1,R1               LENGTH ZERO??
         BZ    SCAN0080            YES, INVALID
         SRL   R1,1                DIVIDE LENGTH BY 2
         STH   R1,TEMPL            SAVE 'EFFECTIVE' LENGTH
         MVC   TEMPVAL,CTLAREA+5   MOVE SCAN VALUE
         NC    CTLAREA+7(70),HEX1F1F  DROP HIGH ZONE BITS
         TR    CTLAREA+7(70),PACKTBL  TRANSLATE FOR PACKING
         LA    R2,TEMPARG          SCAN VALUE
         LA    R3,CTLAREA+7        START OVER
SCAN0040 DS    0H
         PACK  0(2,R2),0(3,R3)     PACK A DIGIT
         LA    R2,1(R2)            NEXT SCAN VALUE BYTE
         LA    R3,2(R3)            NEXT 'HEX' BYTE
         BCT   R1,SCAN0040         PACK ALL BYTES
         B     SCAN2000            BUILD SCAN BLOCK
SCAN0050 DS    0H
         MVC   PLINE(MSG4L),MSG4   INVALID HEX DIGIT
         BAL   R9,PRT0000          PRINT MESSAGE
         B     PROC0000            READ NEXT CONTROL STATEMENT
SCAN0060 DS    0H
         MVC   PLINE(MSG5L),MSG5   NO CLOSING QUOTE
         BAL   R9,PRT0000          PRINT MESSAGE
         B     PROC0000            READ NEXT CONTROL STATEMENT
SCAN0070 DS    0H
         MVC   PLINE(MSG6L),MSG6   ODD NUMBER OF HEX DIGITS
         BAL   R9,PRT0000          PRINT MESSAGE
         B     PROC0000            READ NEXT CONTROL STATEMENT
SCAN0080 DS    0H
         MVC   PLINE(MSG7L),MSG7   LENGTH ZERO
         BAL   R9,PRT0000          PRINT MESSAGE
         B     PROC0000            READ NEXT CONTROL STATEMENT
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*        PROCESS CHARACTER SCAN CONTROL STATEMENTS                    *
*                                                                     *
*---------------------------------------------------------------------*
SCAN1000 DS    0H
         NI    PGMFLAGS,255-$VALIDSC TURN OFF VALID SCAN FLAG
         LA    R1,CTLAREA+6        FIRST BYTE OF SCAN VALUE
         MVI   TEMPARG,C' '        INITIALIZE ARGUEMENT
         MVC   TEMPARG+1(L'TEMPARG-1),TEMPARG
         LA    R2,TEMPARG          FIRST BYTE OF SCAN ARGUEMENT
         LA    R3,70               MAXIMUM SCAN ARGUEMENT LENGTH
         SR    R4,R4               ZERO FOR LENGTH
SCAN1010 DS    0H
         CLI   0(R1),X'7D'         CLOSING QUOTE??
         BNE   SCAN1020            NO
         CLI   1(R1),C' '          BLANK??
         BE    SCAN1030            YES... ENDING QUOTE
         CLI   1(R1),X'7D'         DOUBLE QUOTE??
         BNE   SCAN1040            NO... INVALID SYNTAX
         LA    R1,1(R1)            SKIP 1 QUOTE
         BCT   R3,SCAN1020         MINUS 1 FROM LENGTH
         B     SCAN0060            NO CLOSING QUOTE
SCAN1020 DS    0H
         MVC   0(1,R2),0(R1)       COPY TO SCAN ARG
         LA    R1,1(R1)            NEXT INPUT BYTE
         LA    R2,1(R2)            NEXT ARGUEMENT BYTE
         LA    R4,1(R4)            ARGUEMENT LENGTH
         BCT   R3,SCAN1010         TRY AGAIN
         B     SCAN0060            NO CLOSING QUOTE
SCAN1030 DS    0H
         MVC   TEMPVAL,TEMPARG     COPY ARGUEMENT TO VALUE
         STH   R4,TEMPL            SAVE SEARCH VALUE LENGTH
         B     SCAN2000            BUILD SCAN BLOCK
SCAN1040 DS    0H
         MVC   PLINE(MSG8L),MSG8   LENGTH ZERO
         BAL   R9,PRT0000          PRINT MESSAGE
         B     PROC0000            READ NEXT CONTROL STATEMENT
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*        INITIALIZE SCAN BLOCK                                        *
*                                                                     *
*---------------------------------------------------------------------*
SCAN2000 DS    0H
         LA    R0,SCANBLOKL        SCAN BLOCK LENGTH
         GETMAIN R,LV=(0)          ACQUIRE STORAGE FOR SCAN BLOCK
         LTR   R15,R15             GETMAIN SUCCESSFUL??
         BNZ   ERR1000             NO
         LR    R11,R1              COPY STORAGE ADDRESS
         USING SCANBLOK,R11        DEFINE BASE
         XC    SCANNEXT,SCANNEXT   ZERO NEXT IN CHAIN
         MVC   SCANL,TEMPL         COPY SCAN ARGUEMENT LENGTH
         MVC   SCANVAL,TEMPVAL     COPY SCAN VALUE (SOURCE)
         MVC   SCANARG,TEMPARG     COPY SCAN VALUE (CONVERTED)
         MVC   SCANDCB(96),INITDCB COPY DCB
         MVC   SCANPARM(INITPARML),INITPARM
         ZAP   SCANLC,P0           INITIALIZE LINE COUNT
         ZAP   SCANPC,P0           INITIALIZE PAGE COUNT
         LH    R3,SCANL            SCAN ARGUEMENT LENGTH
         XLOC  TYPE=INIT,          INITIALIZE XLOC                     +
               STRLEN=(R3),        .. STRING LENGTH                    +
               STRING=SCANARG,     .. SEARCH STRING                    +
               WORK=SCANWORK,      .. WORK AREA FOR THIS STRING        +
               TABLE=COMMFOC,      .. FREQUENCY OF OCCURRENCE TABLE    +
               MF=(E,SCANPARM)     .. EXECUTION FORM
         CLI   SCANPARM+(XLOCSTAT-XLOCLIST),$XLOCOK   SUCCESSFUL INIT??
         BNE   ERR2000             NO
         AP    DDCNT,P1            ADD 1 TO DD NAMES ALLOCATED
         MVC   DDWORK+2(6),=X'F02020202020'
         ED    DDWORK+2(6),DDCNT   EDIT DD NUMBER
         MVC   DDWORK(3),=C'PRT'   INSERT 'PRT'
         MVC   DAIRWORK(DAIRWORKL),DAIRINIT   INITIALIZE CONSTANTS
         MVC   DAIRDD,DDWORK       MOVE DD NAME
         LA    R2,SCANDCB          DCB WITHIN SCAN BLOCK
         MVC   DCBDDNAM,DDWORK     COPY NAME TO DCB
         MVC   SCANDD,DDWORK       SAVE NAME FOR DEALLOCATION
         LA    R1,ALORBA           REQUEST BLOCK ADDRESS ADDRESS
         SVC   99                  ISSUE DAIR SVC
         LTR   R15,R15             SUCCESSFUL??
         BNZ   ERR3000             NO
         LA    R1,COMMANCH         SCAN BLOCK ANCHOR
SCAN2010 DS    0H
         ICM   R2,15,0(R1)         SCAN BLOCK ADDRESS
         BZ    SCAN2020            END OF CHAIN FOUND
         LR    R1,R2               COPY SCAN BLOCK ADDRESS
         B     SCAN2010            SEARCH FOR END OF CHAIN
SCAN2020 DS    0H
         ST    R11,0(R1)           ADD NEW BLOCK TO END OF CHAIN
         ST    R11,CURRSCAN        SAVE CURRENT SCAN BLOCK ADDRESS
         OI    PGMFLAGS,$VALIDSC   TURN ON VALID SCAN FLAG
         B     PROC0000            READ NEXT CONTROL STATEMENT
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*        ZONE PROCESSING                                              *
*                                                                     *
*---------------------------------------------------------------------*
ZONE0000 DS    0H
         OC    CURRSCAN,CURRSCAN   HAS SCAN BLOCK BEEN SET??
         BZ    ZONE0100            NO
         TM    PGMFLAGS,$VALIDSC   LAST SCAN VALID??
         BNO   ZONE0180            NO
         L     R11,CURRSCAN        CURRENT SCAN BLOCK
         MVI   SCANFLAG,X'00'      RESET ALL FLAGS
         LA    R2,CTLAREA+5        FIRST DIGIT OF ZONE
         CLI   0(R2),C','          ZONE BEGIN OMITTED??
         BE    ZONE0030            YES
         LA    R3,6                LOOP LIMITER
         MVC   NUMWORK,=C'00000'   INITIALIZE WORK AREA
ZONE0010 DS    0H
         CLI   0(R2),C' '          END OF STATEMENT??
         BE    ZONE0020            YES
         CLI   0(R2),C','          DELIMITER??
         BE    ZONE0020            YES
         CLI   0(R2),C'0'          VALID DIGIT??
         BL    ZONE0110            NO
         CLI   0(R2),C'9'          VALID DIGIT??
         BH    ZONE0110            NO
         MVC   NUMWORK(4),NUMWORK+1
         MVC   NUMWORK+4(1),0(R2)  MOVE TO DIGITS POSITION
         LA    R2,1(R2)            NEXT DIGIT
         BCT   R3,ZONE0010         LOOP
         B     ZONE0120            TOO MANY DIGITS
ZONE0020 DS    0H
         PACK  DWORD,NUMWORK       PACK ZONE BEGIN
         CVB   R1,DWORD            CONVERT TO BINARY
         LTR   R1,R1               ZERO??
         BZ    ZONE0130            YES
         CH    R1,COMMRSZ          LARGER THAN RECORD LENGTH??
         BH    ZONE0140            YES
         STH   R1,SCANBGN          SET ZONE BEGIN
         OI    SCANFLAG,$SCANBGN   INDICATE ZONE BEGIN VALID
ZONE0030 DS    0H
         CLI   0(R2),C','          DELIMITER??
         BNE   ZONE0060            NO... TEST ZONE WIDTH
         LA    R2,1(R2)            SKIP DELIMITER
         CLI   0(R2),C' '          END OF STATEMENT??
         BE    ZONE0060            YES... TEST ZONE WIDTH
         LA    R3,6                LOOP LIMITER
         MVC   NUMWORK,=C'00000'   INITIALIZE WORK AREA
ZONE0040 DS    0H
         CLI   0(R2),C' '          END OF STATEMENT??
         BE    ZONE0050            YES
         CLI   0(R2),C'0'          VALID DIGIT??
         BL    ZONE0110            NO
         CLI   0(R2),C'9'          VALID DIGIT??
         BH    ZONE0110            NO
         MVC   NUMWORK(4),NUMWORK+1
         MVC   NUMWORK+4(1),0(R2)  MOVE TO DIGITS POSITION
         LA    R2,1(R2)            NEXT DIGIT
         BCT   R3,ZONE0040         LOOP
         B     ZONE0120            TOO MANY DIGITS
ZONE0050 DS    0H
         PACK  DWORD,NUMWORK       PACK ZONE BEGIN
         CVB   R1,DWORD            CONVERT TO BINARY
         LTR   R1,R1               ZERO??
         BZ    ZONE0150            YES
         CH    R1,COMMRSZ          LARGER THAN RECORD LENGTH??
         BH    ZONE0160            YES
         CH    R1,SCANBGN          LESS THAN BEGIN??
         BL    ZONE0170            YES
         STH   R1,SCANEND          SET ZONE END
         OI    SCANFLAG,$SCANEND   INDICATE ZONE END VALID
ZONE0060 DS    0H
         SR    R1,R1               ASSUME NO ZONE BEGIN
         TM    SCANFLAG,$SCANBGN   BEGIN POSITION GIVEN??
         BNO   ZONE0070            NO
         LH    R1,SCANBGN          ZONE BEGIN
         BCTR  R1,0                RELATIVE TO ZERO
ZONE0070 DS    0H
         LH    R2,COMMRSZ          ASSUME NO ZONE END
         TM    SCANFLAG,$SCANEND   ZONE END GIVEN??
         BNO   ZONE0080            NO
         LH    R2,SCANEND          LIMIT TO ZONE END
ZONE0080 DS    0H
         SR    R2,R1               ZONE WIDTH (MAX)
         CH    R2,SCANL            LESS THAN STRING LENGTH??
         BNL   PROC0000            NO...
         MVC   PLINE(MSG22L),MSG22 MOVE MESSAGE
         BAL   R9,PRT0000          PRINT MESSAGE
         OI    COMMFLAG,$COMMAB    SET ABORT FLAG
         B     PROC0000            READ NEXT CONTROL STATEMENT
ZONE0100 DS    0H
         MVC   PLINE(MSG13L),MSG13 MOVE MESSAGE (NO SCAN SET)
         BAL   R9,PRT0000          PRINT MESSAGE
         OI    COMMFLAG,$COMMAB    SET ABORT FLAG
         B     PROC0000            READ NEXT CONTROL STATEMENT
ZONE0110 DS    0H
         MVC   PLINE(MSG14L),MSG14 MOVE MESSAGE (INVALID DIGIT)
         BAL   R9,PRT0000          PRINT MESSAGE
         OI    COMMFLAG,$COMMAB    SET ABORT FLAG
         B     PROC0000            READ NEXT CONTROL STATEMENT
ZONE0120 DS    0H
         MVC   PLINE(MSG15L),MSG15 MOVE MESSAGE (TOO MANY DIGITS)
         BAL   R9,PRT0000          PRINT MESSAGE
         OI    COMMFLAG,$COMMAB    SET ABORT FLAG
         B     PROC0000            READ NEXT CONTROL STATEMENT
ZONE0130 DS    0H
         MVC   PLINE(MSG16L),MSG16 MOVE MESSAGE (ZONE BEGIN ZERO)
         BAL   R9,PRT0000          PRINT MESSAGE
         OI    COMMFLAG,$COMMAB    SET ABORT FLAG
         B     PROC0000            READ NEXT CONTROL STATEMENT
ZONE0140 DS    0H
         MVC   PLINE(MSG17L),MSG17 MOVE MESSAGE (ZONE BEGIN > LRECL)
         BAL   R9,PRT0000          PRINT MESSAGE
         OI    COMMFLAG,$COMMAB    SET ABORT FLAG
         B     PROC0000            READ NEXT CONTROL STATEMENT
ZONE0150 DS    0H
         MVC   PLINE(MSG18L),MSG18 MOVE MESSAGE (ZONE END ZERO)
         BAL   R9,PRT0000          PRINT MESSAGE
         OI    COMMFLAG,$COMMAB    SET ABORT FLAG
         B     PROC0000            READ NEXT CONTROL STATEMENT
ZONE0160 DS    0H
         MVC   PLINE(MSG19L),MSG19 MOVE MESSAGE (ZONE END > LRECL)
         BAL   R9,PRT0000          PRINT MESSAGE
         OI    COMMFLAG,$COMMAB    SET ABORT FLAG
         B     PROC0000            READ NEXT CONTROL STATEMENT
ZONE0170 DS    0H
         MVC   PLINE(MSG20L),MSG20 MOVE MESSAGE (ZONE END < ZONE BEGIN)
         BAL   R9,PRT0000          PRINT MESSAGE
         OI    COMMFLAG,$COMMAB    SET ABORT FLAG
         B     PROC0000            READ NEXT CONTROL STATEMENT
ZONE0180 DS    0H
         MVC   PLINE(MSG21L),MSG21 MOVE MESSAGE (LAST SCAN INVALID)
         BAL   R9,PRT0000          PRINT MESSAGE
         OI    COMMFLAG,$COMMAB    SET ABORT FLAG
         B     PROC0000            READ NEXT CONTROL STATEMENT
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*        HELP PROCESSING                                              *
*                                                                     *
*---------------------------------------------------------------------*
HELP0000 DS    0H
         MVC   PLINE(MSG10L),MSG10 MOVE MESSAGE
         BAL   R9,PRT0000          PRINT MESSAGE
         OI    COMMFLAG,$COMMHL    SET HELP FLAG
         B     PROC0000            READ NEXT CONTROL STATEMENT
         SPACE 2
*---------------------------------------------------------------------*
*                                                                     *
*        NAME FILTERING                                               *
*                                                                     *
*---------------------------------------------------------------------*
NAME0000 DS    0H
         CLI   CTLAREA+5,C' '     ANY DATA AT ALL?
         BE    NAME0120           NO NAME GIVEN
         CLI   CTLAREA+5,C'*'     FIRST CHARACTER AN ASTERISK?
         BE    NAME0130           YES.. DON'T ALLOW
         LA    R2,CTLAREA+5       FIRST CHARACTER OF NAME
         LA    R3,8               MAXIMUM SCAN LENGTH
         XC    NAMEWORK(8*NAMEL),NAMEWORK CLEAR ALL NAMES
         LA    R4,NAMEWORK        FIRST ELEMENT'S ADDRESS IN WORK AREA
         USING NAMEDISP,R4        DEFINE BASE
         SR    R5,R5              INITIALIZE DISPLACEMENT
NAME0010 DS    0H
         LA    R6,NAMEDATA        FIRST CHARACTER OF DATA
         SR    R7,R7              INITIALIZE LENGTH
NAME0020 DS    0H
         CLI   0(R2),C' '         END OF PATTERN?
         BE    NAME0030           YES
         CLI   0(R2),C'*'         ASTERISK?
         BE    NAME0050           YES
         CLI   0(R2),C'+'         PLUS SIGN?
         BE    NAME0070           YES
         MVC   0(1,R6),0(R2)      MOVE TO NAME DATA
         LA    R2,1(R2)
         LA    R6,1(R6)
         LA    R7,1(R7)           ADD 1 TO LENGTH
         BCT   R3,NAME0020        KEEP GOING
NAME0030 DS    0H
         LTR   R7,R7              LENGTH = ZERO?
         BZ    NAME0040           YES
         STH   R5,NAMEDISP        SET DISPLACEMENT
         STH   R7,NAMELEN         SET PARTIAL (OR FULL LENGTH)
         LA    R4,NAMEL(R4)       NEXT ELEMENT
         AR    R5,R7              DISP = DISP + LENGTH
NAME0040 DS    0H
         LTR   R3,R3              END OF DATA REACHED?
         BZ    NAME0090           ADD THIS ENTRY TO NAME CHAIN
         MVC   NAMEDATA,BLANKS    SET DATA TO BLANKS
         STH   R5,NAMEDISP        SET DISPLACEMENT
         STH   R3,NAMELEN         SET PARTIAL (OR FULL LENGTH)
         B     NAME0090           ADD THIS ENTRY TO NAME CHAIN
NAME0050 DS    0H
         CLI   1(R2),C' '         IS NEXT CHARACTER A BLANK?
         BNE   NAME0060           YES.. ADD THIS ENTRY TO CHAIN
         LTR   R7,R7              LENGTH = ZERO?
         BZ    NAME0090           ADD THIS ENTRY TO NAME CHAIN
         STH   R5,NAMEDISP        SET DISPLACEMENT
         STH   R7,NAMELEN         SET LENGTH
         B     NAME0090           ADD THIS ENTRY TO NAME CHAIN
NAME0060 DS    0H
         MVC   PLINE(MSG24L),MSG24 MOVE MESSAGE
         BAL   R9,PRT0000         PRINT MESSAGE
         OI    COMMFLAG,$COMMAB   SET ABORT FLAG
         B     PROC0000           READ NEXT CONTROL STATEMENT
NAME0070 DS    0H
         CLI   1(R2),C'*'         IS NEXT CHARACTER AN ASTERISK?
         BE    NAME0140           YES.. DON'T ALLOW
         LTR   R7,R7              LENGTH ZERO?
         BZ    NAME0080           YES
         STH   R5,NAMEDISP        SET DISPLACEMENT
         STH   R7,NAMELEN         SET LENGTH
         LA    R4,NAMEL(R4)       NEXT ELEMENT
         AR    R5,R7              DISP = DISP + NEW LENGTH
NAME0080 DS    0H
         LA    R5,1(R5)           DISP = DISP + 1
         LA    R2,1(R2)           SCAN POINT = SCAN POINT + 1
         BCT   R3,NAME0010        KEEP GOING
NAME0090 DS    0H
         OC    NAMEWORK(8*NAMEL),NAMEWORK    ALL ENTRIES STILL EMPTY?
         BZ    NAME0150           YES.. GOOD TRY
         ICM   R2,15,COMMNAME     NAME CHAIN ANCHOR ADDRESS
         LA    R3,COMMNAME        ADDRESS'S ADDRESS
         USING NAMEBLOK,R2        DEFINE BASE
         DROP  R4
NAME0100 DS    0H
         BZ    NAME0110           NOTHING ON THE CHAIN
         LA    R3,NAMENEXT        ADDRESS'S ADDRESS
         ICM   R2,15,NAMENEXT     NEXT BLOCK ON THE CHAIN
         B     NAME0100           KEEP FOLLOWING THE CHAIN
NAME0110 DS    0H
         LA    R0,(8*NAMEL)+4     LENGTH OF NAME BLOCK
         GETMAIN R,LV=(0)         ACQUIRE NAME BLOCK STORAGE
         ST    R1,0(R3)           SET FORWARD POINTER IN LAST BLOCK
         LR    R2,R1              SET BASE
         XC    0((8*NAMEL)+4,R2),0(R2)
         XC    NAMENEXT,NAMENEXT  CLEAR FORWARD POINTER IN THIS BLOCK
         MVC   NAMEDISP(8*NAMEL),NAMEWORK
         B     PROC0000           READ NEXT CONTROL STATEMENT
NAME0120 DS    0H
         MVC   PLINE(MSG23L),MSG23 MOVE MESSAGE
         BAL   R9,PRT0000         PRINT MESSAGE
         OI    COMMFLAG,$COMMAB   SET ABORT FLAG
         B     PROC0000           READ NEXT CONTROL STATEMENT
NAME0130 DS    0H
         MVC   PLINE(MSG25L),MSG25 MOVE MESSAGE
         BAL   R9,PRT0000         PRINT MESSAGE
         OI    COMMFLAG,$COMMAB   SET ABORT FLAG
         B     PROC0000           READ NEXT CONTROL STATEMENT
NAME0140 DS    0H
         MVC   PLINE(MSG26L),MSG26 MOVE MESSAGE
         BAL   R9,PRT0000         PRINT MESSAGE
         OI    COMMFLAG,$COMMAB   SET ABORT FLAG
         B     PROC0000           READ NEXT CONTROL STATEMENT
NAME0150 DS    0H
         MVC   PLINE(MSG27L),MSG27 MOVE MESSAGE
         BAL   R9,PRT0000         PRINT MESSAGE
         OI    COMMFLAG,$COMMAB   SET ABORT FLAG
         B     PROC0000           READ NEXT CONTROL STATEMENT
         SPACE 2
*---------------------------------------------------------------------*
*                                                                     *
*        ABEND ON DEMAND                                              *
*                                                                     *
*---------------------------------------------------------------------*
ABEND000 DS    0H
         DC    H'0'
*---------------------------------------------------------------------*
*                                                                     *
*        ERROR ROUTINES                                               *
*                                                                     *
*---------------------------------------------------------------------*
ERR1000  DS    0H                  GETMAIN FAILURE
         STH   R15,DWORD           SAVE RETURN CODE
         UNPK  PRGMR15(5),DWORD(3) UNPACK GETMAIN RETURN CODE
         MVZ   PRGMR15,HEX0F0F     TURN OFF ZONES
         TR    PRGMR15,HEXCHAR     TRANSLATE TO PRINTABLE
         MVI   PRGMR15+4,C' '      RESTORE BLANK
         MVC   PLINE(GMLINEL),GMLINE  MOVE ERROR MESSAGE
         OI    COMMFLAG,$COMMAB    SET ABORT FLAG
         BAL   R9,PRT0000          PRINT MESSAGE
         B     PROC0000            READ NEXT CONTROL STATEMENT
ERR2000  DS    0H                  XLOC INITIALIZATION FAILURE
         CLI   SCANPARM+(XLOCSTAT-XLOCLIST),$XLOCER1  STRING LENGTH <1?
         BE    ERR2010             YES
         MVC   PLINE(MSG11L),MSG11 MOVE MESSAGE
         B     ERR2020             SKIP MSG FOR TOO LONG
ERR2010  DS    0H
         MVC   PLINE(MSG12L),MSG12 MOVE MESSAGE
ERR2020  DS    0H
         BAL   R9,PRT0000          PRINT MESSAGE
         OI    COMMFLAG,$COMMAB    SET ABORT FLAG
         B     PROC0000            READ NEXT CONTROL STATEMENT
ERR3000  DS    0H
         STH   R15,DWORD           SAVE RETURN CODE
         LA    R1,ALORB            REQUEST BLOCK
         UNPK  PR99ERR(5),S99ERROR(3)
         UNPK  PR99INFO(5),S99INFO(3)
         UNPK  PR99R15(5),DWORD(3)
         MVZ   PR99ERR,HEX0F0F     TURN OFF ZONES
         MVZ   PR99INFO,HEX0F0F    TURN OFF ZONES
         MVZ   PR99R15,HEX0F0F     TURN OFF ZONES
         TR    PR99ERR,HEXCHAR     TRANSLATE ERROR CODE
         TR    PR99INFO,HEXCHAR    TRANSLATE INFO CODE
         TR    PR99R15,HEXCHAR     TRANSLATE RETURN CODE
         MVI   PR99ERR+4,C' '      RESTORE BLANK
         MVI   PR99INFO+4,C' '     RESTORE BLANK
         MVI   PR99R15+4,C' '      RESTORE BLANK
         MVC   PLINE(PR99LINEL),PR99LINE
         BAL   R9,PRT0000          PRINT ERROR MESSAGE
         B     PROC0000            READ NEXT CONTROL STATEMENT
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*        PRINTING/HEADINGS                                            *
*                                                                     *
*---------------------------------------------------------------------*
PRT0000  DS    0H
         LA    R2,PRINTER          PRINT DCB
         PUT   (R2),PLINE          WRITE TO PRINTER
         AP    COMMLINE,P1         ADD 1 TO LINE COUNT
         CLI   PLINE,C' '          SINGLE SPACED??
         BE    PRT0010             YES
         AP    COMMLINE,P1         ADD 1 TO LINE COUNT
PRT0010  DS    0H
         MVC   PLINE,PLINE-1       CLEAR PRINT I/O AREA
         CP    COMMLINE,COMMAXL    TIME FOR HEADING??
         BLR   R9                  NO
HEAD0000 DS    0H
         AP    COMMPAGE,P1         ADD 1 TO PAGE COUNT
         MVC   HEADPAGE,=X'402020202120'
         ED    HEADPAGE,COMMPAGE   EDIT PAGE NUMBER
         MVC   PLINE(HEADINGL),HEADING
         PUT   PRINTER,PLINE       WRITE HEADING
         MVC   PLINE,PLINE-1       CLEAR PRINT I/O AREA
         ZAP   COMMLINE,P0         RESET LINE COUNT
         BR    R9                  DONE
*--------------------------------------------------------------------*
*                                                                    *
*                  END OF JOB PROCESSING                             *
*                                                                    *
*--------------------------------------------------------------------*
EOF0000  DS    0H
         LA    R2,SYSIN            CONTROL STATEMENT DCB
         CLOSE ((R2))              CLOSE CONTROL STATEMENT DCB
         TM    COMMFLAG,$COMMAB    ABORT FLAG ON??
         BNO   EXIT0000            NO
         MVC   PLINE(MSG99L),MSG99 MOVE MESSAGE
         BAL   R9,PRT0000          PRINT MESSAGE
         L     R13,4(R13)          RESTORE SAVE AREA ADDRESS
         LM    R14,R12,12(R13)     RESTORE REMAINING REGISTERS
         LA    R15,16              SET RETURN CODE
         BR    R14                 EXIT
EXIT0000 DS    0H
         TM    COMMFLAG,$COMMHL    HELP REQUESTED??
         BO    EXIT0010            YES
         L     R15,VPH01           ADDRESS OF NEXT PHASE
         BR    R15                 LINK TO PHASE 01
EXIT0010 DS    0H
         L     R15,VPH02           ADDRESS OF HELP MODULE
         BR    R15                 LINK TO HELP MODULE
         LTORG
*--------------------------------------------------------------------*
*                                                                    *
*                  WORK AREAS                                        *
*                                                                    *
*--------------------------------------------------------------------*
DWORD    DC    D'0'                DOUBLE WORD WORK AREA
VCOMM    DC    V(PDSCOMM)          ADDRESS OF COMMON MODULE
VPH01    DC    V(PDSPH01)          ADDRESS OF SCAN MODULE
VPH02    DC    V(PDSPH02)          ADDRESS OF 'HELP' MODULE
CURRSCAN DC    A(0)                ADDRESS OF CURRENT 'SCANBLOK'
PGMFLAGS DC    X'00'               PROGRAM FLAGS
$VALIDSC EQU   X'80'               .. LAST SCAN PASSED EDIT CHECKS
P0       DC    P'0'                CONSTANT
P1       DC    P'1'                CONSTANT
P10      DC    P'10'               CONSTANT
DDCNT    DC    PL3'0'              NUMBER OF DYNAMICALLY ALLOCATED DD'S
DDWORK   DC    CL8' '              DDNAME WORK AREA
NUMWORK  DC    C'00000'            NUMERIC CONVERSION WORK AREA
DAIRWORK DS    0A
DAIRDDP  DS    AL2,AL2,AL2
DAIRDD   DS    CL8
DAIRCLP  DS    AL2,AL2,AL2
         DS    C
DAIRWORKL EQU  *-DAIRWORK
DAIRINIT DC    AL2(DALDDNAM),AL2(1),AL2(8)
         DC    CL8' '
         DC    AL2(DALSYSOU),AL2(1),AL2(1)
PRTCLASS DC    C'X'
ALORBA   DC    A(ALORB+X'80000000')
ALORB    DC    (S99RBEND-S99RB)X'00'
ALOPARM  DS    0A
         DC    A(DAIRDDP)
         DC    A(DAIRCLP+X'80000000')
TEMPL    DC    H'0'
TEMPARG  DC    CL70' '
TEMPVAL  DC    CL70' '
NAMEWORK DC    (8*NAMEL)X'00'
BLANKS   DC    CL8' '
DSNLINE  DS    0C
         DC    C' PDS NAME:'
PRDSN    DC    CL44' '
DSNLINEL EQU   *-DSNLINE
DCBLINE  DS    0C
         DC    C' RECORD FORMAT:'
PRRECFM  DC    CL4' '
         DC    C'   RECORD LENGTH'
PRLRECL  DC    CL6' '
         DC    C'   BLOCK SIZE'
PRBLKSZ  DC    CL6' '
DCBLINEL EQU   *-DCBLINE
HEADING  DS    0C
         DC    C'1'
         DC    CL32' '
         DC    C'PDS SCAN UTILITY'
         DC    CL22' '
         DC    C'PAGE'
HEADPAGE DC    CL6' '
HEADINGL EQU   *-HEADING
MSG0     DC    C' ENTER ''HELP'' ON A CONTROL STATEMENT FOR INSTRUCTION+
               S ON HOW TO USE ''PDSSCAN''.'
MSG0L    EQU   *-MSG0
MSG1     DC    C' INVALID CONTROL STATEMENT'
MSG1L    EQU   *-MSG1
MSG2     DC    C' INVALID DIGIT ON ''LINECT'' STATEMENT'
MSG2L    EQU   *-MSG2
MSG3     DC    C' LINECT<10 INVALID AND IGNORED'
MSG3L    EQU   *-MSG3
MSG4     DC    C' INVALID HEX DIGIT, SCAN NOT PERFORMED FOR THIS CONTRO+
               L STATEMENT'
MSG4L    EQU   *-MSG4
MSG5     DC    C' NO CLOSING QUOTE, SCAN NOT PERFORMED FOR THIS CONTROL+
                STATEMENT'
MSG5L    EQU   *-MSG5
MSG6     DC    C' ODD NUMBER OF HEX DIGITS, SCAN NOT PERFORMED FOR THIS+
                CONTROL STATEMENT'
MSG6L    EQU   *-MSG6
MSG7     DC    C' ZERO LENGTH ARGUEMENT NOT ALLOWED, SCAN NOT PERFORMED+
                FOR THIS CONTROL STATEMENT'
MSG7L    EQU   *-MSG7
MSG8     DC    C' INVALID SYNTAX, SCAN NOT PERFORMED FOR CONTROL STATEM+
               ENT'
MSG8L    EQU   *-MSG8
MSG9     DC    C' INVALID SYSOUT CLASS, CLASS REMAINS UNCHANGED'
MSG9L    EQU   *-MSG9
MSG10    DC    C' ** HELP REQUESTED, NO SCAN WILL BE PERFORMED'
MSG10L   EQU   *-MSG10
MSG11    DC    C' XLOC INITIALIZATION FAILURE, SEARCH STRING LENGTH <  +
               1'
MSG11L   EQU   *-MSG11
MSG12    DC    C' XLOC INITIALIZATION FAILURE, SEARCH STRING LENGTH >  +
               256'
MSG12L   EQU   *-MSG12
MSG13    DC    C' NO VALID SCAN DEFINED BEFORE ZONE STATEMENT'
MSG13L   EQU   *-MSG13
MSG14    DC    C' INVALID DIGIT IN ZONE VALUE'
MSG14L   EQU   *-MSG14
MSG15    DC    C' TOO MANY DIGITS IN ZONE VALUE'
MSG15L   EQU   *-MSG15
MSG16    DC    C' ZERO IS INVALID AS ZONE BEGIN VALUE'
MSG16L   EQU   *-MSG16
MSG17    DC    C' ZONE BEGIN VALUE LARGER THAN PDS LRECL'
MSG17L   EQU   *-MSG17
MSG18    DC    C' ZERO IS INVALID AS ZONE END VALUE'
MSG18L   EQU   *-MSG18
MSG19    DC    C' ZONE END VALUE LARGER THAN PDS LRECL'
MSG19L   EQU   *-MSG19
MSG20    DC    C' ZONE BEGIN VALUE LARGER THAN ZONE END VALUE'
MSG20L   EQU   *-MSG20
MSG21    DC    C' PREVIOUS SCAN STATEMENT CONTAINED ERRORS, ZONE IGNORE+
               D'
MSG21L   EQU   *-MSG21
MSG22    DC    C' ZONE WIDTH IS LESS THAN SCAN STRING LENGTH'
MSG22L   EQU   *-MSG22
MSG23    DC    C' NAME OMITTED ON A NAME STATEMENT'
MSG23L   EQU   *-MSG23
MSG24    DC    C' AT LEAST 1 BLANK IS REQUIRED FOR A DELIMITER FOLLOWIN+
               G AN ASTERISK IN THE NAME'
MSG24L   EQU   *-MSG24
MSG25    DC    C' ASTERISK NOT ALLOWED AS FIRST NAME CHARACTER (WOULD C+
               AUSE ALL MEMBERS TO BE SCANNED)'
MSG25L   EQU   *-MSG25
MSG26    DC    C' PLUS SIGN PRECEEDING AN ASTERISK (+*) IS UNNECESSARY.+
               '
MSG26L   EQU   *-MSG26
MSG27    DC    C' NAME=++++++++ IS NOT ALLOWED (SAME AS NAME=*), WOULD +
               CAUSE ALL MEMBERS TO BE SCANNED'
MSG27L   EQU   *-MSG27
MSG99    DC    C'0 ** SEVERE ERROR OCCURRED, PROGRAM ABORTING **'
MSG99L   EQU   *-MSG99
PR99LINE DS    0C
         DC    C'0'
         DC    C'DYNAMIC ALLOCATION FAILURE, R15='
PR99R15  DC    CL4' '
         DC    C'   S99ERROR='
PR99ERR  DC    CL4' '
         DC    C'   S99INFO='
PR99INFO DC    CL4' '
         DC    C' '
PR99LINEL EQU  *-PR99LINE
GMLINE   DS    0C
         DC    C'0'
         DC    C'GETMAIN FAILURE, R15='
PRGMR15  DC    CL4' '
         DC    C' '
GMLINEL  EQU   *-GMLINE
HEX0F0F  DC    8X'0F'
HEX1F1F  DC    70X'1F'
HEXCHAR  DC    C'0123456789ABCDEF'
*                 0 1 2 3 4 5 6 7 8 9 A B C D E F
PACKTBL  DC    X'000A0B0C0D0E0F000000000000000000'
         DC    X'00010203040506070809000000000000'
         DC    C' '
PLINE    DC    CL133' '
CTLAREA  DC    CL80' '
CTLAREAL EQU   *-CTLAREA
INITPARM XLOC  MF=L
INITPARML EQU  *-INITPARM
INITDCB  DCB   DSORG=PS,                                               +
               MACRF=PM,                                               +
               LRECL=133,                                              +
               RECFM=FBA,                                              +
               DDNAME=PRT0000
*--------------------------------------------------------------------*
*                  COMMON AREA                                       *
*--------------------------------------------------------------------*
         PDSBLOK BLOCK=COMM,TYPE=DSECT
*--------------------------------------------------------------------*
*                  SCAN BLOCK                                        *
*--------------------------------------------------------------------*
         PDSBLOK BLOCK=SCAN,TYPE=DSECT
*--------------------------------------------------------------------*
*                  NAME BLOCK                                        *
*--------------------------------------------------------------------*
         PDSBLOK BLOCK=NAME,TYPE=DSECT
*--------------------------------------------------------------------*
*                  XLOC PARM LIST                                    *
*--------------------------------------------------------------------*
         XLOC    TYPE=DSECT
*--------------------------------------------------------------------*
*                  DCB DSECT                                         *
*--------------------------------------------------------------------*
         DCBD      DSORG=PO
*---------------------------------------------------------------------*
*                  REGISTER EQUATES                                   *
*---------------------------------------------------------------------*
         COPY  REGEQU
         IEFZB4D0
         IEFZB4D2
         END   PDSPH00
./ ADD NAME=PDSPH01  0100-02291-02291-0123-00446-00446-00000-RLRICE
*---------------------------------------------------------------------*
*     NAME: PDSPH01                                                   *
*                                                                     *
* FUNCTION: THIS MODULE RECEIVES CONTROL FROM THE INITIALIZATION      *
*           PHASE PDSPH00.  THE FILES IN THE COMMON MODULE 'PDSCOMM'  *
*           HAVE ALREADY BEEN OPENED, THE CONTROL STATEMENTS          *
*           PROCESSED, AND THE SCAN BLOCKS BUILT.                     *
*                                                                     *
*           THE FIRST STEP IS TO OPEN THE PRINTER DCB'S IN EACH       *
*           SCAN BLOCK.  THE DD'S WERE DYNAMICALLY ALLOCATED BY       *
*           PDSPH00.                                                  *
*                                                                     *
*           WHEN ALL SCAN PRINT DCB'S ARE OPEN, THE ACTUAL MEMBER-BY- *
*           MEMBER SCAN IS PERFORMED.                                 *
*                                                                     *
*           AT EOF IN THE DIRECTORY, CONTROL IS PASSED TO THE         *
*           CLEAN-UP/TERMINATION MODULE PDSPH03.                      *
*                                                                     *
*---------------------------------------------------------------------*
PDSPH01  CSECT
         USING PDSPH01,R12                                              ASE00100
         LR    R12,R15               LOAD PERMANENT                     ASE00120
         USING IHADCB,R2             DEFINE DCB DSECT BASE
         USING PDSCOMM,R10           DEFINE COMM BASE
         USING SCANBLOK,R11          DEFINE SCAN BLOCK BASE
         B     INIT0000
         DC    C'PDS SCAN PHASE 01'
INIT0000 DS    0H
         ICM   R11,15,COMMANCH       FIRST SCAN BLOCK ON THE CHAIN
         BZ    ERR1000               NO BLOCKS ON CHAIN
INIT0010 DS    0H
         LA    R2,SCANDCB            PRINT DCB WITHIN SCAN BLOCK
         OPEN  ((R2),OUTPUT)         OPEN PRINT DCB
         BAL   R9,SHEAD000           WRITE HEADING
         ICM   R11,15,SCANNEXT       NEXT SCAN BLOCK ON CHAIN
         BNZ   INIT0010              PROCESS ALL SCAN BLOCKS
         LA    R2,PDSMEM             MEMBER DCB
         LA    R1,PROC0180           MEMBER EOF
         STCM  R1,7,DCBEODA          INSERT ADDRESS INTO DCB
         LA    R2,PDSDIR             DIRECTORY DCB
         LA    R1,EXIT0000           DIRECTORY END OF FILE
         STCM  R1,7,DCBEODA          INSERT ADDRESS INTO DCB
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*        ALL SCAN BLOCKS HAVE BEEN BUILT, ALL PRINT DCB'S ARE OPEN.   *
*        IT IS TIME TO BEGIN THE ACTUAL MEMBER-BY-MEMBER SCAN.        *
*                                                                     *
*---------------------------------------------------------------------*
PROC0000 DS    0H
         LA    R2,PDSDIR             DIRECTORY DCB
         GET   (R2),DIRAREA          READ A BLOCK OF DIRECTORY
         LH    R3,DIRAREA            BYTES OF DATA IN RECORD
         SH    R3,H2                 MINUS 2 FOR LENGTH
         LA    R4,DIRAREA+2          FIRST DIRECTORY ENTRY IN BLOCK
         USING DIRDSECT,R4           DEFINE BASE
PROC0010 DS    0H
         CLI   0(R4),X'FF'           END OF DIRECTORY??
         BE    EXIT0000              YES
         ICM   R5,15,COMMNAME        FIRST NAME FILTER BLOCK
         BZ    PROC0050              NOTHING ON THE CHAIN..
         USING NAMEBLOK,R5           DEFINE BASE
PROC0020 DS    0H
         LA    R6,NAMEDISP           FIRST DATA ELEMENT
         USING NAMEDISP,R6           DEFINE BASE
PROC0030 DS    0H
         OC    0(NAMEL,R6),0(R6)     UNUSED ELEMENT?
         BZ    PROC0050              YES.. ALL ELEMENTS MATCH
         LH    R1,NAMELEN            LENGTH OF THIS NAME ELEMENT
         LH    R2,NAMEDISP           DISPLACMENT INTO NAME
         AR    R2,R4                 PLUS NAME'S BASE ADDRESS
         BCTR  R1,0                  ADJUST FOR EXECUTE
         EX    R1,NAMECLC            DOES ELEMENT MATCH?
         BNE   PROC0040              NO.. TRY NEXT NAME FILTER
         LA    R6,NAMEL(R6)          NEXT NAME ELEMENT
         B     PROC0030              TEST THIS ELEMENT
NAMECLC  CLC   NAMEDATA(0),0(R2)     ELEMENTS MATCH?
PROC0040 DS    0H
         ICM   R5,15,NAMENEXT        NEXT ELEMENT ON CHAIN
         BNZ   PROC0020              CHECK THIS FILTER ENTRY
         B     PROC0180              NO FILTER MATCHED.. SKIP MEMBER
PROC0050 DS    0H
         MVC   COMMMEM,0(R4)         MOVE MEMBER NAME
         MVC   TTRZ(3),DIRTTR        MOVE TO FULLWORD BOUNDARY
         MVI   TTRZ+3,X'00'          SET 'Z' TO ZERO
         LA    R2,PDSMEM             MEMBER DCB
         POINT (R2),TTRZ,TYPE=REL    ISSUE POINT
         LTR   R15,R15               LOCATED SUCCESSFULLY??
         BNZ   ERR2000               NO
         XC    COMMRECN,COMMRECN     ZERO LOCICAL RECORD NUMBER
PROC0060 DS    0H
         LA    R2,PDSMEM             MEMBER DCB
         CLI   COMMRF,C'U'           RECFORM 'U' RECORDS??
         BE    PROC0070              YES
         XC    READECB1,READECB1     CLEAR READ ECB
         READ  READECB1,             READ BLOCK OF MEMBER              +
               SF,                   .. SEQUENTIALLY FORWARD           +
               (R2),                 .. DCB                            +
               MEMAREA,              .. I/O AREA                       +
               ,                     .. BLOCK SIZE FROM DCB
         CHECK READECB1              WAIT FOR I/O COMPLETION
         B     PROC0080
PROC0070 DS    0H
         XC    READECB2,READECB2     CLEAR READ ECB
         READ  READECB2,             READ BLOCK OF MEMBER              +
               SF,                   .. SEQUENTIALLY FORWARD           +
               (R2),                 .. DCB                            +
               MEMAREA,              .. I/O AREA                       +
               32000                 .. SPECIFY RECORD LENGTH
         CHECK READECB2              WAIT FOR I/O COMPLETION
PROC0080 DS    0H
         LA    R2,PDSMEM             MEMBER DCB
         LH    R5,DCBBLKSI           BLOCK SIZE FROM DCB
         L     R1,DCBIOBA            IOB ADDRESS
         SH    R1,H8                 DCB POINTS AT IOB+8
         USING IOB,R1                DEFINE BASE
         SH    R5,IOBSTDRD+14        LENGTH ACTUALLY READ
         CLI   COMMRF,C'V'           VARIABLE LENGTH RECORDS??
         BNE   PROC0100              NO
         SH    R5,H4                 MINUS LENGTH OF BLOCK DESCRIPTOR
         LA    R6,MEMAREA+4          FIRST RECORD IN BLOCK
PROC0090 DS    0H
         SR    R7,R7                 CLEAR FOR LENGTH
         ICM   R7,3,0(R6)            LENGTH OF CURRENT RECORD
         B     PROC0110
PROC0100 DS    0H
         LA    R6,MEMAREA            FIRST RECORD IN BLOCK
         SR    R7,R7                 CLEAR FOR LENGTH
         ICM   R7,3,COMMRSZ          RECORD LENGTH
PROC0110 DS    0H
         L     R1,COMMRECN           CURRENT LOGICAL RECORD NUMBER
         LA    R1,1(R1)              ADD 1
         ST    R1,COMMRECN           SAVE RECORD NUMBER
         L     R11,COMMANCH          FIRST SCAN BLOCK ON CHAIN
PROC0120 DS    0H
         LR    R15,R7                COPY RECORD LENGTH
         SR    R1,R1                 CLEAR FOR START POSITION
         TM    SCANFLAG,$SCANBGN     BEGIN POSITION GIVEN??
         BNO   PROC0130              NO
         CH    R15,SCANBGN           START POSITION > RECORD LENGTH??
         BL    PROC0160              YES... CANNOT BE ON THIS RECORD
         LH    R1,SCANBGN            SCAN START POSITION
         BCTR  R1,0                  RELATIVE TO ZERO
PROC0130 DS    0H
         TM    SCANFLAG,$SCANEND     END POSITION GIVEN??
         BNO   PROC0140              NO
         CH    R15,SCANEND           END POSITION < LRECL??
         BL    PROC0140              NO
         LH    R15,SCANEND           LIMIT TO ZONE END
PROC0140 DS    0H
         SR    R15,R1                EFFECTIVE SCAN LENGTH
         LH    R2,SCANL              SCAN STRING LENGTH
         CR    R15,R2                SCAN LENGTH < STRING LENGTH??
         BL    PROC0160              YES... CANNOT BE ON THIS RECORD
         LA    R14,0(R1,R6)          SCAN STARTING ADDRESS
         XLOC  RECORD=(R14),         DATA TO SCAN                      +
               RECLEN=(R15),         .. LENGTH TO SCAN                 +
               STRING=SCANARG,       .. SEARCH STRING                  +
               STRLEN=(R2),          .. STRING LENGTH                  +
               ERROR=PROC0160,       .. STRING NOT FOUND               +
               MF=(E,SCANPARM)       .. EXECUTION FORM
         MVC   PRMEM,COMMMEM         MOVE MEMBER NAME
         L     R1,COMMRECN           CURRENT RECORD NUMBER
         CVD   R1,DWORD              CONVERT TO DECIMAL
         MVC   PRRECN,=X'4020202020202120'
         ED    PRRECN,DWORD+4        EDIT RELATIVE RECORD NUMBER
         LR    R1,R7                 COPY RECORD LENGTH
         CH    R1,H100               TOO MUCH DATA??
         BNH   PROC0150              NO
         LH    R1,H100               LIMIT TO 100 BYTES
PROC0150 DS    0H
         BCTR  R1,0                  ADJUST FOR EXECUTE
         EX    R1,DATAMVC            MOVE PORTION OF RECORD
         EX    R1,DATATR             TRANSLATE OUT UNPRINTABLES
         MVC   PLINE(MEMLINEL),MEMLINE
         BAL   R9,SPRT0000           PRINT
PROC0160 DS    0H
         ICM   R11,15,SCANNEXT       NEXT SCAN BLOCK ON CHAIN
         BNZ   PROC0120              PROCESS ALL BLOCKS
         CLI   COMMRF,C'U'           UNDEFINED RECORD FORMAT??
         BE    PROC0060              YES... NO 'LOGICAL RECORDS'
         AR    R6,R7                 NEXT RECORD IN BLOCK
         SR    R5,R7                 LENGTH LEFT IN BLOCK
         BZ    PROC0060              READ ANOTHER BLOCK
         BM    ERR3000               SHOULD NEVER HAPPEN
         CLI   COMMRF,C'V'           VARIABLE LENGTH RECORDS??
         BE    PROC0170              YES
         ICM   R7,3,COMMRSZ          RECORD SIZE
         B     PROC0110              SCAN THIS RECORD
PROC0170 DS    0H
         ICM   R7,3,0(R6)            RECORD SIZE
         B     PROC0110              SCAN THIS RECORD
PROC0180 DS    0H
         NI    DIRC,X'1F'            TURN OFF ALL BUT LENGTH BITS
         SR    R1,R1                 CLEAR REGISTER
         IC    R1,DIRC               HALFWORDS OF USER DATA
         AR    R1,R1                 BYTES OF USER DATA
         LA    R1,DIRUSER-DIRDSECT(R1)  TOTAL LENGTH
         SR    R3,R1                 DIRECTORY DATA REMAINING
         BZ    PROC0000              READ NEXT DIRECTORY BLOCK
         AR    R4,R1                 NEXT MEMBER
         B     PROC0010              PROCESS NEXT MEMBER
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*        MAINLINE PRINTING/HEADINGS                                   *
*                                                                     *
*---------------------------------------------------------------------*
PRT0000  DS    0H
         LA    R2,PRINTER          PRINT DCB
         PUT   (R2),PLINE          WRITE TO PRINTER
         AP    COMMLINE,P1         ADD 1 TO LINE COUNT
         CLI   PLINE,C' '          SINGLE SPACED??
         BE    PRT0010             YES
         AP    COMMLINE,P1         ADD 1 TO LINE COUNT
PRT0010  DS    0H
         MVC   PLINE,PLINE-1       CLEAR PRINT I/O AREA
         CP    COMMLINE,COMMAXL    TIME FOR HEADING??
         BLR   R9                  NO
HEAD0000 DS    0H
         AP    COMMPAGE,P1         ADD 1 TO PAGE COUNT
         MVC   HEADPAGE,=X'402020202120'
         ED    HEADPAGE,COMMPAGE   EDIT PAGE NUMBER
         MVC   PLINE(HEADINGL),HEADING
         PUT   PRINTER,PLINE       WRITE HEADING
         MVC   PLINE,PLINE-1       CLEAR PRINT I/O AREA
         ZAP   COMMLINE,P0         RESET LINE COUNT
         BR    R9                  ALL DONE
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*        SCAN PRINTING/HEADINGS                                       *
*                                                                     *
*---------------------------------------------------------------------*
SPRT0000 DS    0H
         LA    R2,SCANDCB          DCB WITHIN CURRENT SCAN BLOCK
         PUT   (R2),PLINE          WRITE TO CURRENT SCAN PRINT
         MVC   PLINE,PLINE-1       CLEAR PRINT LINE
         AP    SCANLC,P1           ADD 1 TO LINE COUNT
         CP    SCANLC,COMMAXL      TIME FOR HEADING??
         BLR   R9                  NO
SHEAD000 DS    0H
         AP    SCANPC,P1           ADD 1 TO PAGE COUNT
         MVC   HEADPAGE,=X'402020202021'
         ED    HEADPAGE,SCANPC     EDIT PAGE COUNT
         MVC   PLINE(HEADINGL),HEADING
         PUT   (R2),PLINE          WRITE HEADING
         MVC   PLINE,PLINE-1       CLEAR PRINT LINE
         MVC   HEADDSN,JFCBDSNM    MOVE DATASET NAME
         MVC   PLINE(SUBHEAD1L),SUBHEAD1
         PUT   (R2),PLINE          WRITE SUB HEADING 1
         MVC   PLINE,PLINE-1       CLEAR PRINT LINE
         MVC   HEADRF,COMMRF       MOVE RECORD FORMAT
         SR    R1,R1               CLEAR REGISTER
         ICM   R1,3,COMMRSZ        RECORD SIZE
         CVD   R1,DWORD            CONVERT TO DECIMAL
         MVC   HEADRSZ,=X'402020202120'
         ED    HEADRSZ,DWORD+5     EDIT RECORD SIZE
         ICM   R1,3,COMMBSZ        BLOCK SIZE
         CVD   R1,DWORD            CONVERT TO DECIMAL
         MVC   HEADBSZ,=X'402020202120'
         ED    HEADBSZ,DWORD+5     EDIT BLOCK SIZE
         MVC   PLINE(SUBHEAD2L),SUBHEAD2
         PUT   (R2),PLINE          WRITE HEADING
         MVC   PLINE,PLINE-1       CLEAR PRINT LINE
         MVC   PRVAL,SCANVAL       MOVE SCAN VALUE TO HEADING
         MVC   PLINE(SUBHEAD3L),SUBHEAD3
         PUT   (R2),PLINE          WRITE HEADING
         MVC   PLINE,PLINE-1       CLEAR PRINT LINE
         MVC   PLINE,PLINE-1       CLEAR PRINT LINE
         MVC   PLINE(SUBHEAD4L),SUBHEAD4
         PUT   (R2),PLINE          WRITE HEADING
         MVC   PLINE,PLINE-1       CLEAR PRINT LINE
         ZAP   SCANLC,P7           SET LINE COUNT
         BR    R9                  DONE FINALLY!!
*--------------------------------------------------------------------*
*                                                                    *
*                  ERROR PROCESSING                                  *
*                                                                    *
*--------------------------------------------------------------------*
ERR1000  DS    0H
         MVC   PLINE(MSG1L),MSG1   MOVE MESSAGE
         BAL   R9,PRT0000          PRINT MESSAGE
         B     EXIT0000            LINK TO CLEAN-UP MODULE
ERR2000  DS    0H
         STH   R15,DWORD           SAVE RETURN CODE
         UNPK  PRPT15(5),DWORD(3)  UNPACK POINT RETURN CODE
         MVZ   PRPT15,HEX0F0F      TURN OFF ZONES
         TR    PRPT15,HEXCHAR      TRANSLATE RETURN CODE
         MVI   PRPT15+4,C' '       RESTORE BLANK
         MVC   PLINE(PTLINEL),PTLINE
         BAL   R9,PRT0000          PRINT ERROR MESSAGE
         B     EXIT0000            EXIT
ERR3000  DS    0H
         MVC   PLINE(MSG2L),MSG2   MOVE MESSAGE
         BAL   R9,PRT0000          PRINT MESSAGE
         DC    H'0'                DIAGNOSTIC DUMP TIME
         SPACE 2
*--------------------------------------------------------------------*
*                                                                    *
*                  LINK TO CLEAN-UP                                  *
*                                                                    *
*--------------------------------------------------------------------*
EXIT0000 DS    0H
         L     R15,VPH03           CLEAN-UP/TERMINATION MODULE
         BR    R15                 LINK TO CLEAN-UP MODULE
         SPACE 2
DATAMVC  MVC   PRDATA(0),0(R6)     MOVE PORTION OF RECORD
DATATR   TR    PRDATA(0),PRTABLE   TRANSLATE OUT UNPRINTABLES
         LTORG
*--------------------------------------------------------------------*
*                                                                    *
*                  WORK AREAS                                        *
*                                                                    *
*--------------------------------------------------------------------*
DWORD    DC    D'0'
VPH03    DC    V(PDSPH03)
TTRZ     DC    F'0'
H2       DC    H'2'
H4       DC    H'4'
H8       DC    H'8'
H100     DC    H'100'
P0       DC    P'0'
P1       DC    P'1'
P7       DC    P'7'
MSG2     DC    C'0 LENGTH REMAINING IN BLOCK WENT NEGATIVE, INTERNAL ER+
               ROR'
MSG2L    EQU   *-MSG2
MSG1     DC    C'0 ** NO SCAN VALUES REQUESTED, SCAN BYPASSED **'
MSG1L    EQU   *-MSG1
HEADING  DS    0C
         DC    C'1'
         DC    CL32' '
         DC    C'PDS SCAN UTILITY'
         DC    CL22' '
         DC    C'PAGE'
HEADPAGE DC    CL6' '
HEADINGL EQU   *-HEADING
SUBHEAD1 DS    0C
         DC    C'0'
         DC    CL10' '
         DC    C'DATASET NAME:'
HEADDSN  DC    CL44' '
SUBHEAD1L EQU  *-SUBHEAD1
SUBHEAD2 DS    0C
         DC    C' '
         DC    CL10' '
         DC    C'RECORD FORMAT:'
HEADRF   DC    CL4' '
         DC    C'   RECORD SIZE:'
HEADRSZ  DC    CL6' '
         DC    C'   BLOCK SIZE:'
HEADBSZ  DC    CL6' '
SUBHEAD2L EQU  *-SUBHEAD2
SUBHEAD3 DS    0C
         DC    C' '
         DC    CL10' '
         DC    C'SCAN VALUE:'
PRVAL    DC    CL70' '
SUBHEAD3L EQU  *-SUBHEAD3
SUBHEAD4 DS    0C
         DC    C'0'
         DC    CL8'MEMBER'
         DC    CL2' '
         DC    CL8'RECORD #'
         DC    CL2' '
         DC    C'*'
         DC    43C'-'
         DC    C' RECORD DATA '
         DC    42C'-'
         DC    C'*'
SUBHEAD4L EQU  *-SUBHEAD4
MEMLINE  DS    0C
         DC    C' '
PRMEM    DC    CL8' '
         DC    CL2' '
PRRECN   DC    CL8' '
         DC    CL2' '
PRDATA   DC    CL100' '
MEMLINEL EQU   *-MEMLINE
PTLINE   DS    0C
         DC    C'0'
         DC    C'POINT MACRO FAILURE, R15='
PRPT15   DC    CL4' '
         DC    C' '
PTLINEL  EQU   *-PTLINE
HEX0F0F  DC    8X'0F'
HEXCHAR  DC    C'0123456789ABCDEF'
*                   0 1 2 3 4 5 6 7 8 9 A B C D E F                     VUT16120
PRTABLE  DC    XL16'40404040404040404040404040404040'     X'00' - X'0F' VUT16130
         DC    XL16'40404040404040404040404040404040'     X'10' - X'1F' VUT16140
         DC    XL16'40404040404040404040404040404040'     X'20' - X'2F' VUT16150
         DC    XL16'40404040404040404040404040404040'     X'30' - X'3F' VUT16160
         DC    XL16'404040404040404040404A4B4C4D4E4F'     X'40' - X'4F' VUT16170
         DC    XL16'504040404040404040405A5B5C5D5E5F'     X'50' - X'5F' VUT16180
         DC    XL16'60614040404040404040406B6C6D6E6F'     X'60' - X'6F' VUT16190
         DC    XL16'404040404040404040407A7B7C7D7E7F'     X'70' - X'7F' VUT16200
         DC    XL16'40404040404040404040408B8C8D8E8F'     X'80' - X'8F' VUT16210
         DC    XL16'40404040404040404040409B9C9D9E9F'     X'90' - X'9F' VUT16220
         DC    XL16'4040404040404040404040ABACADAEAF'     X'A0' - X'AF' VUT16230
         DC    XL16'4040404040404040404040BBBCBDBEBF'     X'B0' - X'BF' VUT16240
         DC    XL16'40C1C2C3C4C5C6C7C8C9404040404040'     X'C0' - X'CF' VUT16250
         DC    XL16'40D1D2D3D4D5D6D7D8D9404040404040'     X'D0' - X'DF' VUT16260
         DC    XL16'4040E2E3E4E5E6E7E8E9404040404040'     X'E0' - X'EF' VUT16270
         DC    XL16'F0F1F2F3F4F5F6F7F8F9404040404040'     X'F0' - X'FF' VUT16280
         DC    C' '
PLINE    DC    CL133' '
DIRAREA  DS    128H
MEMAREA  DS    CL32000
*--------------------------------------------------------------------*
*                  COMMON AREA                                       *
*--------------------------------------------------------------------*
         PDSBLOK BLOCK=COMM,TYPE=DSECT
*--------------------------------------------------------------------*
*                  SCAN BLOCK                                        *
*--------------------------------------------------------------------*
         PDSBLOK BLOCK=SCAN,TYPE=DSECT
*--------------------------------------------------------------------*
*                  NAME FILTER BLOCK                                 *
*--------------------------------------------------------------------*
         PDSBLOK BLOCK=NAME,TYPE=DSECT
*--------------------------------------------------------------------*
*                  XLOC PARAMETER LIST DSECT                         *
*--------------------------------------------------------------------*
         XLOC   TYPE=DSECT
*--------------------------------------------------------------------*
*                  DCB DSECT                                         *
*--------------------------------------------------------------------*
         DCBD   DSORG=PO
*--------------------------------------------------------------------*
*                  DIRECTORY DSECT                                   *
*--------------------------------------------------------------------*
DIRDSECT DSECT
DIRNAME  DS    CL8
DIRTTR   DS    CL3
DIRC     DS    X
DIRUSER  DS    0C
*--------------------------------------------------------------------*
*                  IOB DSECT                                         *
*--------------------------------------------------------------------*
         IEZIOB
*---------------------------------------------------------------------*
*                  REGISTER EQUATES                                   *
*---------------------------------------------------------------------*
         COPY  REGEQU
         END   PDSPH01
./ ADD NAME=PDSPH02  0100-02291-02291-0123-00201-00201-00000-RLRICE
*---------------------------------------------------------------------*
*     NAME: PDSPH02                                                   *
*                                                                     *
* FUNCTION: THIS MODULE RECEIVES CONTROL FROM THE INITIALIZATION      *
*           PHASE PDSPH00 WHEN THE HELP FUNCSTION IS REQUESTED.       *
*           THE HELP REPORT IS PRINTED TO THE SYSPRINT DD.            *
*                                                                     *
*---------------------------------------------------------------------*
         MACRO
         HELP &A
         DC   AL2(E&SYSNDX-B&SYSNDX)
B&SYSNDX DS   0C
         DC   C&A
E&SYSNDX DS   0C
         MEND
PDSPH02  CSECT
         USING PDSPH02,R12                                              ASE00100
         LR    R12,R15             LOAD PERMANENT                       ASE00120
         USING PDSCOMM,R10         DEFINE COMM BASE
         B     INIT0000
         DC    C'PDS SCAN PHASE 02 (HELP MODULE)'
INIT0000 DS    0H
         BAL   R9,HEAD0000         FORCE NEW HEADING
         LA    R3,HELPTBL          HELP TABLE ADDRESS
INIT0010 DS    0H
         CLI   0(R3),X'FF'         END OF TABLE??
         BE    EXIT0000            YES
         SR    R4,R4               CLEAR FOR LENGTH
         ICM   R4,3,0(R3)          LENGTH OF LINE
         BCTR  R4,0                ADJUST FOR MVC
         EX    R4,HELPMVC          MOVE HELP DATA TO PRINT
         BAL   R9,PRT0000          PRINT HELP DATA
         LA    R3,3(R3,R4)         NEXT LINE OF HELP DATA
         B     INIT0010            PRINT ALL HELP DATA
         SPACE 2
*---------------------------------------------------------------------*
*                                                                     *
*        PRINTING/HEADINGS                                            *
*                                                                     *
*---------------------------------------------------------------------*
PRT0000  DS    0H
         LA    R2,PRINTER          PRINT DCB
         PUT   (R2),PLINE          WRITE TO PRINTER
         AP    COMMLINE,P1         ADD 1 TO LINE COUNT
         CLI   PLINE,C' '          SINGLE SPACED??
         BE    PRT0010             YES
         AP    COMMLINE,P1         ADD 1 TO LINE COUNT
PRT0010  DS    0H
         MVC   PLINE,PLINE-1       CLEAR PRINT I/O AREA
         CP    COMMLINE,COMMAXL    TIME FOR HEADING??
         BLR   R9                  NO
HEAD0000 DS    0H
         AP    COMMPAGE,P1         ADD 1 TO PAGE COUNT
         MVC   HEADPAGE,=X'402020202120'
         ED    HEADPAGE,COMMPAGE   EDIT PAGE NUMBER
         MVC   PLINE(HEADINGL),HEADING
         PUT   PRINTER,PLINE       WRITE HEADING
         MVC   PLINE,PLINE-1       CLEAR PRINT I/O AREA
         ZAP   COMMLINE,P0         RESET LINE COUNT
         BR    R9                  ALL DONE
*--------------------------------------------------------------------*
*                                                                    *
*                  END OF JOB PROCESSING                             *
*                                                                    *
*--------------------------------------------------------------------*
EXIT0000 DS    0H
         L     R15,VPH03           END OF JOB MODULE ENTRY POINT
         BR    R15                 LINK TO EOJ/CLEAN-UP MODULE
HELPMVC  MVC   PLINE(0),2(R3)      MOVE HELP DATA TO PRINT LINE
         LTORG
*--------------------------------------------------------------------*
*                                                                    *
*                  WORK AREAS                                        *
*                                                                    *
*--------------------------------------------------------------------*
VPH03    DC    V(PDSPH03)
P0       DC    P'0'
P1       DC    P'1'
         DC    C' '
PLINE    DC    CL133' '
HEADING  DS    0C
         DC    C'1'
         DC    CL32' '
         DC    C'PDS SCAN UTILITY'
         DC    CL22' '
         DC    C'PAGE'
HEADPAGE DC    CL6' '
HEADINGL EQU   *-HEADING
HELPTBL  DS    0C
 HELP '0THE PDSSCAN UTILITY PROVIDES A MEANS TO SCAN A PDS MEMBER-BY-'
 HELP ' MEMBER FOR ONE OR MORE STRINGS OF DATA.  THE STRINGS MAY BE'
 HELP ' SPECIFIED IN EITHER CHARACTER OR HEX.  CHARACTER STRINGS MAY'
 HELP ' BE 1 TO 70 CHARACTERS IN LENGTH, HEX STRINGS MAY BE 1 TO 35'
 HELP ' BYTES IN LENGTH.  EACH SCAN ARGUEMENT WILL BE ASSIGNED A'
 HELP ' SEPARATE REPORT (DD''S ARE DYNAMICALLY ALLOCATED).'
 HELP '0THE PDS DATASET NAME AND DCB INFORMATION IS PRINTED IN THE'
 HELP ' HEADINGS, AND CONTROL STATEMENTS LISTED SO YOU MAY VERIFY'
 HELP ' OR REVIEW HOW A PARTICULAR SCAN WAS PERFORMED.'
 HELP '0WHEN A RECORD IS FOUND THAT CONTAINS A REQUESTED STRING, THE'
 HELP ' MEMBER NAME, LOGICAL RECORD NUMBER, AND UP TO 100 CHARACTERS'
 HELP ' OF THE RECORD ARE PRINTED.'
 HELP '0CONTROL STATEMENTS ARE:'
 HELP '0  COMMENTS: AN ASTERISK ''*'' IN COLUMN 1 DENOTES A COMMENT.'
 HELP '             AS MANY COMMENTS AS DESIRED MAY BE USED IN ANY'
 HELP '             ORDER.'
 HELP '0  LINE COUNT: (LINECT= IN COLUMNS 1-7) SPECIFIES A MAXIMUM'
 HELP '             LINE COUNT FOR ALL REPORTS.  THIS LINE COUNT IS'
 HELP '             GLOBAL IN THAT IT APPLIES TO ALL PRINT DD''S.'
 HELP '             DEFAULT LINE COUNT IS 72.'
 HELP '0  OUTPUT CLASS: (CLASS= IN COLUMNS 1-6) SPECIFIES A SYSOUT'
 HELP '             CLASS FOR DYNAMICALLY ALLOCATED SCAN REPORTS.'
 HELP '             ANY CLASS (A-Z AND 0-9) MAY BE ALLOCATED AND MAY'
 HELP '             BE CHANGED AS OFTEN AS DESIRED.  THE CLASS APPLIES'
 HELP '             TO SCAN STATEMENTS FOLLOWING THE ''CLASS'''
 HELP '             STATEMENT.  DEFAULT CLASS IS ''X''.'
 HELP '0  CHARACTER SCAN: (SCAN='' IN COLUMNS 1-6) SPECIFIES A'
 HELP '             CHARACTER STRING TO BE SCANNED FOR.  THE STRING'
 HELP '             MUST BE ENCLOSED IN APOSTROPHES.  IF THE STRING'
 HELP '             CONTAINS AN APOSTROPHE, CODE IT AS A DOUBLE'
 HELP '             APOSTROPHE JUST LIKE FOR THE ASSEMBLER.  THE'
 HELP '             STRING MAY BE 1 TO 70 CHARACTERS IN LENGTH.'
 HELP '0  HEX SCAN: (SCAN=X'' IN COLUMNS 1-7) SPECIFIES A HEX STRING'
 HELP '             TO BE SCANNED FOR.  THE STRING MUST BE ENCLOSED IN'
 HELP '             APOSTROPHES.  THE STRING MUST CONTAIN VALID HEX'
 HELP '             CHARACTERS (A-F, 0-9) AND MAY BE 1-35 BYTES OR'
 HELP '             2-70 HEX CHARACTERS (MUST BE AN EVEN NUMBER).'
 HELP '0  MEMBER NAME FILTERING: (NAME= IN COLUMNS 1-5) SPECIFIES A'
 HELP '             FILTER STATEMENT.  BY DEFAULT PDSSCAN SCANS ALL'
 HELP '             MEMBERS OF THE SOURCE PDS.  YOU MAY LIMIT WHICH'
 HELP '             MEMBERS ARE SCANNED BY SPECIFING NAME STATEMENTS.'
 HELP '             NAMES CAN BE SPECIFIC OR MAY CONTAIN "WILD CARD"'
 HELP '             CHARACTERS.  THE PLUS SIGN (+) MAY BE USED TO'
 HELP '             INDICATE THAT ANY VALUE IN ITS POSITION IS TO BE'
 HELP '             ACCEPTED.  THE PLUS SIGN MAY BE THE FIRST, LAST,'
 HELP '             OR ANY INTERMEDIARY CHARACTER.  AN ASTERISK (*)'
 HELP '             MAY BE USED TO INDICATE THAT ANY VALUE IN ITS'
 HELP '             POSITION AND ANY VALUES IN ALL FOLLOWING POSITIONS'
 HELP '             ARE TO BE ACCEPTED.  FOR EXAMPLE:'
 HELP ' '
 HELP '                   NAME=ABC     WOULD ALLOW ONLY MEMBER ABC,'
 HELP '                                MEMBER ABCD WOULD BE REJECTED.'
 HELP ' '
 HELP '                   NAME=A+C     WOULD ALLOW MEMBER ABC OR A1C'
 HELP '                                OR AXC.  MEMBERS AB OR ABCD'
 HELP '                                WOULD NOT BE SELECTED.'
 HELP ' '
 HELP '                   NAME=AB+     WOULD SELECT MEMBER ABC, AB1,'
 HELP '                                OR ABX.  MEMBERS AB OR ABCD'
 HELP '                                WOULD NOT BE SELECTED.'
 HELP ' '
 HELP '                   NAME=++C     WOULD ALLOW MEMBER ABC, XYC,'
 HELP '                                OR CCC.  MEMBER ABCD WOULD NOT'
 HELP '                                BE SELECTED.'
 HELP ' '
 HELP '                   NAME=++      WOULD ALLOW ANY 2 CHARACTER'
 HELP '                                NAMED MEMBER TO BE SCANNED.'
 HELP ' '
 HELP '                   NAME=AB*     WOULD ALLOW ANY MEMBER THAT'
 HELP '                                BEGINS WITH THE LETERS ''AB''.'
 HELP '                                MEMBERS AB, ABC, ABCD, OR'
 HELP '                                AB123456 WOULD BE SCANNED.'
 HELP ' '
 HELP '0  HELP: (HELP IN COLUMNS 1-4) REQUESTS THIS HELP REPORT TO'
 HELP '             BE PRINTED.  SCANNING WILL BE SUPPRESSED.'
 HELP '0JCL TO EXECUTE THE UTILITY IS:'
 HELP '0  //........ JOB .....'
 HELP '   //PDSSCAN  EXEC PGM=PDSSCAN'
 HELP '   //STEPLIB  DD DSN=.......,DISP=SHR'
 HELP '   //SYSPRINT DD SYSOUT=*'
 HELP '   //SYSUT1   DD DSN=.......,DISP=SHR  (PDS TO BE SCANNED)'
 HELP '   //SYSIN    DD *'
 HELP '        .'
 HELP '        CONTROL STATEMENTS'
 HELP '        .'
 HELP '   /*'
 HELP '   //'
         DC    X'FF'
*--------------------------------------------------------------------*
*                  COMMON AREA                                       *
*--------------------------------------------------------------------*
         PDSBLOK BLOCK=COMM,TYPE=DSECT
*---------------------------------------------------------------------*
*                  REGISTER EQUATES                                   *
*---------------------------------------------------------------------*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END   PDSPH02
./ ADD NAME=PDSPH03  0100-02291-02291-0123-00183-00183-00000-RLRICE
*---------------------------------------------------------------------*
*     NAME: PDSPH03                                                   *
*                                                                     *
* FUNCTION: THIS MODULE RECEIVES CONTROL FROM EITHER THE SCAN         *
*           MODULE PDSPH01, OR THE HELP MODULE PDSPH02.  ITS          *
*           PURPOSE IS TO CLOSE ALL DCB'S, DYNAMICALLY DE-ALLOCATE    *
*           THE DD'S ASSIGNED TO THE SCAN BLOCKS, FREE THE SCAN       *
*           BLOCKS, AND TERMINATE THIS UTILITY.                       *
*                                                                     *
*---------------------------------------------------------------------*
PDSPH03  CSECT
         USING PDSPH03,R12                                              ASE00100
         LR    R12,R15             LOAD PERMANENT                       ASE00120
         USING PDSCOMM,R10         DEFINE COMM BASE
         USING SCANBLOK,R11        DEFINE SCAN BLOCK BASE
         B     INIT0000
         DC    C'PDS SCAN MODULE 03 (UTILITY CLEAN-UP AND TERMINATE)'
INIT0000 DS    0H
         ICM   R11,15,COMMANCH     FIRST SCAN BLOCK ON CHAIN
         BZ    CLOSE040            NO BLOCKS ON CHAIN
         LA    R1,DALORB           DEALLOCATION REQUEST BLOCK
         USING S99RB,R1            DEFINE REQUEST BLOCK BASE
         MVI   S99VERB,S99VRBUN    DEALLOCATION VERB
         MVI   S99RBLN,S99RBEND-S99RB
         LA    R2,DALOPARM         DEALLOCATION PARAMETERS
         ST    R2,S99TXTPP         INSERT TEXT ADDRESS ADDRESS
CLOSE010 DS    0H
         LA    R2,SCANDCB          DCB WITHIN SCAN BLOCK
         CLOSE ((R2))              CLOSE THE DCB
         MVC   DAIRWORK(DAIRWORKL),DAIRINIT    INITIALIZE
         MVC   DAIRDD,SCANDD       MOVE DD NAME
         LA    R1,DALORBA          REQEST BLOCK ADDRESS ADDRESS
         SVC   99                  DE-ALLOCATE PRINT DD
         LTR   R15,R15             DE-ALLOCATION SUCCESSFUL??
         BNZ   ERR1000             NO
CLOSE020 DS    0H
         LR    R1,R11              COPY SCAN BLOCK ADDRESS
         ICM   R11,15,SCANNEXT     NEXT ON CHAIN
         LA    R0,SCANBLOKL        LENGTH OF BLOCK
         FREEMAIN R,A=(R1),LV=(R0) FREEMAIN SCAN BLOCK
         LTR   R15,R15             FREEMIAN SUCCESSFUL??
         BNZ   ERR2000             NO
CLOSE030 DS    0H
         LTR   R11,R11             REACHED END OF CHAIN??
         BNZ   CLOSE010            NO
CLOSE040 DS    0H
         ICM   R1,15,COMMNAME      FIRST NAME FILTER BLOCK
CLOSE050 DS    0H
         BZ    CLOSE060            NO MORE TO FREE
         L     R2,NAMENEXT-NAMEBLOK(R1)  NEXT ON CHAIN
         FREEMAIN R,A=(1),LV=4+(8*NAMEL)
         LTR   R1,R2               COPY NEXT BLOCK'S ADDRESS
         B     CLOSE050            FREE ALL FILTER BLOCKS
CLOSE060 DS    0H
         LA    R2,PDSDIR           PDS DIRECTORY DCB
         CLOSE ((R2))              CLOSE DIRECTORY DCB
         LA    R2,PDSMEM           PDS MEMBER DCB
         CLOSE ((R2))              CLOSE MEMBER DCB
         LA    R2,PRINTER          MAINLINE PRINT DCB
         CLOSE ((R2))              CLOSE PRINTER DCB
         B     EXIT0000            AND EXIT
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*        MAINLINE PRINTING/HEADINGS                                   *
*                                                                     *
*---------------------------------------------------------------------*
PRT0000  DS    0H
         LA    R2,PRINTER          PRINT DCB
         PUT   (R2),PLINE          WRITE TO PRINTER
         AP    COMMLINE,P1         ADD 1 TO LINE COUNT
         CLI   PLINE,C' '          SINGLE SPACED??
         BE    PRT0010             YES
         AP    COMMLINE,P1         ADD 1 TO LINE COUNT
PRT0010  DS    0H
         MVC   PLINE,PLINE-1       CLEAR PRINT I/O AREA
         CP    COMMLINE,COMMAXL    TIME FOR HEADING??
         BLR   R9                  NO
HEAD0000 DS    0H
         AP    COMMPAGE,P1         ADD 1 TO PAGE COUNT
         MVC   HEADPAGE,=X'402020202120'
         ED    HEADPAGE,COMMPAGE   EDIT PAGE NUMBER
         MVC   PLINE(HEADINGL),HEADING
         PUT   PRINTER,PLINE       WRITE HEADING
         MVC   PLINE,PLINE-1       CLEAR PRINT I/O AREA
         ZAP   COMMLINE,P0         RESET LINE COUNT
         BR    R9                  ALL DONE
ERR1000  DS    0H
         STH   R15,DWORD           SAVE RETURN CODE
         LA    R1,DALORB           REQUEST BLOCK
         UNPK  PR99ERR(5),S99ERROR(3)
         UNPK  PR99INFO(5),S99INFO(3)
         UNPK  PR99R15(5),DWORD(3)
         MVZ   PR99ERR,HEX0F0F     TURN OFF ZONES
         MVZ   PR99INFO,HEX0F0F    TURN OFF ZONES
         MVZ   PR99R15,HEX0F0F     TURN OFF ZONES
         TR    PR99ERR,HEXCHAR     TRANSLATE ERROR CODE
         TR    PR99INFO,HEXCHAR    TRANSLATE INFO CODE
         TR    PR99R15,HEXCHAR     TRANSLATE RETURN CODE
         MVI   PR99ERR+4,C' '      RESTORE BLANK
         MVI   PR99INFO+4,C' '     RESTORE BLANK
         MVI   PR99R15+4,C' '      RESTORE BLANK
         MVC   PLINE(PR99LINEL),PR99LINE
         BAL   R9,PRT0000          PRINT ERROR MESSAGE
         B     CLOSE020            TRY TO CONTINUE
ERR2000  DS    0H
         STH   R15,DWORD           SAVE RETURN CODE
         UNPK  PRFREE15(5),DWORD(3)
         MVZ   PRFREE15,HEX0F0F    TURN OFF ZONES
         TR    PRFREE15,HEXCHAR    TRANSLATE RETURN CODE
         MVI   PRFREE15+4,C' '     RESTORE BLANK
         MVC   PLINE(FREELINEL),FREELINE
         BAL   R9,PRT0000          PRINT ERROR MESSAGE
         B     CLOSE030            TRY TO CONTINUE
EXIT0000 DS    0H
         L     R13,4(R13)          RESTORE ORIGINAL SAVE AREA
         LM    R14,R12,12(R13)     RESTORE REMAINING REGISTERS
         SR    R15,R15             SET RETURN CODE
         BR    R14                 TERMINATE
         LTORG
*--------------------------------------------------------------------*
*                                                                    *
*                  WORK AREAS                                        *
*                                                                    *
*--------------------------------------------------------------------*
DWORD    DC    D'0'
P0       DC    P'0'
P1       DC    P'1'
DALORBA  DC    A(DALORB+X'80000000')
DALOPARM DC    A(DAIRDDP+X'80000000')
DALORB   DS    (S99RBEND-S99RB)X'00'
DAIRWORK DS    0A
DAIRDDP  DS    AL2,AL2,AL2
DAIRDD   DS    CL8
DAIRWORKL EQU  *-DAIRWORK
DAIRINIT DC    AL2(DALDDNAM),AL2(1),AL2(8)
         DC    CL8' '
HEADING  DS    0C
         DC    C'1'
         DC    CL32' '
         DC    C'PDS SCAN UTILITY'
         DC    CL22' '
         DC    C'PAGE'
HEADPAGE DC    CL6' '
HEADINGL EQU   *-HEADING
PR99LINE DS    0C
         DC    C'0'
         DC    C'DYNAMIC DE-ALLOCATION FAILURE, R15='
PR99R15  DC    CL4' '
         DC    C'   S99ERROR='
PR99ERR  DC    CL4' '
         DC    C'   S99INFO='
PR99INFO DC    CL4' '
         DC    C' '
PR99LINEL EQU  *-PR99LINE
FREELINE DS    0C
         DC    C'0'
         DC    C'FREEMAIN FAILURE, R15='
PRFREE15 DC    CL4' '
         DC    C' '
FREELINEL EQU  *-FREELINE
HEX0F0F  DC    8X'0F'
HEXCHAR  DC    C'0123456789ABCDEF'
PLINE    DC    CL133' '
*--------------------------------------------------------------------*
*                  COMMON AREA                                       *
*--------------------------------------------------------------------*
         PDSBLOK BLOCK=COMM,TYPE=DSECT
*--------------------------------------------------------------------*
*                  SCAN BLOCK                                        *
*--------------------------------------------------------------------*
         PDSBLOK BLOCK=SCAN,TYPE=DSECT
*--------------------------------------------------------------------*
*                  NAME FILTER BLOCK                                 *
*--------------------------------------------------------------------*
         PDSBLOK BLOCK=NAME,TYPE=DSECT
         IEFZB4D0
         IEFZB4D2
*---------------------------------------------------------------------*
*                  REGISTER EQUATES                                   *
*---------------------------------------------------------------------*
         COPY  REGEQU
         END   PDSPH03
./ ADD NAME=VSAMCOMM 0100-02291-02291-0123-00008-00008-00000-RLRICE
*---------------------------------------------------------------------*
*                                                                     *
*        VSAM UTILITY COMMON AREAS                                    *
*                                                                     *
*---------------------------------------------------------------------*
VSAMCOMM CSECT
         VSAMCOMM
         END   VSAMCOMM
./ ADD NAME=VSAMPH00 0100-02291-02291-0123-00742-00742-00000-RLRICE
*---------------------------------------------------------------------*
*                                                                     *
*           THIS PHASE:                                               *
*              1) OPENS THE FILES                                     *
*              2) READS THE CONTROL CARDS                             *
*              3) DOES LIMITED PARAMETER VALIDATION CHECKING          *
*              4) PASSES CONTROL TO THE CROSS CHECKING PHASE          *
*                                                                     *
*---------------------------------------------------------------------*
VSAMPH00 CSECT
         USING VSAMPH00,R15            SPECIFY CSECT BASE
         ID                            DATE AND TIME COMPILED
         STM   R14,R12,12(R13)         SAVE REGISTERS
         L     R12,VCOMM               COMMON MODULE ADDRESS
         USING VSAMCOMM,R12            DEFINE COMMON BASE
         LA    R2,COMSAVE              SAVE AREA ADDRESS
         ST    R13,4(R2)               CHAIN
         ST    R2,8(R13)               CHAIN
         LR    R13,R2                  POINT TO NEW SAVE AREA
         LR    R11,R15                 LOAD NEW BASE REGISTER
         LA    R10,2048(R11)           2ND BASE REGISTER
         LA    R10,2048(R10)           2ND BASE REGISTER
         DROP  R15                     DISCONTINUE OLD BASE
         USING VSAMPH00,R11,R10        RESUME WITH NEW BASE
         LA    R2,PRINTER              PRINT FILE
         OPEN  ((R2),OUTPUT)           OPEN PRINT FILE
         LA    R2,SYSIN                CONTROL FILE
         OPEN  ((R2),INPUT)            OPEN CONTROL FILE
         MVC   VSAMMAC,=CL8'OPEN'      LAST MACRO IS 'OPEN'
         LA    R2,VSAMFILE             VSAM ACB
         OPEN  ((R2))                  OPEN INPUT FILE
         LTR   R15,R15                 OPENED SUCCESSFULLY??
         BNZ   OPEN0040                NO
         RDJFCB MF=(E,JFCBREQ)         READ JFCB
         MVI   COMACBF,X'00'           CLEAR ALL FLAGS
         MVC   VSAMMAC,=CL8'TESTCB'    LAST MACRO IS 'TESTCB'
         LA    R2,VSAMFILE             INPUT FILE ACB
         TESTCB ACB=(R2),              TEST ACB                        +
               ATRB=KSDS,              .. FOR KSDS ORGANIZATION        +
               ERET=OPEN0040           .. TEST FAILED
         BNE   OPEN0010                NOT KSDS...
         OI    COMACBF,$KSDS           INDICATE DATASET IS KSDS
         B     OPEN0030                ISSUE SHOWCB
OPEN0010 DS    0H
         TESTCB ACB=(R2),              TEST ACB                        +
               ATRB=RRDS,              .. FOR RRDS ORGANIZATION        +
               ERET=OPEN0040           .. TEST FAILED
         BNE   OPEN0020                NOT RRDS
         OI    COMACBF,$RRDS           INDICATE DATASET IS RRDS
         B     OPEN0030                ISSUE SHOWCB
OPEN0020 DS    0H
         TESTCB ACB=(R2),              TEST ACB                        +
               ATRB=ESDS,              .. FOR ESDS ORGANIZATION        +
               ERET=OPEN0040           .. TEST FAILED
         BNE   OPEN0030                NOT ESDS
         OI    COMACBF,$ESDS           INDICATE DATASET IS ESDS
OPEN0030 DS    0H
         LA    R3,COMLRECL             FIRST RETURNED ITEM
         SHOWCB ACB=(R2),              SHOW ACB ATTRIBUTES             +
               AREA=(R3),              .. RETURNED DATA                +
               LENGTH=12,              .. LENGTH OF RETURNED DATA      +
               FIELDS=(LRECL,          .. REQUEST RECORD LENGTH        +
               KEYLEN,                 .. REQUEST KEY LENGTH           +
               RKP)                    .. REQUEST RELATIVE KEY POSITION
         LTR   R15,R15                 SHOWCB SUCCESSFUL??
         BZ    READ0000                YES... OPEN PROCESSING COMPLETE
         MVC   VSAMMAC,=CL8'SHOWCB'    LAST MACRO WAS 'SHOWCB'
OPEN0040 DS    0H
         STH   R15,DWORD               VSAM RETURN CODE
         UNPK  VSAMRC(5),VSAMRC(3)     UNAPACK RETURN CODE
         NC    VSAMRC,HEX0F0F          TURN OFF ZONES
         TR    VSAMRC,HEXCHAR          CONVERT TO PRINTABLE
         MVI   VSAMRC+4,C' '           RESTORE BLANK
         OI    COMFLAG,$ERROR          TURN ON ERROR INDICATOR
         MVC   PLINE,MSG0010           MOVE MESSAGE
         BAL   R9,PRT0000              PRINT ERROR MESSAGE
*---------------------------------------------------------------------*
*                                                                     *
*                 PROCESS CONTROL CARDS                               *
*                                                                     *
*---------------------------------------------------------------------*
READ0000 DS    0H
         LA    R2,SYSIN                CONTROL FILE
         USING IHADCB,R2               DEFINE DSECT BASE
         LA    R1,CLSE0000             END OF DATA ROUTINE ADDRESS
         STCM  R1,7,DCBEODAD+1         INSERT ROUTINE ADDRESS IN DCB
         BAL   R9,HEADINGS             PRINT HEADINGS
READ0010 DS    0H
         LA    R2,SYSIN                CONTROL FILE
         GET   (R2),CARDAREA           READ A CONTROL RECORD
         MVC   PLINE+1(L'CARDAREA),CARDAREA
         MVI   PLINE,C'0'              DOUBLE SPACE
         BAL   R9,PRT0000              PRINT CONTROL CARD
         CLI   CARDAREA,C'*'           COMMENT CARD??
         BE    READ0010                YES
         MVC   PLINE,PLINE-1           CLEAR PRINT LINE
*---------------------------------------------------------------------*
*                                                                     *
*           CHECK FOR KEYWORDS                                        *
*                                                                     *
*       WITHIN THE KEYWORD PROCESSING ROUTINES REGISTER USAGE IS:     *
*       R7  CURRENT ADDRESS IN WORK AREA                              *
*       R3  ADDRESS OF NUMERIC TARGETS                                *
*                                                                     *
*---------------------------------------------------------------------*
PARM0000 DS    0H
         LA    R7,CARDAREA             INITIALIZE CURRENT ADDRESS REG
PARM0010 DS    0H
         CLI   0(R7),C' '              END OF CARD?
         BE    READ0010                YES
         CLC   =C'SKIP=',0(R7)         SKIP CONTROL CARD?
         BE    SKIP0000                YES
         CLC   =C'COUNT=',0(R7)        COUNT CONTROL CARD?
         BE    COUNT000                YES
         CLC   =C'MAXLINES=',0(R7)     OUTPUT LINES LIMIT CARD?
         BE    MAXL0000                YES
         CLC   =C'SCAN=',0(R7)         SCAN1 VALUE CONTROL CARD?
         BE    SCAN1010                YES
         CLC   =C'SCAN1=',0(R7)        SCAN1 VALUE CONTROL CARD?
         BE    SCAN1000                YES
         CLC   =C'ZONE=',0(R7)         ZONE1 CONTROL CARD?
         BE    ZONE1010                YES
         CLC   =C'ZONE1=',0(R7)        ZONE1 CONTROL CARD?
         BE    ZONE1000                YES
         CLC   =C'SCAN2=',0(R7)        SCAN2 VALUE CONTROL CARD?
         BE    SCAN2000                YES
         CLC   =C'ZONE2=',0(R7)        ZONE2 CONTROL CARD?
         BE    ZONE2000                YES
         CLC   =C'TZONE=',0(R7)        TRIGGER ZONE CARD?
         BE    TZONE000                YES
         CLC   =C'TRIGGER=',0(R7)      TRIGGER CONTROL CARD?
         BE    TRGR0000                YES
         CLC   =C'TITLE=',0(R7)        TITLE CONTROL CARD?
         BE    TITLE000                YES
         CLC   =C'NOHEX',0(R7)         NO HEX?
         BE    NOHEX000                YES
         CLC   =C'SINGLE',0(R7)        SINGLE SPACING REQUEST??
         BE    SPCE0000                YES
         CLC   =C'SCANCTRL',0(R7)      SCAN CONTROL REQUEST??
         BE    SCTRL000                YES
         CLC   =C'ABEND',0(R7)         ABEND (DEBUGGING) REQUEST??
         BE    ABEND000                YES
         CLC   =C'HELP',0(R7)          HELP REQUEST??
         BE    HELP0000                YES
         CLC   =C'FIRST100',0(R7)      FIRST100 REQUEST??
         BE    FIRST100                YES
         CLC   =C'FROMKEY',0(R7)       FROM KEY??
         BE    FKEY0000                YES
         CLC   =C'TOKEY',0(R7)         TO KEY??
         BE    TKEY0000                YES
         OI    COMFLAG,$ERROR          TURN ON ERROR INDICATOR
         MVC   PLINE,MSG0006           INVALID PARAMETER
         BAL   R9,PRT0000              PRINT MESSAGE
         B     READ0010                READ NEXT STATEMENT
ABEND000 DS    0H
         DC    H'0'                    DEAR JOHN......
SPCE0000 DS    0H
         LA    R7,7(R7)                PAST KEYWORD
         MVI   COMSPACE,$SINGLE        SET SINGLE SPACING
         B     PARM0010                SEARCH FOR MORE KEYWORDS
NOHEX000 DS    0H
         MVI   COMHEX,C' '             SET NO HEX FLAG
         LA    R7,6(R7)                PAST KEYWORD
         B     PARM0010                SEARCH FOR MORE KEYWORDS
SKIP0000 DS    0H
         LA    R7,5(R7)                END OF KEYWORD
         OI    COMFLAG,$SKIP           INDICATE SKIP REQUESTED
         LA    R3,COMSKIP              OUTPUT AREA
         BAL   R8,CNV0000              CONVERT QUANTITY
         B     PARM0010                CHECK FOR MORE PARAMETERS
COUNT000 DS    0H
         LA    R7,6(R7)                END OF KEYWORD
         LA    R3,COMCOUNT             OUTPUT AREA
         OI    COMFLAG,$COUNT          TURN ON COUNT FLAG
         BAL   R8,CNV0000              CONVERT AMOUNT
         B     PARM0010                CHECK FOR MORE PARAMETERS
MAXL0000 DS    0H
         LA    R7,9(R7)                END OF KEYWORD
         LA    R3,COMMAXL              OUTPUT AREA
         BAL   R8,CNV0000              CONVERT AMOUNT
         ST    R2,COMMAXL              STORE MAX LINES
         B     PARM0010                CHECK FOR MORE PARAMETERS
HELP0000 DS    0H
         MVI   COMHELP,$HELP           SET HELP FLAG
         LA    R7,5(R7)                PAST KEYWORD
         B     PARM0010                SEARCH FOR MORE KEYWORDS
FIRST100 DS    0H
         OI    COMFLAG,$100            SET FIRST100 LIST FLAG
         LA    R7,6(R7)                PAST KEYWORD
         B     PARM0010                SEARCH FOR MORE KEYWORDS
SCTRL000 DS    0H
         LA    R7,9(R7)                END OF KEYWORD
         OI    COMFLAG,$SCTRL          TURN ON SCAN CONTROL FLAG
         CLC   =C'1 AND 2',0(R7)       REQUEST FOR 1 AND 2??
         BNE   SCTRL010                NO
         MVI   COMSCTRL,$AND           SET 'AND' INDICATOR
         LA    R7,8(R7)                ADVANCE INPUT ADDRESS
         B     PARM0010                LOOK FOR MORE PARAMETERS
SCTRL010 DS    0H
         CLC   =C'1 OR 2',0(R7)        REQUEST FOR 1 OR 2??
         BNE   SCTRL020                NO
         MVI   COMSCTRL,$OR            SET 'OR' INDICATOR
         LA    R7,7(R7)                ADVANCE INPUT ADDRESS
         B     PARM0010                CHECK FOR MORE PARAMETERS
SCTRL020 DS    0H
         MVC   PLINE,MSG0009           MOVE MESSAGE
         BAL   R9,PRT0000              PRINT MESSAGE
         OI    COMFLAG,$ERROR          INDICATE ERROR OCCURRED
         B     READ0010                BYPASS REMAINDER OF CARD
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*           PROCESS SCAN/TRIGGER/OR TITLE                             *
*                                                                     *
*---------------------------------------------------------------------*
SCAN1000 DS    0H
         LA    R7,1(R7)                ADVANCE 1 EXTRA BYTE
SCAN1010 DS    0H
         LA    R7,5(R7)                SCAN VALUE
         MVI   HEXFLAG,C' '            TURN OFF HEX INDICATOR
         CLC   =C'X''',0(R7)           HEX VALUE??
         BNE   SCAN1020                NO
         MVI   HEXFLAG,$HEX            INDICATE HEX SCAN VALUE
         LA    R7,1(R7)                BYPASS HEX INDICATOR
SCAN1020 DS    0H
         BAL   R8,SCAN5000             BEGIN INTREPRETING SCAN CARD
         MVC   COMSCAN1,SCANDATA       MOVE SCAN DATA
         LH    R15,SCANLEN             SCAN PARAMETER LENGTH
         BCTR  R15,0                   MINUS 1 FOR EXECUTES
         CLI   HEXFLAG,$HEX            WAS SCAN 'HEX'??
         BNE   SCAN1030                NO
         TM    SCANLEN+1,X'01'         IS LENGTH ODD??
         BO    SCAN1040                YES
         EX    R15,HEXTRT              TEST DATA
         BNZ   SCAN5120                INVALID HEX DATA
         EX    R15,HEXTR               TRANSLATE FOR PACKING
         SRL   R15,1                   DIVIDE BY 2
         PACK  COMSCAN1+00(6),SCANDATA+00(11)
         PACK  COMSCAN1+05(6),SCANDATA+10(11)
         PACK  COMSCAN1+10(6),SCANDATA+20(11)
         PACK  COMSCAN1+15(6),SCANDATA+30(11)
         PACK  COMSCAN1+20(6),SCANDATA+40(11)
         PACK  COMSCAN1+25(6),SCANDATA+50(11)
         PACK  COMSCAN1+30(6),SCANDATA+60(11)
         PACK  COMSCAN1+35(6),SCANDATA+70(11)
SCAN1030 DS    0H
         LA    R15,1(R15)              RESTORE FULL LENGTH
         STH   R15,COMSCN1L            SAVE LENGTH OF SEARCH ARGUEMENT
         OI    COMSCN1F,$SCAN1         SCAN IN EFFECT
         B     PARM0010                SEARCH FOR MORE KEYWORDS
SCAN1040 DS    0H
         OI    COMFLAG,$ERROR          TURN ON ERROR INDICATOR
         MVC   PLINE,MSG0001           MOVE ERROR MESSAGE
         BAL   R9,PRT0000              PRINT ERROR MESSAGE
         B     PARM0010                SEARCH FOR MORE KEYWORDS
SCAN2000 DS    0H
         LA    R7,6(R7)                SCAN VALUE
         MVI   HEXFLAG,C' '            TURN OFF HEX INDICATOR
         CLC   =C'X''',0(R7)           HEX VALUE??
         BNE   SCAN2010                NO
         MVI   HEXFLAG,$HEX            INDICATE HEX SCAN VALUE
         LA    R7,1(R7)                BYPASS HEX INDICATOR
SCAN2010 DS    0H
         BAL   R8,SCAN5000             BEGIN INTREPRETING SCAN CARD
         MVC   COMSCAN2,SCANDATA       MOVE SCAN DATA
         LH    R15,SCANLEN             SCAN PARAMETER LENGTH
         BCTR  R15,0                   MINUS 1 FOR EXECUTES
         CLI   HEXFLAG,$HEX            WAS SCAN 'HEX'??
         BNE   SCAN2020                NO
         TM    SCANLEN+1,X'01'         IS LENGTH ODD??
         BO    SCAN2030                YES
         EX    R15,HEXTRT              TEST DATA
         BNZ   SCAN5120                INVALID HEX DATA
         EX    R15,HEXTR               TRANSLATE FOR PACKING
         SRL   R15,1                   DIVIDE BY 2
         PACK  COMSCAN2+00(6),SCANDATA+00(11)
         PACK  COMSCAN2+05(6),SCANDATA+10(11)
         PACK  COMSCAN2+10(6),SCANDATA+20(11)
         PACK  COMSCAN2+15(6),SCANDATA+30(11)
         PACK  COMSCAN2+20(6),SCANDATA+40(11)
         PACK  COMSCAN2+25(6),SCANDATA+50(11)
         PACK  COMSCAN2+30(6),SCANDATA+60(11)
         PACK  COMSCAN2+35(6),SCANDATA+70(11)
SCAN2020 DS    0H
         LA    R15,1(R15)              RESTORE FULL LENGTH
         STH   R15,COMSCN2L            SAVE LENGTH OF SEARCH ARGUEMENT
         OI    COMSCN2F,$SCAN2         SCAN IN EFFECT
         B     PARM0010                SEARCH FOR MORE KEYWORDS
SCAN2030 DS    0H
         OI    COMFLAG,$ERROR          TURN ON ERROR INDICATOR
         MVC   PLINE,MSG0001           MOVE ERROR MESSAGE
         BAL   R9,PRT0000              PRINT ERROR MESSAGE
         B     PARM0010                SEARCH FOR MORE KEYWORDS
TRGR0000 DS    0H
         LA    R7,8(R7)                POINT TO SCAN VALUE
         MVI   HEXFLAG,C' '            TURN OFF HEX INDICATOR
         CLC   =C'X''',0(R7)           HEX VALUE??
         BNE   TRGR0010                NO
         MVI   HEXFLAG,$HEX            INDICATE HEX SCAN VALUE
         LA    R7,1(R7)                BYPASS HEX INDICATOR
TRGR0010 DS    0H
         BAL   R8,SCAN5000             BEGIN INTREPRETING SCAN CARD
         MVC   COMTRGR,SCANDATA        MOVE SCAN DATA
         LH    R15,SCANLEN             SCAN PARAMETER LENGTH
         BCTR  R15,0                   MINUS 1 FOR EXECUTES
         CLI   HEXFLAG,$HEX            WAS VALUE HEX??
         BNE   TRGR0020                NO
         TM    SCANLEN+1,X'01'         IS LENGTH ODD??
         BO    TRGR0030                YES
         EX    R15,HEXTRT              TEST DATA
         BNZ   SCAN5120                INVALID HEX DATA
         EX    R15,HEXTR               TRANSLATE FOR PACKING
         SRL   R15,1                   DIVIDE BY 2
         PACK  COMTRGR+00(6),SCANDATA+00(11)
         PACK  COMTRGR+05(6),SCANDATA+10(11)
         PACK  COMTRGR+10(6),SCANDATA+20(11)
         PACK  COMTRGR+15(6),SCANDATA+30(11)
         PACK  COMTRGR+20(6),SCANDATA+40(11)
         PACK  COMTRGR+25(6),SCANDATA+50(11)
         PACK  COMTRGR+30(6),SCANDATA+60(11)
         PACK  COMTRGR+35(6),SCANDATA+70(11)
TRGR0020 DS    0H
         LA    R15,1(R15)              RESTORE FULL LENGTH
         STH   R15,COMTRGL             SAVE LENGTH OF SEARCH ARGUEMENT
         OI    COMTRGRF,$TRIGGER       SCAN IN EFFECT
         B     PARM0010                SEARCH FOR MORE KEYWORDS
TRGR0030 DS    0H
         OI    COMFLAG,$ERROR          TURN ON ERROR INDICATOR
         MVC   PLINE,MSG0001           MOVE ERROR MESSAGE
         BAL   R9,PRT0000              PRINT ERROR MESSAGE
         B     PARM0010                SEARCH FOR MORE KEYWORDS
TITLE000 DS    0H
         LA    R7,6(R7)                SCAN VALUE
         BAL   R8,SCAN5000             BEGIN INTERPRET TITLE
         MVC   COMTITLE,SCANDATA       MOVE SCAN DATA
         B     PARM0010                CONTINUE SCANNING PARAMETERS
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*           PROCESS SCAN/TRIGGER/ OR TITLE VALUES                     *
*                                                                     *
*---------------------------------------------------------------------*
SCAN5000 DS    0H
         MVC   SCANDATA,SCANDATA-1     INITIALIZE WORK AREA
         LA    R1,SCANDATA             START OF SCAN WORK AREA
         SR    R2,R2                   ZERO LENGTH
         CLI   0(R7),X'7D'             OPENING QUOTE?
         BNE   SCAN5100                NO ???
         LA    R7,1(R7)                ADD 1 TO ADDRESS
SCAN5010 DS    0H
         CLI   0(R7),X'7D'             QUOTE?
         BE    SCAN5040                YES
SCAN5020 DS    0H
         MVC   0(1,R1),0(R7)           MOVE TO OUTPUT VALUE
         LA    R1,1(R1)                ADD 1 TO ADDRESS
         LA    R2,1(R2)                ADD 1 TO LENGTH
SCAN5030 DS    0H
         LA    R7,1(R7)                ADD 1 TO ADDRESS
         C     R1,=A(SCANDATA+70)      END OF WORK AREA?
         BE    SCAN5110                YES... NO ENDING QUOTE
         B     SCAN5010                CONTINUE
SCAN5040 DS    0H
         CLI   1(R7),X'7D'             DOUBLE QUOTE?
         BNE   SCAN5050                NO
         LA    R7,1(R7)                ADD 1 TO ADDRESS
         B     SCAN5020                MOVE IT INTO OUTPUT
SCAN5050 DS    0H
         STH   R2,SCANLEN              SAVE LENGTH
         LA    R7,2(R7)                NEXT PARAMETER
         BR    R8                      RETURN
SCAN5100 DS    0H
         MVC   PLINE,MSG0002           MOVE MESSAGE
         BAL   R9,PRT0000              PRINT ERROR MESSAGE
         B     READ0010                BYPASS REMAINDER OF THIS CARD
SCAN5110 DS    0H
         OI    COMFLAG,$ERROR          TURN ON ERROR INDICATOR
         MVC   PLINE,MSG0003           MOVE MESSAGE
         BAL   R9,PRT0000              PRINT ERROR MESSAGE
         B     READ0010                BYPASS REMAINDER OF THIS CARD
SCAN5120 DS    0H
         OI    COMFLAG,$ERROR          TURN ON ERROR INDICATOR
         MVC   PLINE,MSG0008           MOVE MESSAGE
         BAL   R9,PRT0000              PRINT ERROR MESSAGE
         B     PARM0010                SEARCH FOR MORE PARAMETERS
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*           PROCESS ZONE FOR SCAN OR TRIGGER                          *
*                                                                     *
*---------------------------------------------------------------------*
ZONE1000 DS    0H
         LA    R7,1(R7)                1 EXTRA FOR ZONE1
ZONE1010 DS    0H
         LA    R7,5(R7)                PAST KEYWORD
         LA    R3,COMZ1BGN             ZONE START
         BAL   R8,CNV0000              CONVERT NUMBER
         LH    R1,COMZ1BGN             LOAD STARTING POSITION
         LTR   R1,R1                   STARTING POINT GIVEN??
         BZ    ZONE1020                NO STARTING POSITION
         BCTR  R1,0                    MAKE RELATIVE TO ZERO
         STH   R1,COMZ1BGN             SAVE OFFSET
         OI    COMSCN1F,$Z1BGN         ZONE1 STARTING FLAG
ZONE1020 DS    0H
         CLI   0(R7),C' '              ENDING ZONE PRESENT??
         BE    READ0010                NO
         CLI   0(R7),C','              ENDING ZONE PRESENT??
         BE    ZONE1030                NO
         LA    R3,COMZ1END             ZONE END
         BAL   R8,CNV0000              CONVERT NUMBER
         CLC   COMZ1END,COMZ1BGN       IS BEGIN LARGER THAN END?
         BL    ZONE5000                YES
         LH    R1,COMZ1END             LOAD ENDING POSITION
         LTR   R1,R1                   ZERO??
         BZ    ZONE5000                BAD ZONE
         BCTR  R1,0                    CONVERT TO OFFSET
         STH   R1,COMZ1END             SAVE ENDING OFFSET
         OI    COMSCN1F,$Z1END         ZONE END FLAG
         B     PARM0010                CHECK FOR MORE PARAMETERS
ZONE1030 DS    0H
         LA    R7,1(R7)                ADVANCE INPUT ADDRESS
         B     PARM0010                CHECK FOR MORE PARAMETERS
ZONE2000 DS    0H
         LA    R7,6(R7)                PAST KEYWORD
         LA    R3,COMZ2BGN             ZONE START
         BAL   R8,CNV0000              CONVERT NUMBER
         LH    R1,COMZ2BGN             LOAD STARTING POSITION
         LTR   R1,R1                   STARTING POINT GIVEN??
         BZ    ZONE2010                NO STARTING POSITION
         BCTR  R1,0                    MAKE RELATIVE TO ZERO
         STH   R1,COMZ2BGN             SAVE OFFSET
         OI    COMSCN2F,$Z2BGN         ZONE2 STARTING FLAG
ZONE2010 DS    0H
         CLI   0(R7),C' '              ENDING ZONE PRESENT??
         BE    READ0010                NO
         CLI   0(R7),C','              ENDING ZONE PRESENT??
         BE    ZONE1030                NO
         LA    R3,COMZ2END             ZONE END
         BAL   R8,CNV0000              CONVERT NUMBER
         CLC   COMZ2END,COMZ2BGN       IS BEGIN LARGER THAN END?
         BL    ZONE5000                NO
         LH    R1,COMZ2END             LOAD ENDING POSITION
         LTR   R1,R1                   ZERO??
         BZ    ZONE5000                BAD ZONE
         BCTR  R1,0                    CONVERT TO OFFSET
         STH   R1,COMZ2END             SAVE ENDING OFFSET
         OI    COMSCN2F,$Z2END         ZONE END FLAG
         B     PARM0010
TZONE000 DS    0H
         LA    R7,6(R7)                PAST KEYWORD
         LA    R3,COMTZBGN             ZONE START
         BAL   R8,CNV0000              CONVERT NUMBER
         LH    R1,COMTZBGN             LOAD STARTING POSITION
         LTR   R1,R1                   STARTING POINT GIVEN??
         BZ    TZONE010                NO STARTING POSITION
         BCTR  R1,0                    MAKE RELATIVE TO ZERO
         STH   R1,COMTZBGN             SAVE OFFSET
         OI    COMTRGRF,$TZBGN         TRIGGER STARTING FLAG
TZONE010 DS    0H
         CLI   0(R7),C' '              ENDING ZONE PRESENT??
         BE    READ0010                NO
         CLI   0(R7),C','              ENDING ZONE PRESENT??
         BE    ZONE1030                NO
         LA    R3,COMTZEND             ZONE END
         BAL   R8,CNV0000              CONVERT NUMBER
         CLC   COMTZEND,COMTZBGN       IS BEGIN LARGER THAN END?
         BL    ZONE5000                NO
         LH    R1,COMTZEND             LOAD ENDING POSITION
         LTR   R1,R1                   ZERO??
         BZ    ZONE5000                BAD ZONE
         BCTR  R1,0                    CONVERT TO OFFSET
         STH   R1,COMTZEND             SAVE ENDING OFFSET
         OI    COMTRGRF,$TZEND         ZONE END FLAG
         B     PARM0010
ZONE5000 DS    0H
         OI    COMFLAG,$ERROR          TURN ON ERROR INDICATOR
         MVC   PLINE,MSG0004           MOVE MESSAGE
         BAL   R9,PRT0000              PRINT MESSAGE
         B     PARM0010                CONTINUE PROCESSING PARAMETERS
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*              PROCESS FROM KEY                                       *
*                                                                     *
*---------------------------------------------------------------------*
FKEY0000 DS    0H
         LA    R7,8(R7)                KEY VALUE
         MVI   HEXFLAG,C' '            TURN OFF HEX INDICATOR
         CLC   =C'X''',0(R7)           HEX VALUE??
         BNE   FKEY0010                NO
         MVI   HEXFLAG,$HEX            INDICATE HEX SCAN VALUE
         LA    R7,1(R7)                BYPASS HEX INDICATOR
FKEY0010 DS    0H
         BAL   R8,SCAN5000             BEGIN INTREPRETING KEY VALUE
         MVC   COMFKEY,SCANDATA        MOVE KEY VALUE
         LH    R15,SCANLEN             KEY VALUE LENGTH
         BCTR  R15,0                   MINUS 1 FOR EXECUTES
         CLI   HEXFLAG,$HEX            WAS VALUE HEX??
         BNE   FKEY0020                NO
         TM    SCANLEN+1,X'01'         IS LENGTH ODD??
         BO    FKEY0030                YES
         EX    R15,HEXTRT              TEST DATA
         BNZ   SCAN5120                INVALID HEX DATA
         EX    R15,HEXTR               TRANSLATE FOR PACKING
         SRL   R15,1                   DIVIDE BY 2
         PACK  COMFKEY+00(6),SCANDATA+00(11)
         PACK  COMFKEY+05(6),SCANDATA+10(11)
         PACK  COMFKEY+10(6),SCANDATA+20(11)
         PACK  COMFKEY+15(6),SCANDATA+30(11)
         PACK  COMFKEY+20(6),SCANDATA+40(11)
         PACK  COMFKEY+25(6),SCANDATA+50(11)
         PACK  COMFKEY+30(6),SCANDATA+60(11)
         PACK  COMFKEY+35(6),SCANDATA+70(11)
FKEY0020 DS    0H
         LA    R15,1(R15)              RESTORE FULL LENGTH
         STC   R15,COMFKEYL            SAVE LENGTH OF KEY VALUE
         OI    COMFLAG,$FROMKEY        SCAN IN EFFECT
         B     PARM0010                SEARCH FOR MORE KEYWORDS
FKEY0030 DS    0H
         OI    COMFLAG,$ERROR          TURN ON ERROR INDICATOR
         MVC   PLINE,MSG0001           MOVE ERROR MESSAGE
         BAL   R9,PRT0000              PRINT ERROR MESSAGE
         B     PARM0010                SEARCH FOR MORE KEYWORDS
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*              PROCESS TO KEY                                         *
*                                                                     *
*---------------------------------------------------------------------*
TKEY0000 DS    0H
         LA    R7,6(R7)                KEY VALUE
         MVI   HEXFLAG,C' '            TURN OFF HEX INDICATOR
         CLC   =C'X''',0(R7)           HEX VALUE??
         BNE   TKEY0010                NO
         MVI   HEXFLAG,$HEX            INDICATE HEX SCAN VALUE
         LA    R7,1(R7)                BYPASS HEX INDICATOR
TKEY0010 DS    0H
         BAL   R8,SCAN5000             BEGIN INTREPRETING KEY VALUE
         MVC   COMTKEY,SCANDATA        MOVE KEY VALUE
         LH    R15,SCANLEN             KEY VALUE LENGTH
         BCTR  R15,0                   MINUS 1 FOR EXECUTES
         CLI   HEXFLAG,$HEX            WAS VALUE HEX??
         BNE   TKEY0020                NO
         TM    SCANLEN+1,X'01'         IS LENGTH ODD??
         BO    TKEY0030                YES
         EX    R15,HEXTRT              TEST DATA
         BNZ   SCAN5120                INVALID HEX DATA
         EX    R15,HEXTR               TRANSLATE FOR PACKING
         SRL   R15,1                   DIVIDE BY 2
         PACK  COMTKEY+00(6),SCANDATA+00(11)
         PACK  COMTKEY+05(6),SCANDATA+10(11)
         PACK  COMTKEY+10(6),SCANDATA+20(11)
         PACK  COMTKEY+15(6),SCANDATA+30(11)
         PACK  COMTKEY+20(6),SCANDATA+40(11)
         PACK  COMTKEY+25(6),SCANDATA+50(11)
         PACK  COMTKEY+30(6),SCANDATA+60(11)
         PACK  COMTKEY+35(6),SCANDATA+70(11)
TKEY0020 DS    0H
         LA    R15,1(R15)              RESTORE FULL LENGTH
         STC   R15,COMTKEYL            SAVE LENGTH OF KEY VALUE
         OI    COMFLAG,$TOKEY          TOKEY IN EFFECT
         B     PARM0010                SEARCH FOR MORE KEYWORDS
TKEY0030 DS    0H
         OI    COMFLAG,$ERROR          TURN ON ERROR INDICATOR
         MVC   PLINE,MSG0001           MOVE ERROR MESSAGE
         BAL   R9,PRT0000              PRINT ERROR MESSAGE
         B     PARM0010                SEARCH FOR MORE KEYWORDS
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*           CONVERT CHARACTER TO BINARY                               *
*                                                                     *
*---------------------------------------------------------------------*
CNV0000  DS    0H
         TRT   0(12,R7),NUMTAB         SCAN NUMBER
         BZ    CNV0030                 BAD NUMBER
         CLI   0(R1),C' '              STOP ON A BLANK??
         BE    CNV0010                 YES
         CLI   0(R1),C','              STOP ON A COMMA??
         BNE   CNV0030                 NO .. INVALID NUMERIC DATA
         XC    0(2,R3),0(R3)           ZERO RESULT
CNV0010  DS    0H
         SR    R1,R7                   COMPUTE LENGTH OF NUMBER
         BZ    CNV0020                 NUMBER OMITTED
         BCTR  R1,0                    REDUCE BY 1 FOR EXECUTES
         MVC   CNVBEGIN,CNVBEGIN-1     INITIALIZE
         LA    R2,CNVBEGIN+10          CONVERT BEGIN
         SR    R2,R1                   COMPUTE STARTING ADDRESS
         EX    R1,CNVMOVE              MOVE NUMBER TO STARTING
         PACK  DWORD,CNVBEGIN          PACK THE VALUE
         CVB   R2,DWORD                CONVERT IT TO BINARY
         STH   R2,0(R3)                SAVE AMOUNT
         LA    R7,2(R1,R7)             NEXT PARAMETER
         BR    R8                      RETURN
CNV0020  DS    0H
         LA    R7,1(R7)                NEXT FIELD
         BR    R8                      PROCESSING COMPLETE
CNV0030  DS    0H
         MVC   PLINE,MSG0005           MOVE MESSAGE
         BAL   R9,PRT0000              PRINT MESSAGE
         B     PARM0010                CONTINUE PROCESSING PARAMETERS
CNVMOVE  MVC   0(0,R2),0(R7)           MOVE FOR PACKING
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*           PRINTING/HEADING ROUTINES                                 *
*                                                                     *
*---------------------------------------------------------------------*
PRT0000  DS    0H
         LA    R2,PRINTER              PRINT DCB
         PUT   (R2),PRCC               PRINT
         AP    COMLINE,P1              ADD 1 TO LINE COUNTER
         CLI   PRCC,C' '               SINGLE SPACE??
         BE    PRT0010                 YES
         AP    COMLINE,P1              ADD 1 TO LINE COUNTER
         CLI   PRCC,C'0'               DOUBLE SPACE??
         BE    PRT0010                 YES
         AP    COMLINE,P1              ADD 1 TO LINE COUNTER
PRT0010  DS    0H
         CP    COMLINE,P65             TIME FOR HEADINGS?
         BLR   R9                      NO
HEADINGS DS    0H
         AP    COMPAGE,P1              ADD 1 TO PAGE COUNT
         MVC   PRPAGE,=X'402020202120' EDIT WORD
         ED    PRPAGE,COMPAGE          EDIT PAGE NUMBER
         LA    R2,PRINTER              PRINT DCB
         PUT   (R2),HEADING            PRINT PAGE HEADING
         PUT   (R2),HELPHEAD           PRINT 'HELP' HEADING
         ZAP   COMLINE,P3              RESET LINE COUNT
         BR    R9                      RETURN
CLSE0000 DS    0H
         LA    R2,SYSIN                CONTROL FILE DCB
         CLOSE (R2)                    CLOSE SYSIN
PHSE0000 DS    0H
         L     R15,VPH1                ADDRESS OF NEXT PHASE
         BR    R15                     CONTINUE WITH NEXT PHASE
HEXTRT   TRT   SCANDATA(0),HEXTAB1     TEST HEX DATA
HEXTR    TR    SCANDATA(0),HEXTAB2     TRANSLATE DATA FOR PACKING
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*                     WORKAREAS                                       *
*                                                                     *
*---------------------------------------------------------------------*
DWORD    DC    D'0'                    FOR CVB'S
VCOMM    DC    V(VSAMCOMM)             ADDRESS OF 'COMMON'
VPH1     DC    V(VSAMPH01)             ADDRESS OF PHASE '01'
SCANLEN  DC    H'0'                    LENGTH OF SCAN/TRIGGER/TITLE
         DC    C' '
SCANDATA DC    CL80' '                 SCAN/TRIGGER/ OR TITLE DATA
P0       DC    P'0'
P1       DC    P'1'
P3       DC    P'3'
P65      DC    P'65'
HEXFLAG  DC    X'00'
HEX0F0F  DC    8X'0F'
HEXCHAR  DC    C'0123456789ABCDEF'
         DC    C'0'
CNVBEGIN DC    CL11'0'                 CONVERSION BEGINNING
         DC    C' '
PLINE    DS    0CL121
PRCC     DC    C' '                    CARRIAGE CONTROL
PAREA    DC    CL120' '                PRINT AREA
CARDAREA DC    CL80' '                 CARD FILE I/O AREA
HEADING  DS    0C
         DC    C'1'
         DC    CL109'       VSAM UTILITY CONTROL STATEMENTS'
         DC    C'PAGE '
PRPAGE   DC    CL6' '
HELPHEAD DC    CL121'0 FOR A LIST OF PARAMETERS AND THEIR USAGE SPECIFY+
                ''HELP'' ON A CONTROL STATEMENT'
         LTORG
MSG0001  DC    CL121'  HEX STRING HAS ODD NUMBER OF CHARACTERS'
MSG0002  DC    CL121'  NO OPEN QUOTE FOR SCAN, TRIGGER, OR TITLE'
MSG0003  DC    CL121'  NO CLOSING QUOTE FOR SCAN, TRIGGER, OR TITLE'
MSG0004  DC    CL121'  INVALID ZONE FOR SCAN OR TRIGGER'
MSG0005  DC    CL121'  INVALID NUMERIC VALUE'
MSG0006  DC    CL121'  UNKNOWN PARAMETER'
MSG0007  DC    CL121'  INVALID ZONE FOR SCAN OR TRIGGER'
MSG0008  DC    CL121'  INVALID HEX DATA'
MSG0009  DC    CL121'  INVALID SCANCTRL VALUE (MUST BE ''1 AND 2'' OR '+
               '1 OR 2'')'
MSG0010  DS    0CL121
         DC    CL15'  RETURN CODE '
VSAMRC   DC    CL04' '
         DC    CL17' FROM VSAM MACRO '
VSAMMAC  DC    CL08' '
         DC    CL77', JOB WILL BE ABORTED'
*---------------------------------------------------------------------*
*                                                                     *
*                                                                     *
*                                                                     *
*---------------------------------------------------------------------*
NUMTAB   DC    256X'FF'
         ORG   NUMTAB+C'0'
         DC    10X'00'
         ORG   NUMTAB+256
HEXTAB1  DC    256X'FF'
         ORG   HEXTAB1+C'A'
         DC    06X'00'
         ORG   HEXTAB1+C'0'
         DC    10X'00'
         ORG   HEXTAB1+256
HEXTAB2  DC    256X'00'
         ORG   HEXTAB2+C'A'
         DC    X'AABBCCDDEEFF'
         ORG   HEXTAB2+C'0'
         DC    X'00112233445566778899'
         ORG   HEXTAB2+256
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*                     DSECTS                                          *
*                                                                     *
*---------------------------------------------------------------------*
VSAMCOMM DSECT
         VSAMCOMM
         SPACE 2
         PRINT NOGEN
         DCBD  DSORG=PS
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*                     REGISTER EQUATES                                *
*                                                                     *
*---------------------------------------------------------------------*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END   VSAMPH00
./ ADD NAME=VSAMPH01 0100-02291-02291-0123-00401-00401-00000-RLRICE
*---------------------------------------------------------------------*
*                                                                     *
*           THIS PHASE:                                               *
*              1) CROSS CHECKS PARAMETERS                             *
*              2) INITIALIZES SCAN AND TRIGGER TABLES                 *
*              3) PASSES CONTROL TO EITHER THE 'HELP' MODULE (PH03)   *
*                 OR THE READ/PRINT MODULE (PH02)                     *
*                                                                     *
*---------------------------------------------------------------------*
VSAMPH01 CSECT
         USING VSAMPH01,R15            SPECIFY CSECT BASE
         ID                            DATE AND TIME COMPILED
         LR    R10,R15                 COPY BASE ADDRESS
         DROP  R15                     DROP PREVIOUS BASE
         USING VSAMPH01,R10,R11        RESUME WITH NEW BASE
         USING VSAMCOMM,R12            DEFINE COMMON BASE
         LA    R11,2048(R10)           INITIALIZE 2ND BASE REGISTER
         LA    R11,2048(R11)           INITIALIZE 2ND BASE REGISTER
         CLI   COMHELP,$HELP           HELP REQUESTED??
         BE    HELP0000                YES
         TM    COMFLAG,$100            FIRST100 REQUESTED??
         BO    L8080000                YES
*---------------------------------------------------------------------*
*                                                                     *
*           CROSS CHECK SCAN AND ZONE PARAMETERS                      *
*                                                                     *
*---------------------------------------------------------------------*
TEST0000 DS    0H
         TM    COMSCN1F,$SCAN1         IS SCAN 1 IN EFFECT??            WMW02330
         BO    TEST0020                YES                              WMW08140
         TM    COMSCN1F,$Z1BGN         IS ZONE BEGIN IN EFFECT??        WMW08150
         BO    TEST0010                YES .. NOT ALLOWED               WMW08160
         TM    COMSCN1F,$Z1END         IS ZONE END IN EFFECT??          WMW08180
         BNO   TEST0020                NO                               WMW08190
TEST0010 DS    0H                                                       WMW08200
         MVC   PLINE,MSG0001           MOVE MESSAGE                     WMW08210
         BAL   R9,PRT0000              PRINT IT                         WMW08220
         OI    COMFLAG,$ERROR          SET ERROR INDICATOR              WMW08390
TEST0020 DS    0H                                                       WMW08400
         TM    COMSCN2F,$SCAN2         IS SCAN 2 IN EFFECT??            WMW02330
         BO    TEST0040                YES                              WMW08140
         TM    COMSCN2F,$Z2BGN         IS ZONE2 BEGIN IN EFFECT??       WMW08150
         BO    TEST0030                YES .. NOT ALLOWED               WMW08160
         TM    COMSCN2F,$Z2END         IS ZONE2 END IN EFFECT??         WMW08180
         BNO   TEST0040                NO                               WMW08190
TEST0030 DS    0H                                                       WMW08200
         MVC   PLINE,MSG0002           MOVE MESSAGE                     WMW08210
         BAL   R9,PRT0000              PRINT IT                         WMW08220
         OI    COMFLAG,$ERROR          SET ERROR INDICATOR              WMW08390
TEST0040 DS    0H                                                       WMW08400
         TM    COMTRGRF,$TRIGGER       IS TRIGGER IN EFFECT??           WMW02330
         BO    TEST0060                YES                              WMW08140
         TM    COMTRGRF,$TZBGN         IS TRIGGER ZONE IN EFFECT??      WMW08150
         BO    TEST0050                YES .. NOT ALLOWED               WMW08160
         TM    COMTRGRF,$TZEND         IS TRIGGER ZONE IN EFFECT??      WMW08180
         BNO   TEST0060                NO                               WMW08190
TEST0050 DS    0H                                                       WMW08200
         MVC   PLINE,MSG0003           MOVE MESSAGE                     WMW08210
         BAL   R9,PRT0000              PRINT IT                         WMW08220
         OI    COMFLAG,$ERROR          SET ERROR INDICATOR              WMW08390
*---------------------------------------------------------------------*
*                                                                     *
*           CROSS CHECK SCANCTRL WITH SCAN 1 AND SCAN 2               *
*                                                                     *
*---------------------------------------------------------------------*
TEST0060 DS    0H                                                       WMW08400
         TM    COMFLAG,$SCTRL          SCAN CONTROL SPECIFIED??
         BNO   TEST0080                NO
         TM    COMSCN1F,$SCAN1         WAS SCAN 1 SPECIFIED??
         BNO   TEST0070                NO .. NOT ALLOWED
         TM    COMSCN2F,$SCAN2         WAS SCAN 2 SPECIFIED??
         BO    TEST0080                YES
TEST0070 DS    0H                                                       WMW08200
         MVC   PLINE,MSG0004           MOVE MESSAGE                     WMW08210
         BAL   R9,PRT0000              PRINT IT                         WMW08220
         OI    COMFLAG,$ERROR          SET ERROR INDICATOR              WMW08390
*---------------------------------------------------------------------*
*                                                                     *
*           CHECK ZONE(S) AGAINST MAXIMUM RECORD LENGTH               *
*                                                                     *
*---------------------------------------------------------------------*
TEST0080 DS    0H                                                       WMW08200
         TM    COMSCN1F,$SCAN1         SCAN1 IN EFFECT??
         BNO   TEST0100                NO
         TM    COMSCN1F,$Z1BGN         ZONE BEGIN GIVEN??
         BNO   TEST0090                NO
         CLC   COMZ1BGN,COMLRECL+2     TOO LARGE??
         BNH   TEST0090                NO
         MVC   PLINE,MSG0005           MOVE MESSAGE                     WMW08210
         BAL   R9,PRT0000              PRINT IT                         WMW08220
         OI    COMFLAG,$ERROR          SET ERROR INDICATOR              WMW08390
TEST0090 DS    0H
         TM    COMSCN1F,$Z1END         ZONE END GIVEN??
         BNO   TEST0100                NO
         CLC   COMZ1END,COMLRECL+2     TOO LARGE??
         BNH   TEST0100                NO
         MVC   PLINE,MSG0006           MOVE MESSAGE                     WMW08210
         BAL   R9,PRT0000              PRINT IT                         WMW08220
         OI    COMFLAG,$ERROR          SET ERROR INDICATOR              WMW08390
TEST0100 DS    0H
         TM    COMSCN2F,$SCAN2         SCAN2 IN EFFECT??
         BNO   TEST0120                NO
         TM    COMSCN2F,$Z2BGN         ZONE BEGIN GIVEN??
         BNO   TEST0110                NO
         CLC   COMZ2BGN,COMLRECL+2     TOO LARGE??
         BNH   TEST0110                NO
         MVC   PLINE,MSG0007           MOVE MESSAGE                     WMW08210
         BAL   R9,PRT0000              PRINT IT                         WMW08220
         OI    COMFLAG,$ERROR          SET ERROR INDICATOR              WMW08390
TEST0110 DS    0H
         TM    COMSCN2F,$Z2END         ZONE END GIVEN??
         BNO   TEST0120                NO
         CLC   COMZ2END,COMLRECL+2     TOO LARGE??
         BNH   TEST0120                NO
         MVC   PLINE,MSG0008           MOVE MESSAGE                     WMW08210
         BAL   R9,PRT0000              PRINT IT                         WMW08220
         OI    COMFLAG,$ERROR          SET ERROR INDICATOR              WMW08390
TEST0120 DS    0H
         TM    COMTRGRF,$TRIGGER       TRIGGER IN EFFECT??
         BNO   TEST0140                NO
         TM    COMTRGRF,$TZBGN         ZONE BEGIN GIVEN??
         BNO   TEST0130                NO
         CLC   COMTZBGN,COMLRECL+2     TOO LARGE??
         BNH   TEST0130                NO
         MVC   PLINE,MSG0009           MOVE MESSAGE                     WMW08210
         BAL   R9,PRT0000              PRINT IT                         WMW08220
         OI    COMFLAG,$ERROR          SET ERROR INDICATOR              WMW08390
TEST0130 DS    0H
         TM    COMTRGRF,$TZEND         ZONE END GIVEN??
         BNO   TEST0140                NO
         CLC   COMTZEND,COMLRECL+2     TOO LARGE??
         BNH   TEST0150                NO
         MVC   PLINE,MSG0010           MOVE MESSAGE                     WMW08210
         BAL   R9,PRT0000              PRINT IT                         WMW08220
         OI    COMFLAG,$ERROR          SET ERROR INDICATOR              WMW08390
*---------------------------------------------------------------------*
*                                                                     *
*           CHECK NOHEX AGAINST SPACING                               *
*                                                                     *
*---------------------------------------------------------------------*
TEST0140 DS    0H
         CLI   COMHEX,$HEX             PRINT HEX??
         BNE   TEST0150                NO
         CLI   COMSPACE,$SINGLE        SINGLE SPACING REQUESTED??
         BNE   TEST0150                NO
         MVC   PLINE,MSG0014           MOVE MESSAGE                     WMW08210
         BAL   R9,PRT0000              PRINT IT                         WMW08220
         OI    COMFLAG,$ERROR          SET ERROR INDICATOR              WMW08390
*---------------------------------------------------------------------*
*                                                                     *
*           CHECK ZONE WIDTH'S AGAINST SCAN ARGUEMENTS                *
*                                                                     *
*---------------------------------------------------------------------*
TEST0150 DS    0H
         TM    COMSCN1F,$SCAN1         SCAN 1 IN EFFECT??
         BNO   TEST0170                NO
         TM    COMSCN1F,$Z1BGN+$Z1END  USING START AND END??
         BNO   TEST0160                NO
         LH    R1,COMZ1END             END OF ZONE
         SH    R1,COMZ1BGN             MINUS START OF ZONE
         LA    R1,1(R1)                FULL NUMBER OF COLUMNS
         CH    R1,COMSCN1L             ZONE TOO SMALL??
         BNL   TEST0160                NO
         MVC   PLINE,MSG0011           MOVE MESSAGE                     WMW08210
         BAL   R9,PRT0000              PRINT IT                         WMW08220
         OI    COMFLAG,$ERROR          SET ERROR INDICATOR              WMW08390
         B     TEST0170                CHECK SCAN 2
TEST0160 DS    0H
         LH    R3,COMSCN1L             LENGTH OF STRING
         XLOC  TYPE=INIT,              INITIALIZE SCAN                 +
               STRING=COMSCAN1,        ARGUEMENT                       +
               STRLEN=(R3),            STRING LENGTH                   +
               WORK=COMSCN1T,          TRANSLATE TABLE FOR SCAN 1      +
               TABLE=FOCTABLE,         FREQUENCY OF OCCURRENCE TABLE   +
               MF=(E,COMSCN1P)         SCAN 1 PARAMETER LIST
         CLI   COMSCN1P+(XLOCSTAT-XLOCLIST),$XLOCOK    SUCCESSFUL??
         BE    TEST0170                YES
         DC    H'0'
TEST0170 DS    0H
         TM    COMSCN2F,$SCAN2         SCAN 2 IN EFFECT??
         BNO   TEST0190                NO
         TM    COMSCN2F,$Z2BGN+$Z2END  USING START AND END??
         BNO   TEST0180                NO
         LH    R1,COMZ2END             END OF ZONE
         SH    R1,COMZ2BGN             MINUS START OF ZONE
         LA    R1,1(R1)                FULL NUMBER OF COLUMNS
         CH    R1,COMSCN2L             ZONE TOO SMALL??
         BNL   TEST0180                NO
         MVC   PLINE,MSG0012           MOVE MESSAGE                     WMW08210
         BAL   R9,PRT0000              PRINT IT                         WMW08220
         OI    COMFLAG,$ERROR          SET ERROR INDICATOR              WMW08390
         B     TEST0190                CHECK TRIGGER
TEST0180 DS    0H
         LH    R3,COMSCN2L             LENGTH OF STRING
         XLOC  TYPE=INIT,              INITIALIZE SCAN                 +
               STRING=COMSCAN2,        ARGUEMENT                       +
               STRLEN=(R3),            STRING LENGTH                   +
               WORK=COMSCN2T,          TRANSLATE TABLE FOR SCAN 2      +
               TABLE=FOCTABLE,         FREQUENCY OF OCCURRENCE TABLE   +
               MF=(E,COMSCN2P)         SCAN 2 PARAMETER LIST
         CLI   COMSCN2P+(XLOCSTAT-XLOCLIST),$XLOCOK  SUCCESSFUL??
         BE    TEST0190                YES
         DC    H'0'
TEST0190 DS    0H
         TM    COMTRGRF,$TRIGGER       TRIGGER IN EFFECT??
         BNO   TEST0210                NO
         TM    COMTRGRF,$TZBGN+$TZEND  USING START AND END??
         BNO   TEST0200                NO
         LH    R1,COMTZEND             END OF ZONE
         SH    R1,COMTZBGN             MINUS START OF ZONE
         LA    R1,1(R1)                FULL NUMBER OF COLUMNS
         CH    R1,COMTRGL              ZONE TOO SMALL??
         BNL   TEST0200                NO
         MVC   PLINE,MSG0013           MOVE MESSAGE                     WMW08210
         BAL   R9,PRT0000              PRINT IT                         WMW08220
         OI    COMFLAG,$ERROR          SET ERROR INDICATOR              WMW08390
         B     TEST0190                CHECK TRIGGER
TEST0200 DS    0H
         LH    R3,COMTRGL              LENGTH OF STRING
         XLOC  TYPE=INIT,              INITIALIZE SCAN                 +
               STRING=COMTRGR,         ARGUEMENT                       +
               STRLEN=(R3),            STRING LENGTH                   +
               WORK=COMTRGRT,          TRANSLATE TABLE FOR TRIGGER     +
               TABLE=FOCTABLE,         FREQUENCY OF OCCURRENCE TABLE   +
               MF=(E,COMTRGRP)         TRIGGER PARAMETER LIST
         CLI   COMTRGRP+(XLOCSTAT-XLOCLIST),$XLOCOK   SUCCESSFUL??
         BE    TEST0210                YES
         DC    H'0'
*---------------------------------------------------------------------*
*                                                                     *
*           CHECK FROMKEY AND TO KEY AGAIN DATASET ORGANIZATION       *
*           CHECK FROMKEY LENGTH AND TOKEY LENGTH AGAINST FILE'S      *
*           KEY LENGTH.                                               *
*                                                                     *
*---------------------------------------------------------------------*
TEST0210 DS    0H
         TM    COMFLAG,$FROMKEY        'FROM KEY' IN EFFECT??
         BNO   TEST0230                NO
         TM    COMACBF,$KSDS           IS THIS A KSDS DATASET??
         BO    TEST0220                YES
         MVC   PLINE,MSG0015           MOVE MESSAGE
         OI    COMFLAG,$ERROR          SET ERROR FLAG
         BAL   R9,PRT0000              PRINT MESSAGE
TEST0220 DS    0H
         SR    R1,R1                   CLEAR REG 1
         IC    R1,COMFKEYL             KEY LENGTH
         C     R1,COMKEYL              GREATER THAN ACB KEY LENGTH??
         BNH   TEST0230                NO
         MVC   PLINE,MSG0016           MOVE MESSAGE
         OI    COMFLAG,$ERROR          SET ERROR FLAG
         BAL   R9,PRT0000              PRINT MESSAGE
TEST0230 DS    0H
         TM    COMFLAG,$TOKEY          'TO KEY' IN EFFECT??
         BNO   TEST0250                NO
         TM    COMACBF,$KSDS           IS THIS A KSDS DATASET??
         BO    TEST0240                YES
         MVC   PLINE,MSG0015           MOVE MESSAGE
         OI    COMFLAG,$ERROR          SET ERROR FLAG
         BAL   R9,PRT0000              PRINT MESSAGE
TEST0240 DS    0H
         SR    R1,R1                   CLEAR REG 1
         IC    R1,COMTKEYL             KEY LENGTH
         C     R1,COMKEYL              GREATER THAN ACB KEY LENGTH??
         BNH   TEST0250                NO
         MVC   PLINE,MSG0017           MOVE MESSAGE
         OI    COMFLAG,$ERROR          SET ERROR FLAG
         BAL   R9,PRT0000              PRINT MESSAGE
*---------------------------------------------------------------------*
*                                                                     *
*       EITHER ABORT DUE TO ERRORS OR CONTINUE WITH NEXT PHASE        *
*                                                                     *
*---------------------------------------------------------------------*
TEST0250 DS    0H
         TM    COMFLAG,$ERROR          HAS AN ERROR OCCURRED??
         BNO   PHSE0000                NO
         MVC   PLINE,MSG0020           MOVE MESSAGE                     WMW08210
         BAL   R9,PRT0000              PRINT IT                         WMW08220
         B     PHSE0000                GO TO NEXT PROGRAM PHASE
HELP0000 DS    0H
         MVC   PLINE,MSG0030           MOVE MESSAGE
         BAL   R9,PRT0000              PRINT IT
         B     PHSE0010                GO TO NEXT PROGRAM PHASE
L8080000 DS    0H
         MVC   PLINE,MSG0040           MOVE MESSAGE
         BAL   R9,PRT0000              PRINT IT
         MVC   PLINE,MSG0041           MOVE MESSAGE
         BAL   R9,PRT0000              PRINT IT
         MVC   PLINE,MSG0042           MOVE MESSAGE
         BAL   R9,PRT0000              PRINT IT
         B     TEST0000                PERFORM NORMAL CHECKING
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*           PRINTING/HEADING ROUTINES                                 *
*                                                                     *
*---------------------------------------------------------------------*
PRT0000  DS    0H
         LA    R2,PRINTER
         PUT   (R2),PRCC               PRINT
         AP    COMLINE,P1              ADD 1 TO LINE COUNTER
         CLI   PRCC,C' '               SINGLE SPACE??
         BE    PRT0010                 YES
         AP    COMLINE,P1              ADD 1 TO LINE COUNTER
         CLI   PRCC,C'0'               DOUBLE SPACE??
         BE    PRT0010                 YES
         AP    COMLINE,P1              ADD 1 TO LINE COUNTER
PRT0010  DS    0H
         CP    COMLINE,P60             TIME FOR HEADINGS?
         BLR   R9                      NO
HEADINGS DS    0H
         AP    COMPAGE,P1              ADD 1 TO PAGE COUNT
         MVC   PRPAGE,=X'402020202120' EDIT WORD
         ED    PRPAGE,COMPAGE          EDIT PAGE NUMBER
         LA    R2,PRINTER
         PUT   (R2),HEADING            PRINT
         ZAP   COMLINE,P0              RESET LINE COUNT
         BR    R9                      RETURN
PHSE0000 DS    0H
         L     R15,VPH2                ADDRESS OF NEXT PHASE
         BR    R15                     CONTINUE WITH NEXT PHASE
PHSE0010 DS    0H
         L     R15,VPH3                ADDRESS OF NEXT PHASE
         BR    R15                     CONTINUE WITH NEXT PHASE
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*                     WORKAREAS                                       *
*                                                                     *
*---------------------------------------------------------------------*
DWORD    DC    D'0'                    FOR CVB'S
VPH2     DC    V(VSAMPH02)             ADDRESS OF PHASE '02'
VPH3     DC    V(VSAMPH03)             ADDRESS OF PHASE '03'
P0       DC    P'0'
P1       DC    P'1'
P60      DC    P'60'
FOCTABLE XLOC  TYPE=TABLE               FREQUENCY OF OCCURRENCE TABLE
PLINE    DS    0CL121
PRCC     DC    C' '                    CARRIAGE CONTROL
PAREA    DC    CL120' '                PRINT AREA
HEADING  DS    0C
         DC    C'1'
         DC    CL109'       VSAM UTILITY CONTROL STATEMENTS'
         DC    C'PAGE '
PRPAGE   DC    CL6' '
MSG0001  DC    CL121'  ZONE OR ZONE1 SPECIFIED WITHOUT SCAN OR SCAN1'
MSG0002  DC    CL121'  ZONE2 SPECIFIED WITHOUT SCAN2'
MSG0003  DC    CL121'  TZONE SPECIFIED WITHOUT TRIGGER'
MSG0004  DC    CL121'  SCANCTRL NOT ALLOWED WITHOUT SCAN 1 AND SCAN 2'
MSG0005  DC    CL121'  ZONE1 BEGIN IS LARGER THAN RECORD LENGTH'
MSG0006  DC    CL121'  ZONE1 END IS LARGER THAN RECORD LENGTH'
MSG0007  DC    CL121'  ZONE2 BEGIN IS LARGER THAN RECORD LENGTH'
MSG0008  DC    CL121'  ZONE2 END IS LARGER THAN RECORD LENGTH'
MSG0009  DC    CL121'  TZONE BEGIN IS LARGER THAN RECORD LENGTH'
MSG0010  DC    CL121'  TZONE END IS LARGER THAN RECORD LENGTH'
MSG0011  DC    CL121'  ZONE SMALLER THAN SCAN ARGUEMENT LENGTH'
MSG0012  DC    CL121'  ZONE2 SMALLER THAN SCAN2 ARGUEMENT LENGTH'
MSG0013  DC    CL121'  TZONE SMALLER THAN TRIGGER ARGUEMENT LENGTH'
MSG0014  DC    CL121'  SINGLE SPACING ALLOWED ONLY WITH ''NOHEX'''
MSG0015  DC    CL121'  FROMKEY OR TOKEY SPECIFIED FOR NON-KSDS DATASET'
MSG0016  DC    CL121'  FROMKEY VALUE LONGER THAN DATASET KEY LENGTH'
MSG0017  DC    CL121'  TOKEY VALUE LONGER THAN DATASET KEY LENGTH'
MSG0020  DC    CL121'0 ***** ERRORS DETECTED, EXECUTION ABORTED *****'
MSG0030  DC    CL121'0 ***** HELP REQUESTED, ALL OTHER PARAMETERS IGNOR+
               ED *****'
MSG0040  DC    CL121'0 ***** FIRST100 REQUESTED, NOHEX AND SINGLE SPACI+
               NG FORCED'
MSG0041  DC    CL121'  RECORDS WILL BE TRUNCATED AT 100 CHARACTERS'
MSG0042  DC    CL121'  LOGICAL RECORD NUMBER AND RECORD LENGTHS WILL BE+
                SUPPRESSED'
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*                     DSECTS                                          *
*                                                                     *
*---------------------------------------------------------------------*
VSAMCOMM DSECT
         VSAMCOMM
         EJECT
         XLOC TYPE=DSECT
*---------------------------------------------------------------------*
*                                                                     *
*                     REGISTER EQUATES                                *
*                                                                     *
*---------------------------------------------------------------------*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END   VSAMPH01
./ ADD NAME=VSAMPH02 0100-02291-02291-0123-00610-00610-00000-RLRICE
VSAMPH02 CSECT
         USING VSAMPH02,R15            SPECIFY CSECT BASE
         ID                            DATE AND TIME COMPILED
         PRINT NOGEN
         LR    R11,R15                 COPY BASE ADDRESS
         DROP  R15                     DROP PREVIOUS BASE
         USING VSAMPH02,R11            RESUME WITH NEW BASE
         USING VSAMCOMM,R12            DEFINE COMMON BASE
         TM    COMFLAG,$ERROR          ERROR FLAG ON??
         BO    EXIT0010                YES, EXIT
         ZAP   COMPAGE,P0              RESET PAGE NUMBER
         LA    R2,VSAMFILE             INPUT FILE ACB
         MVC   VSAMFUNC,=CL8'MOD RPL'  LAST VSAM FUNCTION
         MODCB RPL=READRPL,            MODIFY READ RPL                 +
               ACB=(R2)                .. INSERT ACB ADDRESS
         LTR   R15,R15                 SUCCESSFUL??
         BNZ   VERR0000                NO
         MVC   VSAMFUNC,=CL8'CLOSE 1'  LAST VSAM FUNCTION
         LA    R2,VSAMFILE             INPUT FILE ACB
         CLOSE ((R2))                  CLOSE INPUT ACB
         LTR   R15,R15                 SUCCESSFUL??
         BNZ   VERR0000                NO
         MVC   VSAMFUNC,=CL8'MOD ACB'  LAST VSAM FUNCTION
         MODCB ACB=(R2),               MODIFY ACB                      +
               EXLST=PH02XLST          .. INSERT PHASE 2 EXIT LIST
         LTR   R15,R15                 SUCCESSFUL??
         BNZ   VERR0000                NO
         TM    COMACBF,$ESDS           IS THIS AN ESDS DATASET??
         BNO   INIT0005                NO
         MODCB ACB=(R2),               MODIFY ACB                      +
               MACRF=(ADR)             .. CHANGE TO ADDRESSED MODE
         LTR   R15,R15                 SUCCESSFUL??
         BNZ   VERR0000                NO
         MODCB RPL=READRPL,            MODIFY RPL                      +
               OPTCD=(ADR,FWD,SEQ,LOC) .. ADDRESSED/FORWARD/SEQUENTIAL
         LTR   R15,R15                 SUCCESSFUL??
         BNZ   VERR0000                NO
INIT0005 DS    0H
         MVC   VSAMFUNC,=CL8'OPEN 1'   LAST VSAM FUNCTION
         OPEN  ((R2))                  OPEN ACB
         LTR   R15,R15                 SUCCESSFUL??
         BNZ   VERR0000                NO
INIT0010 DS    0H
         MVC   PRDSORG,=C'KSDS'        INDICATE DATASET IS KSDS
         TM    COMACBF,$KSDS           IS THIS A KSDS??
         BO    ATTR0010                YES
         MVC   PRDSORG,=C'RRDS'        INDICATE DATASET IS RRDS
         TM    COMACBF,$RRDS           IS THIS AN RRDS??
         BO    ATTR0010                YES
         MVC   PRDSORG,=C'ESDS'        INDICATE DATASET IS ESDS
ATTR0010 DS    0H
         L     R1,COMLRECL             DATASET RECORD LENGTH
         CVD   R1,DWORD                CONVERT TO DECIMAL
         ED    PRLRECL,DWORD+5         EDIT LRECL
         TM    COMACBF,$KSDS           IS DATSET KSDS??
         BNO   ATTR0020                NO
         MVC   PRKEYLH,=C'KEY LENGTH'  INSERT KEY LENGTH HEADING
         MVC   PRRKPH,=C'RELATIVE KEY POSITION'
         MVC   PRKEYL,=X'402020202120' INSERT EDIT WORD
         MVC   PRRKP,=X'402020202120'  INSERT EDIT WORD
         L     R1,COMKEYL              KEY LENGTH
         CVD   R1,DWORD                CONVERT TO DECIMAL
         ED    PRKEYL,DWORD+5          EDIT KEY LENGTH
         L     R1,COMRKP               RELATIVE KEY POSITION
         CVD   R1,DWORD                CONVERT TO DECIMAL
         ED    PRRKP,DWORD+5           EDIT RELATIVE KEY POSITION
ATTR0020 DS    0H
         BAL   R10,HEADINGS            PRINT HEADINGS
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*           PROCESS FROM KEY IF ENTERED                               *
*                                                                     *
*---------------------------------------------------------------------*
         TM    COMFLAG,$FROMKEY        USING FROM KEY??
         BNO   SKIP0000                NO
         LA    R2,COMFKEY              FROM KEY DATA
         SR    R3,R3                   CLEAR FOR LENGTH
         IC    R3,COMFKEYL             FROM KEY LENGTH
         MVC   VSAMFUNC,=CL8'MODCB 1'  CURRENT FUNCTION
         MODCB RPL=READRPL,            MODIFY RPL                      +
               ARG=(R2),               .. KEY                          +
               KEYLEN=(R3),            .. KEY LENGTH                   +
               OPTCD=(KEY,DIR,SYN,NUP,GEN,KGE,LOC)
         LTR   R15,R15                 MODIFY SUCCESSFUL??
         BNZ   VERR0000                NO
         MVC   VSAMFUNC,=CL8'POINT'    CURRENT FUNCTION
         POINT RPL=READRPL             ISSUE POINT TO POSITION
         LTR   R15,R15                 SUCCESSFUL??
         BNZ   VERR0000                NO
         MVC   VSAMFUNC,=CL8'MODCB 2'  CURRENT FUNCTION
         MODCB RPL=READRPL,            MODIFY RPL                      +
               OPTCD=(SEQ,FWD,LOC)     .. SWITCH TO FORWARD SEQUENTIAL
         LTR   R15,R15                 MODIFY SUCCESSFUL??
         BNZ   VERR0000                NO
*---------------------------------------------------------------------*
*                                                                     *
*           PROCESS SKIP IF REQUESTED                                 *
*                                                                     *
*---------------------------------------------------------------------*
SKIP0000 DS    0H
         TM    COMFLAG,$SKIP           SKIP REQUESTED??
         BNO   TRGR0000                NO
         SR    R3,R3                   CLEAR REGISTER
         ICM   R3,3,COMSKIP            NUMBER OF RECORDS TO SKIP
         BZ    TRGR0000                NO RECORDS TO SKIP
SKIP0010 DS    0H
         BAL   R9,READ0000             READ A RECORD
         BCT   R3,SKIP0010             LOOP REQUESTED NUMBER OF TIMES
*---------------------------------------------------------------------*
*                                                                     *
*           PROCESS TRIGGER IF REQUESTED                              *
*                                                                     *
*---------------------------------------------------------------------*
TRGR0000 DS    0H
         TM    COMTRGRF,$TRIGGER       TRIGGER REQUESTED??
         BNO   PROC0000                NO
TRGR0010 DS    0H
         BAL   R9,READ0000             READ A RECORD
         CLC   COMTZBGN,RECLEN+2       IS RECORD TOO SMALL??
         BH    TRGR0010                YES
         SR    R3,R3                   ASSUME NO STARTING OFFSET
         TM    COMTRGRF,$TZBGN         ZONE BEGIN GIVEN??
         BNO   TRGR0020                NO
         LH    R3,COMTZBGN             ZONE BEGIN OFFSET
         BCTR  R3,0                    RELATIVE TO ZERO
TRGR0020 DS    0H
         LH    R4,RECLEN+2             RECORD LENGTH
         TM    COMTRGRF,$TZEND         ZONE END REQUESTED??
         BNO   TRGR0030                NO
         CH    R4,COMTZEND             RECORD LONGER THAN ZONE??
         BL    TRGR0030                NO
         LH    R4,COMTZEND             LIMIT SEARCH TO ZONE LENGTH
TRGR0030 DS    0H
         L     R5,RECDADDR             RECORD ADDRESS
         AR    R5,R3                   PLUS ZONE BEGIN
         SR    R4,R3                   MINUS ZONE BEGIN
         LH    R6,COMTRGL              STRING LENGTH
         XLOC  RECORD=(R5),            RECORD ADDRESS                  +
               RECLEN=(R4),            SCAN LENGTH                     +
               STRING=COMTRGR,         SEARCH STRING                   +
               STRLEN=(R6),            SEARCH STRING LENGTH            +
               ERROR=TRGR0010,         STRING NOT FOUND                +
               MF=(E,COMTRGRP)         TRIGGER PARAMETER LIST
         B     PROC0020                BYPASS READ IN 'PROC'
*---------------------------------------------------------------------*
*                                                                     *
*           MAIN READ/PRINT PROCEDURE                                 *
*                                                                     *
*---------------------------------------------------------------------*
PROC0000 DS    0H
         TM    COMFLAG,$COUNT          COUNT REQUESTED??
         BNO   PROC0010                NO
         CLC   RECPRT,COMCOUNT         ENOUGH RECORDS PRINTED??
         BNL   EXIT0010                YES
PROC0010 DS    0H
         BAL   R9,READ0000             READ A RECORD
         TM    COMFLAG,$TOKEY          TO KEY SPECIFIED??
         BNO   PROC0020                NO
         SR    R1,R1                   CLEAR FOR LENGTH
         IC    R1,COMTKEYL             TO KEY LENGTH
         L     R2,RECDADDR             RECORD ADDRESS
         A     R2,COMRKP               RECORD'S KEY DATA
         BCTR  R1,0                    ADJUST FOR EXECUTE
         EX    R1,TOKEYCLC             REACHED TOKEY??
         BH    EXIT0010                YES
PROC0020 DS    0H
         MVI   SCANFLAG,X'00'          TURN OFF SCAN INDICATORS
         TM    COMSCN1F,$SCAN1         SCAN 1 REQUESTED??
         BNO   PROC0050                NO
         SR    R3,R3                   ASSUME NO STARTING OFFSET
         TM    COMSCN1F,$Z1BGN         ZONE BEGIN GIVEN??
         BNO   PROC0030                NO
         CLC   COMZ1BGN,RECLEN+2       IS RECORD TOO SMALL??
         BH    PROC0000                YES
         LH    R3,COMZ1BGN             ZONE BEGIN OFFSET
         BCTR  R3,0                    RELATIVE TO ZERO
PROC0030 DS    0H
         LH    R4,RECLEN+2             RECORD LENGTH
         TM    COMSCN1F,$Z1END         ZONE END REQUESTED??
         BNO   PROC0040                NO
         CH    R4,COMZ1END             RECORD LONGER THAN ZONE??
         BL    PROC0040                NO
         LH    R4,COMZ1END             LIMIT SEARCH TO ZONE LENGTH
PROC0040 DS    0H
         L     R5,RECDADDR             RECORD ADDRESS
         AR    R5,R3                   PLUS ZONE BEGIN
         SR    R4,R3                   MINUS ZONE BEGIN
         LH    R6,COMSCN1L             STRING LENGTH
         XLOC  RECORD=(R5),            RECORD ADDRESS                  +
               RECLEN=(R4),            SEARCH LENGTH                   +
               STRING=COMSCAN1,        SEARCH STRING                   +
               STRLEN=(R6),            SEARCH STRING LENGTH            +
               ERROR=PROC0050,         STRING NOT FOUND                +
               MF=(E,COMSCN1P)         TRIGGER PARAMETER LIST
         OI    SCANFLAG,$1FND          INDICATE SCAN 1 FOUND
PROC0050 DS    0H
         TM    COMSCN2F,$SCAN2         SCAN 2 REQUESTED??
         BNO   PROC0080                NO
         SR    R3,R3                   ASSUME NO STARTING OFFSET
         TM    COMSCN2F,$Z2BGN         ZONE BEGIN GIVEN??
         BNO   PROC0060                NO
         CLC   COMZ2BGN,RECLEN+2       IS RECORD TOO SMALL??
         BH    PROC0000                YES
         LH    R3,COMZ2BGN             ZONE BEGIN OFFSET
         BCTR  R3,0                    RELATIVE TO ZERO
PROC0060 DS    0H
         LH    R4,RECLEN+2             RECORD LENGTH
         TM    COMSCN2F,$Z2END         ZONE END REQUESTED??
         BNO   PROC0070                NO
         CH    R4,COMZ2END             RECORD LONGER THAN ZONE??
         BL    PROC0070                NO
         LH    R4,COMZ2END             LIMIT SEARCH TO ZONE LENGTH
PROC0070 DS    0H
         L     R5,RECDADDR             RECORD ADDRESS
         AR    R5,R3                   PLUS ZONE BEGIN
         SR    R4,R3                   MINUS ZONE BEGIN
         LH    R6,COMSCN2L             STRING LENGTH
         XLOC  RECORD=(R5),            RECORD ADDRESS                  +
               RECLEN=(R4),            SCAN LENGTH                     +
               STRING=COMSCAN2,        SEARCH STRING                   +
               STRLEN=(R6),            SEARCH STRING LENGTH            +
               ERROR=PROC0080,         STRING NOT FOUND                +
               MF=(E,COMSCN2P)         TRIGGER PARAMETER LIST
         OI    SCANFLAG,$2FND          INDICATE SCAN 2 FOUND
PROC0080 DS    0H
         CLI   COMSCTRL,C'A'           SCAN 1 AND SCAN 2 REQUIRED??
         BNE   PROC0090                NO
         TM    SCANFLAG,$1FND+$2FND    WERE 1 AND 2 FOUND??
         BNO   PROC0000                NO
PROC0090 DS    0H
         TM    COMSCN1F,$SCAN1         SCAN 1 REQUESTED??
         BNO   PROC0100                NO
         TM    SCANFLAG,$1FND          WAS SCAN 1 FOUND??
         BO    PROC0110                ACCEPT THE RECORD
         CLI   COMSCTRL,C'O'           SCAN 1 OR SCAN 2 ALLOWED??
         BNE   PROC0000                NO
PROC0100 DS    0H
         TM    COMSCN2F,$SCAN2         SCAN 2 REQUESTED??
         BNO   PROC0110                NO
         TM    SCANFLAG,$2FND          WAS SCAN 2 FOUND??
         BNO   PROC0000                NO
PROC0110 DS    0H
         BAL   R9,RPRT0000             PRINT THE RECORD
         B     PROC0000                REPEAT
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*           READ INPUT FILE                                           *
*                                                                     *
*---------------------------------------------------------------------*
READ0000 DS    0H
         MVC   VSAMFUNC,=CL8'GET'      CURRENT FUNCTION
         GET   RPL=READRPL             READ A RECORD
         LTR   R15,R15                 SUCCESSFUL??
         BNZ   VERR0000                NO
         MVC   VSAMFUNC,=CL8'SWOCB'    CURRENT FUNCTION
         SHOWCB RPL=READRPL,           SHOW DATA FROM RPL              +
               FIELDS=(RECLEN),        .. REQUEST RECORD LENGTH        +
               AREA=RECLEN,            .. AREA FOR RETURNED DATA       +
               LENGTH=4                .. LENGTH OF 'RECLEN'
         LTR   R15,R15                 SUCCESSFUL??
         BNZ   VERR0000                NO
         L     R14,RECNBR              LOGICAL RECORD NUMBER
         LA    R14,1(R14)              ADD 1
         ST    R14,RECNBR              SAVE RECORD NUMBER
         BR    R9                      RETURN
         SPACE 2
VERR0000 DS    0H
         STH   R15,DWORD               SAVE RETURN CODE
         STH   R0,DWORD+2              SAVE RETURN CODE
         SHOWCB RPL=READRPL,           EXTRACT INFO FROM RPL           +
               FIELDS=(FDBK),          .. FEED BACK                    +
               AREA=RPLFDBK,           .. AREA TO RETURN DATA          +
               LENGTH=4                .. LENGTH OF AREA
         UNPK  VSAMR15(5),DWORD(3)     UNPACK RETURN CODE
         MVI   VSAMR15+4,C' '          RESTORE BLANK
         NC    VSAMR15,HEX0F0F         TURN OFF ZONES
         TR    VSAMR15,HEXCHAR         TRANSLATE TO CHARACTER
         STH   R0,DWORD                SAVE RETURN CODE
         UNPK  VSAMR0(5),DWORD+2(3)    UNPACK RETURN CODE
         MVI   VSAMR0+4,C' '           RESTORE BLANK
         NC    VSAMR0,HEX0F0F          TURN OFF ZONES
         TR    VSAMR0,HEXCHAR          TRANSLATE TO CHARACTER
         MVC   PLINE,PLINE-1           CLEAR PRINT LINE
         MVC   PLINE(VSAMMSGL),VSAMMSG MOVE MESSAGE
         BAL   R10,PRT0000             PRINT MESSAGE
         UNPK  VSAMFDBK(9),RPLFDBK(5)  UNPACK RETURN CODE
         MVI   VSAMFDBK+8,C' '         RESTORE BLANK
         NC    VSAMFDBK,HEX0F0F        TURN OFF ZONES
         TR    VSAMFDBK,HEXCHAR        TRANSLATE TO CHARACTER
         MVC   PLINE,PLINE-1           CLEAR PRINT LINE
         MVC   PLINE(FDBKMSGL),FDBKMSG MOVE MESSAGE
         BAL   R10,PRT0000             PRINT MESSAGE
         B     EXIT0010                AND EXIT
         SPACE 2
READRPL  RPL   AM=VSAM,                GENERATE VSAM RPL               +
               AREA=RECDADDR,           .. ADDRESS OF RETURNED RECORD  +
               OPTCD=(FWD,SEQ,LOC,SYN), .. FORWARD/SEQUENTIAL/LOCATE   +
               RECLEN=RECLEN            .. RETURN RECORD LENGTH
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*           FORMAT RECORD                                             *
*                                                                     *
*---------------------------------------------------------------------*
RPRT0000 DS    0H
         L     R8,RECDADDR             DATA ADDRESS
         LH    R1,RECPRT               NUMBER OF RECORDS PRINTED
         LA    R1,1(R1)                ADD 1
         STH   R1,RECPRT               SAVE RECORDS PRINTED
         MVC   RPRTLEN,RECLEN+2        COPY RECORD LENGTH
         ZAP   CENTURY,P0              ZERO 100'S ACCUMULATOR
RPRT0010 DS    0H
         TM    COMFLAG,$100            FIRST100 FORMAT??
         BO    RPRT0020                YES
         CLI   COMHEX,$HEX             RECORD TO BE PRINTED IN HEX
         BNE   RPRT0020                NO
         CP    COMLINE,P70             ENOUGH LINES FOR 1 'GROUP'??
         BNH   RPRT0020                YES
         BAL   R10,HEADINGS            FORCE HEADINGS
RPRT0020 DS    0H
         LH    R3,RPRTLEN              DATA LENGTH
         LTR   R3,R3                   ZERO?
         BZR   R9                      EXIT
         CH    R3,H100                 TOO MUCH FOR 1 LINE??
         BNH   RPRT0030                NO
         LH    R3,H100                 LIMIT LENGTH TO 100
RPRT0030 DS    0H
         BCTR  R3,0                    ADJUST FOR EXECUTE
         MVC   PLINE,PLINE-1           CLEAR PRINT LINE
         EX    R3,CHARMVC              MOVE CHARACTER
         EX    R3,CHARTR               TRANSLATE OUT UNPRINTABLES
         TM    COMFLAG,$100            FIRST100 FORMAT??
         BO    RPRT0050                YES
         CP    CENTURY,P0              FIRST LINE FOR RECORD??
         BNE   RPRT0040                NO
         MVI   PR#,C'#'                MOVE IN RECORD NUMBER PREFIX
         L     R1,RECNBR               CURRENT LOGICAL RECORD NUMBER
         CVD   R1,DWORD                CONVERT TO DECIMAL
         MVC   PRRECNBR,=X'402020202021'
         ED    PRRECNBR,DWORD+5        EDIT RECORD NUMBER
         MVC   PRSIZE,=C' SIZE'        MOVE RECORD SIZE PREFIX
         LH    R1,RECLEN+2             CURRENT RECORD SIZE
         CVD   R1,DWORD                CONVERT TO DECIMAL
         MVC   PRRECLEN,=X'402020202021'
         ED    PRRECLEN,DWORD+5        EDIT RECORD NUMBER
RPRT0040 DS    0H
         MVI   PRCC,C' '               SINGLE SPACE CONTROL
         CLI   COMSPACE,$SINGLE        SINGLE SPACING?
         BE    RPRT0050                YES
         MVI   PRCC,C'0'               DOUBLE SPACE CONTROL
RPRT0050 DS    0H
         BAL   R10,PRT0000             PRINT CHARACTER
         TM    COMFLAG,$100            FIRST100 FORMAT??
         BOR   R9                      YES
         CLI   COMHEX,$HEX             RECORD TO BE PRINTED IN HEX??
         BNE   RPRT0060                NO
         MVC   PLINE,PLINE-1           CLEAR PRINT LINE
         EX    R3,CHARMVC              MOVE CHARACTER
         EX    R3,NUMRNULL             NULL NUMERIC
         EX    R3,HEXTR                TRANSLATE ZONES
         BAL   R10,PRT0000             PRINT ZONES
         MVC   PLINE,PLINE-1           CLEAR PRINT LINE
         EX    R3,CHARMVC              MOVE CHARACTER
         EX    R3,ZONENULL             NULL ZONES
         EX    R3,HEXTR                TRANSLATE NUMERIC'S
         BAL   R10,PRT0000             PRINT NUMERICS
         MVC   PLINE,PLINE-1           CLEAR PRINT LINE
         MVC   PR100,=X'402020202020'  EDIT WORD
         ED    PR100,CENTURY           EDIT 100'S COUNTER
         EX    R3,SCALEMVC             MOVE SCALE
         BAL   R10,PRT0000             PRINT SCALE
RPRT0060 DS    0H
         AP    CENTURY,P10             ADD TO 100'S COUNTER
         LA    R3,1(R3)                RESTORE DATA LENGTH
         LH    R1,RPRTLEN              DATA LENGTH
         SR    R1,R3                   REMAINING LENGTH
         STH   R1,RPRTLEN              SAVE LENGTH LEFT
         LA    R8,100(R8)              NEXT 100 BYTES
         B     RPRT0010                REPEAT
TOKEYCLC CLC   0(0,R2),COMTKEY         CHECK TO-KEY VALUE
CHARMVC  MVC   PAREA+20(0),0(R8)       MOVE CHARACTER
CHARTR   TR    PAREA+20(0),CHRTABLE    TRANSLATE OUT UNPRINTABLES
ZONENULL MVZ   PAREA+20(0),HEXZEROS    NULLIFY ZONES
NUMRNULL MVN   PAREA+20(0),HEXZEROS    NULLIFY NUMERICS
HEXTR    TR    PAREA+20(0),HEXTABLE    TRANSLATE TO PRINTABLE
SCALEMVC MVC   PAREA+20(0),SCALE       MOVE SCALE
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*           PRINTING/HEADING ROUTINES                                 *
*                                                                     *
*---------------------------------------------------------------------*
PRT0000  DS    0H
         CLC   TOTLINES,COMMAXL        EXCEEDED OUTPUT LINE MAXIMUM??
         BH    EXIT0000                YES
         LA    R2,PRINTER
         PUT   (R2),PRCC               PRINT
         AP    COMLINE,P1              ADD 1 TO LINE COUNTER
         L     R1,TOTLINES             ADD 1 TO LINE COUNTER
         A     R1,FONE
         ST    R1,TOTLINES
         CLI   PRCC,C' '               SINGLE SPACE??
         BE    PRT0010                 YES
         AP    COMLINE,P1              ADD 1 TO LINE COUNTER
         L     R1,TOTLINES             ADD 1 TO LINE COUNTER
         A     R1,FONE
         ST    R1,TOTLINES
         CLI   PRCC,C'0'               DOUBLE SPACE??
         BE    PRT0010                 YES
         AP    COMLINE,P1              ADD 1 TO LINE COUNTER
         L     R1,TOTLINES             ADD 1 TO LINE COUNTER
         A     R1,FONE
         ST    R1,TOTLINES
PRT0010  DS    0H
         CP    COMLINE,P75             TIME FOR HEADINGS?
         BLR   R10                     NO
HEADINGS DS    0H
         AP    COMPAGE,P1              ADD 1 TO PAGE COUNT
         MVC   PRPAGE,=X'402020202120' EDIT WORD
         ED    PRPAGE,COMPAGE          EDIT PAGE NUMBER
         MVC   PRTITLE,COMTITLE        MOVE PAGE TITLE
         LA    R2,PRINTER
         PUT   (R2),HEADING            PRINT PAGE HEADING
         ZAP   COMLINE,P1              SET LINE COUNT TO 1
         L     R1,TOTLINES             ADD 1 TO LINE COUNTER
         A     R1,FONE
         ST    R1,TOTLINES
         LA    R2,PRINTER
         MVC   DSNDSN,JFCBDSNM         MOVE DATASET NAME TO HEADING
         PUT   (R2),DSNLINE            PRINT DATASET NAME LINE
         AP    COMLINE,P1              ADD 1 TO LINE COUNT
         L     R1,TOTLINES             ADD 1 TO LINE COUNTER
         A     R1,FONE
         ST    R1,TOTLINES
         TM    COMFLAG,$100            FIRST100 FORMAT??
         BOR   R10                     YES, EXIT HERE
         PUT   (R2),ATTRLINE           PRINT FILE ATTRIBUTE LINE
         AP    COMLINE,P1              ADD 1 TO LINE COUNT
         L     R1,TOTLINES             ADD 1 TO LINE COUNTER
         A     R1,FONE
         ST    R1,TOTLINES
         BR    R10                     RETURN
EXIT0000 DS    0H
         LA    R2,PRINTER
         PUT   (R2),MAXLMSG            PRINT MESSAGE
EXIT0010 DS    0H
         LA    R2,VSAMFILE             INPUT FILE ADDRESS
         CLOSE ((R2))                  CLOSE INPUT FILE
         LA    R2,PRINTER              PRINTER FILE ADDRESS
         CLOSE ((R2))                  CLOSE PRINT FILE
EXIT0020 DS    0H
         L     R13,4(R13)              RESTORE SAVE AREA ADDRESS
         L     R14,12(R13)             RESTORE REGISTER 14
         LM    R0,R12,20(R13)          RESTORE ALL OTHER REGISTERS
         SR    R15,R15                 RETURN CODE
         BR    R14                     EXIT
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*                                                                     *
*                                                                     *
*---------------------------------------------------------------------*
         LTORG
DWORD    DC    D'0'
RECDADDR DC    A(0)                    CURRENT REOCRD ADDRESS
PH02XLST EXLST AM=VSAM,                GENERATE VSAM EXIT LIST         +
               EODAD=(EXIT0010,A)      .. END OF FILE
TOTLINES DC    F'0'                    TOTAL LINES PRINTED
RECNBR   DC    F'0'                    CURRENT RECORD'S RECORD NUMBER
FONE     DC    F'1'                    CONSTANT
RECLEN   DC    F'0'                    CURRENT RECORD LENGTH
RPLFDBK  DC    F'0'                    RPL FEED BACK
RECPRT   DC    H'0'                    NUMBER OF RECORDS PRINTED
RPRTLEN  DC    H'0'                    PRINT ROUTINE WORK LENGTH
H4       DC    H'4'                    CONSTANT
H100     DC    H'100'                  CONSTANT
P0       DC    P'0'                    CONSTANT
P1       DC    P'1'                    CONSTANT
P3       DC    P'3'                    CONSTANT
P10      DC    P'10'                   CONSTANT
P70      DC    P'70'                   CONSTANT
P75      DC    P'75'                   CONSTANT
CENTURY  DC    PL3'0'                  100'S COUNTER
SCANFLAG DC    X'00'                   SCAN RESULTS INDICATORS
$1FND    EQU   X'80'                   .. SCAN 1 FOUND
$2FND    EQU   X'40'                   .. SCAN 2 FOUND
HEXZEROS DC    100X'00'                CONSTANT
HEX0F0F  DC    8X'0F'
HEXCHAR  DC    C'0123456789ABCDEF'
*                   0 1 2 3 4 5 6 7 8 9 A B C D E F                     VUT16120
CHRTABLE DC    XL16'40404040404040404040404040404040'     X'00' - X'0F' VUT16130
         DC    XL16'40404040404040404040404040404040'     X'10' - X'1F' VUT16140
         DC    XL16'40404040404040404040404040404040'     X'20' - X'2F' VUT16150
         DC    XL16'40404040404040404040404040404040'     X'30' - X'3F' VUT16160
         DC    XL16'404040404040404040404A4B4C4D4E4F'     X'40' - X'4F' VUT16170
         DC    XL16'504040404040404040405A5B5C5D5E5F'     X'50' - X'5F' VUT16180
         DC    XL16'60614040404040404040406B6C6D6E6F'     X'60' - X'6F' VUT16190
         DC    XL16'404040404040404040407A7B7C7D7E7F'     X'70' - X'7F' VUT16200
         DC    XL16'40404040404040404040408B8C8D8E8F'     X'80' - X'8F' VUT16210
         DC    XL16'40404040404040404040409B9C9D9E9F'     X'90' - X'9F' VUT16220
         DC    XL16'4040404040404040404040ABACADAEAF'     X'A0' - X'AF' VUT16230
         DC    XL16'4040404040404040404040BBBCBDBEBF'     X'B0' - X'BF' VUT16240
         DC    XL16'40C1C2C3C4C5C6C7C8C9404040404040'     X'C0' - X'CF' VUT16250
         DC    XL16'40D1D2D3D4D5D6D7D8D9404040404040'     X'D0' - X'DF' VUT16260
         DC    XL16'4040E2E3E4E5E6E7E8E9404040404040'     X'E0' - X'EF' VUT16270
         DC    XL16'F0F1F2F3F4F5F6F7F8F9404040404040'     X'F0' - X'FF' VUT16280
*                   0 1 2 3 4 5 6 7 8 9 A B C D E F                     VUT16120
HEXTABLE DC    CL16'0123456789ABCDEF'                     X'00' - X'0F'
         DC    CL16'1               '                     X'10' - X'1F'
         DC    CL16'2               '                     X'20' - X'2F'
         DC    CL16'3               '                     X'30' - X'3F'
         DC    CL16'4               '                     X'40' - X'4F'
         DC    CL16'5               '                     X'50' - X'5F'
         DC    CL16'6               '                     X'60' - X'6F'
         DC    CL16'7               '                     X'70' - X'7F'
         DC    CL16'8               '                     X'80' - X'8F'
         DC    CL16'9               '                     X'90' - X'9F'
         DC    CL16'A               '                     X'A0' - X'AF'
         DC    CL16'B               '                     X'B0' - X'BF'
         DC    CL16'C               '                     X'C0' - X'CF'
         DC    CL16'D               '                     X'D0' - X'DF'
         DC    CL16'E               '                     X'E0' - X'EF'
         DC    CL16'F               '                     X'F0' - X'FF'
VSAMMSG  DC    C'0 ***** ERROR ON '
VSAMFUNC DC    CL8' '
         DC    C' VSAM R15='
VSAMR15  DC    CL4' '
         DC    C'  VSAM R0='
VSAMR0   DC    CL4' '
         DC    C'  PROGRAM ABORTED *****'
VSAMMSGL EQU   *-VSAMMSG
FDBKMSG  DS    0C
         DC    C'  ***** RPL FEED BACK ='
VSAMFDBK DC    CL8' '
         DC    C' *****'
FDBKMSGL EQU   *-FDBKMSG
HEADING  DS    0C
         DC    C'1'
         DC    CL14' '
PRTITLE  DC    CL80' '
         DC    CL15' '
         DC    C'PAGE '
PRPAGE   DC    CL6' '
SCALE    DC    CL100'1...5...10...15...20...25...30...35...40...45...50+
               ...55...60...65...70...75...80...85...90...95..100'
DSNLINE  DC    C' RECORDS PRINTED FROM DATASET:'
DSNDSN   DC    CL44' '
         DC    CL50' '
MAXLMSG  DC    CL121'- ********** OUTPUT EXCEEDED, PROGRAM TERMINATED *+
               *********'
ATTRLINE DC    C' '
         DC    C'DATASET ORANIZATION:'
PRDSORG  DC    CL04' '                  DATASET ORGANIZATION
         DC    CL15'   RECORD SIZE:'
PRLRECL  DC    XL06'402020202120'       RECORD LENGTH
         DC    CL03'   '
PRKEYLH  DC    CL11'           '
PRKEYL   DC    CL06'            '       KEY LENGTH
         DC    CL03'   '
PRRKPH   DC    CL21'                      '
PRRKP    DC    CL06'            '       RELATIVE KEY POSITION
         DC    CL46' '
PLINE    DS    0CL121
PRCC     DC    C' '                    CARRIAGE CONTROL
PAREA    DS    0CL120                  PRINT AREA
         DC    CL14' '
PR100    DC    X'402020202020'         100'S PREFIX
         ORG   PAREA
PR#      DC    C' '                    RECORD NUMBER PREFIX
PRRECNBR DC    X'402020202021'         RECORD NUMBER
PRSIZE   DC    C' SIZE'
PRRECLEN DC    X'402020202021'         RECORD SIZE
         DC    C'  '
         DC    CL100' '
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*                                                                     *
*                                                                     *
*---------------------------------------------------------------------*
VSAMCOMM DSECT
         PRINT GEN
         VSAMCOMM
         EJECT
         XLOC TYPE=DSECT
         SPACE 2
*---------------------------------------------------------------------*
*                                                                     *
*                     REGISTER EQUATES                                *
*                                                                     *
*---------------------------------------------------------------------*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END   VSAMPH02
./ ADD NAME=VSAMPH03 0100-02291-02291-0123-00253-00253-00000-RLRICE
         MACRO
&NAME    HELP  &DATA
         LCLC  &NDX
&NDX     SETC  '&SYSNDX'
&NAME    DS    0C
         DC    AL2(E&NDX-B&NDX)
B&NDX    DS    0C
         DC    C&DATA
E&NDX    DS    0C
         MEND
VSAMPH03 CSECT
         USING VSAMPH03,R15            SPECIFY CSECT BASE
         ID                            DATE AND TIME COMPILED
         LR    R11,R15                 COPY BASE ADDRESS
         DROP  R15                     DROP PREVIOUS BASE
         USING VSAMPH03,R11            RESUME WITH NEW BASE
         USING VSAMCOMM,R12            DEFINE COMMON BASE
         BAL   R10,HEADINGS            PRINT 'HELP' HEADINGS
         LA    R9,HELPDATA             HELP DATA
HELP0010 DS    0H
         CLI   0(R9),X'FF'             END OF HELP DATA??
         BE    EXIT0000                YES
         CLI   0(R9),X'80'             EJECT RECORD??
         BNE   HELP0020                NO
         BAL   R10,HEADINGS            FORCE HEADING
         LA    R9,1(R9)                SKIP EJECT RECORD
         B     HELP0010                NEXT HELP RECORD
HELP0020 DS    0H
         MVC   PLINE,PLINE-1           CLEAR PRINT AREA
         SR    R3,R3                   CLEAR FOR LENGTH
         ICM   R3,3,0(R9)              DATA LENGTH
         BCTR  R3,0                    ADJUST FOR EXECUTE
         EX    R3,HELPMVC              MOVE HELP DATA
         BAL   R10,PRT0000             PRINT HELP DATA
         LA    R9,3(R3,R9)             NEXT HELP DATA
         B     HELP0010                PRINT NEXT LINE
HELPMVC  MVC   PLINE(0),2(R9)          MOVE HELP DATA
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*           PRINTING/HEADING ROUTINES                                 *
*                                                                     *
*---------------------------------------------------------------------*
PRT0000  DS    0H
         LA    R2,PRINTER
         PUT   (R2),PRCC               PRINT
         AP    COMLINE,P1              ADD 1 TO LINE COUNTER
         CLI   PRCC,C' '               SINGLE SPACE??
         BE    PRT0010                 YES
         AP    COMLINE,P1              ADD 1 TO LINE COUNTER
         CLI   PRCC,C'0'               DOUBLE SPACE??
         BE    PRT0010                 YES
         AP    COMLINE,P1              ADD 1 TO LINE COUNTER
PRT0010  DS    0H
         CP    COMLINE,P75             TIME FOR HEADINGS?
         BLR   R10                     NO
HEADINGS DS    0H
         AP    COMPAGE,P1              ADD 1 TO PAGE COUNT
         MVC   PRPAGE,=X'402020202120' EDIT WORD
         ED    PRPAGE,COMPAGE          EDIT PAGE NUMBER
         LA    R2,PRINTER
         PUT   (R2),HEADING            PRINT PAGE HEADING
         LA    R2,PRINTER
         ZAP   COMLINE,P1              RESET LINE COUNT
         BR    R10                     RETURN
EXIT0000 DS    0H
         LA    R2,VSAMFILE             INPUT FILE ADDRESS
         CLOSE (R2)                    CLOSE INPUT FILE
         LA    R2,PRINTER              PRINTER FILE ADDRESS
         CLOSE (R2)                    CLOSE PRINT FILE
EXIT0010 DS    0H
         L     R13,4(R13)              RESTORE SAVE AREA ADDRESS
         L     R14,12(R13)             RESTORE REGISTER 14
         LM    R0,R12,20(R13)          RESTORE ALL OTHER REGISTERS
         SR    R15,R15                 RETURN CODE
         BR    R14                     EXIT
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*                                                                     *
*                                                                     *
*---------------------------------------------------------------------*
         LTORG
P0       DC    P'0'                    CONSTANT
P1       DC    P'1'                    CONSTANT
P75      DC    P'75'                   CONSTANT
HEADING  DS    0C
         DC    CL111'1                   VSAM UTILITY CONTROL PARAMETER+
               S'
         DC    C'PAGE'
PRPAGE   DC    CL6' '
         DC    C' '
PLINE    DS    0CL121
PRCC     DC    C' '
         DC    CL120' '
         EJECT
HELPDATA DS    0H
         HELP  '0                          UTILITY PARAMETERS'
         HELP  '0*                 AN ASTERISK IN COLUMN 1 SPECIFIES A +
               COMMENT.  THE'
         HELP  '                   REMAINDER OF THE RECORD WILL BE IGNO+
               RED.  ANY NUMBER'
         HELP  '                   OF COMMENTS MAY BE USED INTERMIXED W+
               ITH PARAMETER'
         HELP  '                   STATEMENTS IN ANY ORDER.'
         HELP  '0COUNT=NNN         SPECIFIES THE MAXIMUM NUMBER OF RECO+
               RDS TO BE PRINTED.'
         HELP  '                   NOTE THAT THIS IS NOT THE NUMBER OF +
               RECORDS READ.  IF'
         HELP  '                   SCAN(S) ARE USED MANY MORE RECORDS M+
               AY BE READ THAN'
         HELP  '                   ARE PRINTED.'
         HELP  '0MAXLINES=NNNNN    SPECIFIES THE MAXIMUM NUMBER OF LINE+
               S TO BE PRINTED.'
         HELP  '                   THIS CAN PREVENT ''RUN AWAY'' PRINT.+
                DEFAULT=10000.'
         HELP  '0NOHEX             SPECIFIES THAT THE CHARACTER PORTION+
                ONLY BE PRINTED.'
         HELP  '                   ZONE, NUMERIC, AND SCALE LINES WILL +
               BE SUPPRESSED.'
         HELP  '0SKIP=NNN          SPECIFIES A NUMBER OF RECORDS TO BE +
               SKIPPED AFTER FROMKEY'
         HELP  '                   AND BEFORE SCAN OR TRIGGER IF SPECIF+
               IED.'
         HELP  '0   FROMKEY='' ''    SPECIFIES A KEY VALUE TO BEGIN PRO+
               CESSING.  THIS DIFFERS'
         HELP  ' OR FROMKEY=X'' ''   FROM SCAN OR TRIGGER IN THAT RECOR+
               DS DO NOT HAVE TO BE'
         HELP  '                   READ TO ESTABLISH POSITION, POSITION+
               ING IS DONE VIA THE'
         HELP  '                   DATASET INDEX.  THE KEY IS ALL OR AN+
               Y PORTION (GENERIC)'
         HELP  '                   OF THE KEY.  THIS PARAMETER MAY ONLY+
                BE SPECIFIED FOR'
         HELP  '                   KSDS DATASETS.'
         HELP  '0   TOKEY='' ''      SPECIFIES A KEY VALUE TO END PROCE+
               SSING.  RULES ARE THE'
         HELP  ' OR TOKEY=X'' ''     SAME AS ''FROMKEY''.'
         HELP  '0   SCAN='' ''       SPECIFIES A DATA STRING TO BE LOCA+
               TED IN EACH RECORD'
         HELP  ' OR SCAN=X'' ''      BEFORE IT IS SELECTED TO BE PRINTE+
               D.  THIS PROVIDES'
         HELP  ' OR SCAN1='' ''      A METHOD TO ''FILTER'' DESIRED REC+
               ORDS.  THE STRING MAY'
         HELP  ' OR SCAN1=X'' ''     BE EITHER IN CHARACTER OR HEX.  DE+
               FAULT IS CHARACTER.'
         HELP  '                   THE LETTER ''X'' PRECEEDING THE OPEN+
               ING QUOTE INDICATES'
         HELP  '                   THAT THE DATA IS IN HEX.'
         HELP  '0   SCAN2='' ''      SPECIFIES A SECOND DATA STRING TO +
               BE LOCATED IN EACH'
         HELP  ' OR SCAN2=X'' ''     RECORD.  SCAN OR SCAN1 MUST BE USE+
               D WHEN SCAN2 IS USED'
         HELP  '                   (IF YOU ONLY HAVE ONE STRING USE SCA+
               N OR SCAN1).  THE'
         HELP  '                   RELATIONSHIP OF SCAN1 AND SCAN2 MAY +
               BE ''AND'' OR ''OR''.'
         HELP  '                   IF ''AND'', THEN BOTH SCAN1 AND SCAN+
               2 MUST BE FOUND IN'
         HELP  '                   THE SAME RECORD BEFORE IT WILL BE PR+
               INTED.  IF ''OR'','
         HELP  '                   THEN IF EITHER SCAN1 OR SCAN2 IS FOU+
               ND IN A RECORD IT'
         HELP  '                   WILL BE PRINTED.  THIS RELATIONSHIP +
               IS DETERMINED BY'
         HELP  '                   THE ''SCANCTRL'' PARAMETER.'
         HELP  '0SCANCTRL=1 OR 2   SPECIFIES THE RELATIONSHIP OF SCAN/S+
               CAN1 AND SCAN2.'
         HELP  '     OR            THIS PARAMETER IS ONLY VALID WHEN SC+
               AN/SCAN1 AND'
         HELP  ' SCANCTRL=1 AND 2  SCAN2 ARE SPECIFIED.'
         HELP  '0SINGLE            SPECIFIES SINGLE SPACING.  THIS IS V+
               ALID ONLY WHEN'
         HELP  '                   ''NOHEX'' IS ALSO SPECIFIED.'
         HELP  '080-80             FORCES SINGLE SPACING, NOHEX, SUPPRE+
               SSES LOGICAL   '
         HELP  '                   RECORD NUMBER, AND TRUNCATES RECORDS+
                AT 100 CHARACTERS.'
         HELP  '0TITLE='' ''         SPECIFIES 1 TO 80 CHARACTERS TO BE+
                PRINTED IN THE'
         HELP  '                   HEADINGS OF EACH PAGE.'
         HELP  '0TRIGGER='' ''       SIMILAR TO ''SCAN'' THIS SPECIFIES+
                A DATA STRING TO'
         HELP  '                   LOCATE IN A RECORD BEFORE PRINTING A+
               NY RECORDS.'
         HELP  '0ZONE=NNN          SPECIFIES A STARTING AND ENDING POSI+
               TION WITHIN THE'
         HELP  '   OR              RECORDS TO FIND THE SCAN/SCAN1 VALUE+
               .  THIS'
         HELP  ' ZONE1=NNN         PARAMETER IS VALID ONLY WHEN SCAN/SC+
               AN1 IS ALSO'
         HELP  '                   SPECIFIED.'
         HELP  '0ZONE2=NNN         SAME AS ZONE/ZONE1 FOR THE ''SCAN2''+
                PARAMETER.'
         HELP  '0TZONE=NNN         SAME AS ZONE/ZONE1 FOR THE ''TRIGGER+
               '' PARAMETER.'
         DC    X'80'               EJECT RECORD
         HELP  '0                     USAGE NOTES'
         HELP  '0   THE VSAM UTILITY WILL READ ANY KSDS, ESDS, OR RRDS +
               DATASETS.'
         HELP  ' SINCE RECORDS MAY BE OF VARIABLE LENGTH, THE LENGTH OF+
                EACH RECORD'
         HELP  ' IS PRINTED IN THE PREFIX AREA OF THE FIRST LINE OF EAC+
               H RECORD.  THE'
         HELP  ' RELATIVE RECORD NUMBER OF EACH RECORD IS ALSO PRINTED +
               IN THE PREFIX'
         HELP  ' OF THE FIRST LINE FOR EACH RECORD.'
         HELP  ' NOTE: THE RECORD NUMBER IS RELATIVE TO THE BEGINNING O+
               F THE FILE'
         HELP  ' OR THE RECORD ESTABLISHED BY THE ''FROMKEY''.'
         HELP  '0   THE CONTROL STATEMENTS ARE PRINTED SO YOU CAN LATER+
                VERIFY SCAN/'
         HELP  ' TRIGGER/SKIP OR OTHER PARAMETERS, OR AS DOCUMENTATION +
               OF HOW THE'
         HELP  ' PRINTED RECORDS WERE SELECTED.'
         HELP  '0   ANY NUMBER OF CONTROL STATEMENTS MAY BE USED.  STAT+
               EMENTS'
         HELP  ' CANNOT BE CONTINUED.'
         HELP  '0   DD STATEMENTS REQUIRED ARE:'
         HELP  '0      VSAMFILE  - INPUT DATASET'
         HELP  '0      SYSPRINT  - PRINT OUTPUT'
         HELP  '0      SYSIN     - CONTROL STATEMENTS'
         DC    X'FFFF'
*---------------------------------------------------------------------*
*                                                                     *
*                                                                     *
*                                                                     *
*---------------------------------------------------------------------*
VSAMCOMM DSECT
         VSAMCOMM
         DCBD  DSORG=PS
*---------------------------------------------------------------------*
*                                                                     *
*                     REGISTER EQUATES                                *
*                                                                     *
*---------------------------------------------------------------------*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END   VSAMPH03
./ ADD NAME=XLOC     0100-02291-02291-0123-00195-00195-00000-RLRICE
*---------------------------------------------------------------------*
* NAME:    XLOC                                                       *
*                                                                     *
* FUNCTION:OPTIMIZED STRING LOCATOR                                   *
*                                                                     *
*  OPERATION:                                                         *
*      1. LOAD PARAMETER LIST.                                        *
*      2. COMPUTE INTERNAL RECORD LENGTH.                             *
*      3. SET RETURN STATUS TO $XLOCOK (X'00').                       *
*      4. IF SCAN REQUEST, GO TO STEP 11.                             *
*      5. TRANSLATE SUBSTRING INTO FREQUENCY OF OCCURRENCE (FOC).     *
*      6. FIND LOWEST FREQUENCY VALUE IN TRANSLATED STRING.           *
*      7. STORE DISPLACEMENT TO THAT CHARACTER.                       *
*      8. FIND CORRESPONDING CHARACTER IN SUBSTRING.                  *
*      9. BUILD LOOK-UP TABLE ON LEAST FREQUENTLY OCCURRING           *
*         CHARACTER.                                                  *
*     10. GO TO STEP 23.                                              *
*     11. IF STRING LENGTH > RECORD LENGTH LEFT, GO TO STEP 22.       *
*     12. IF REMAINING LENGTH IS GREATER THAN 256, LIMIT TO 256.      *
*     13. EXECUTE TRT TO LOCATE CHARACTER IN RECORD.                  *
*     14. IF NOT FOUND, GO TO STEP 21.                                *
*     15. IF 1 BYTE SEARCH STRING, GO TO STEP 23.                     *
*     16. SUBTRACT FOC CHARACTER DISPLACEMENT.                        *
*     17. TEST FOR STRING MATCH.                                      *
*     18. IF FOUND, GO TO STEP 23.                                    *
*     19. COMPUTE RESUME ADDRESS AND LENGTH SCANNED.                  *
*     20. COMPUTE LENGTH REMAINING TO BE SCANNED,                     *
*           IF ZERO GO TO STEP 22                                     *
*           OTHERWISE GO TO STEP 11.                                  *
*     21. COMPUTE RESUME ADDRESS AND LENGTH SCANNED, GO TO STEP 11.   *
*     22. SET STATUS TO $XLOCNF (X'FF').                              *
*     23. RETURN TO MAINLINE.                                         *
*                                                                     *
*     XLOCSTAT DEFINITIONS:                                           *
*       X'00'  INITIALIZATION COMPLETE, OR STRING LOCATED.            *
*       X'01'  SEARCH ARGUEMENT LENGTH < 1.                           *
*       X'02'  SEARCH ARGUEMENT LENGTH > 256.                         *
*       X'FF'  STRING NOT LOCATED.                                    *
*                                                                     *
*---------------------------------------------------------------------*
         EJECT
XLOC     CSECT
         USING XLOC,R12                DEFINE BASE
         STM   R14,R12,12(R13)         SAVE REGISTERS
         LR    R12,R15                 INITIALIZE PERMANENT BASE
         LR    R11,R1
         USING XLOCLIST,R11            DEFINE PARMLIST BASE
         LM    R4,R10,XLOCSTRA         PARAMETER VALUES
         BCTR  R5,0                    ADJUST LENGTH FOR EXECUTES
         MVI   XLOCSTAT,$XLOCOK        SET STATUS
         CLI   XLOCCMD,$XLOCS          SCAN REQUEST??
         BE    LOC0000                 YES... NEW RECORD TO SCAN
INIT0000 DS    0H
         LTR   R5,R5                   IS SEARCH ARG LENGTH > 1??
         BM    ERR0010                 NO... LENGTH ERROR
         CH    R5,H255                 SEARCH STRING TOO LONG??
         BH    ERR0020                 YES
         EX    R5,XLOCCOPY             COPY THE STRING
         EX    R5,XLOCTR               TRANSLATE TO FREQUENCY COUNTS
         LA    R2,1(R5)                NUMBER OF LOOPS
         LA    R14,0(R5,R8)            LAST FOC VALUE ADDRESS
         SR    R15,R15                 CLEAR REGISTER
         IC    R15,0(R14)              INITIALIZE FOC TO LAST VALUE
INIT0010 DS    0H
         CLM   R15,1,0(R14)            LOWER THAN ANY OTHER??
         BL    INIT0020                NO
         IC    R15,0(R14)              LOWEST FOC SEEN
         LR    R7,R14                  SAVE FOC VALUE ADDRESS
INIT0020 DS    0H
         BCTR  R14,0                   MINUS 1
         BCT   R2,INIT0010             CONTINUE STRING SCAN
         SR    R7,R8                   DISPLACMENT TO FOC BYTE
         ST    R7,XLOCFOCD             SAVE DISPLACEMENT
         LA    R2,0(R7,R4)             LEAST FREQUENT CHARACTER ADDRESS
         IC    R15,0(R2)               LEAST SEEN VALUE
         STC   R15,XLOCFOCC            SAVE IN PARM LIST
         XC    0(256,R8),0(R8)         CLEAR WORK AREA
         LA    R2,0(R8,R15)            CORRESPONDING BYTE FOR TRT
         MVI   0(R2),X'01'             SET TO STOP TRT
         B     EXIT0000                RETURN TO MAINLINE
         EJECT
*---------------------------------------------------------------------*
*      SEARCH FOR STRING.                                             *
*                                                                     *
*      R4  = SEARCH STRING                                            *
*      R5  = LENGTH OF STRING -1                                      *
*      R6  = RECORD TO SCAN                                           *
*      R7  = LENGTH OF RECORD                                         *
*      R8  = WORK AREA                                                *
*      R9  = HIGHEST ADDRESS STRING MAY START                         *
*      R10 = DISPLACEMENT TO FOC CHARACTER                            *
*---------------------------------------------------------------------*
LOC0000  DS    0H
         LA    R15,256                 USED FOR CHECKING MAX LENGTH
         LA    R9,0(R6,R7)             END OF RECORD
         SR    R9,R5                   MINUS SCAN STRING LENGTH
         BCTR  R9,0                    HIGHEST ADDRESS STRING MAY START
         AR    R6,R10                  PLUS FOC CHARACTER DISPLACEMENT
         SR    R7,R10                  MINUS FOC CHARACTER DISPLACEMENT
LOC0010  DS    0H
         LR    R14,R7                  TOTAL LENGTH TO SCAN
         CR    R14,R15                 TOTAL LEFT TO SCAN < 256?
         BNH   LOC0020                 YES
         LR    R14,R15                 LIMIT TO 256
LOC0020  DS    0H
         BCTR  R14,R0                  ADJUST FOR EXECUTE
         EX    R14,XLOCTRT             SCAN FOR LOWEST FOC CHARACTER
         BZ    LOC0040                 NOT FOUND
*---------------------------------------------------------------------*
*      POSSIBLE MATCH, R1 POINTS TO THE MATCHING CHARACTER:           *
*         1. TEST FOR 1 BYTE SEARCH STRING                            *
*         2. SUBTRACT FOC DISPLACEMENT FROM R1                        *
*         3. TEST FOR FULL STRING                                     *
*---------------------------------------------------------------------*
         LTR   R5,R5                   STRING LENGTH = 1?
         BZ    EXIT0000                YES... STRING LOCATED
         LA    R2,0(R1)                SAVE STOP ADDRESS
         SR    R1,R10                  MINUS FOC DISPLACEMENT
         CR    R1,R9                   BEYOND HIGH ADDRESS??
         BH    LOC0050                 YES
         EX    R5,XLOCCLC              COMPARE FULL STRING
         BE    EXIT0000                STRING LOCATED
         SR    R2,R6                   AMOUNT SCANNED
         LA    R6,1(R2,R6)             SCAN RESUME POINT
*---------------------------------------------------------------------*
*      R2 IS NUMBER OF BYTES SCANNED                                  *
*      R6 HAS BEEN UPDATED TO RESUME POINT                            *
*      COMPUTE LENGTH LEFT TO SCAN                                    *
*      EXIT IF NO MORE DATA TO SCAN, OTHERWISE RESUME                 *
*---------------------------------------------------------------------*
LOC0030  DS    0H
         SR    R7,R2                   MINUS AMOUNT SCANNED
         BNH   LOC0050                 NOT LOCATED
         BCT   R7,LOC0010              CONTINUE SCANNING RECORD
         B     LOC0050                 NOT LOCATED
*---------------------------------------------------------------------*
*     STRING NOT FOUND, FULL LENGTH USED                              *
*---------------------------------------------------------------------*
LOC0040  DS    0H
         LA    R6,1(R14,R6)            RESUME POINT
         LA    R2,1(R14)               ACTUAL LENGTH SCANNED
         B     LOC0030                 NOTHING FOUND
*---------------------------------------------------------------------*
*     STRING WAS NOT FOUND                                            *
*---------------------------------------------------------------------*
LOC0050  DS    0H
         MVI   XLOCSTAT,$XLOCNF        SET RETURN CODE
         B     EXIT0000                EXIT
         EJECT
*---------------------------------------------------------------------*
*     SEARCH ARG LENGTH < 1                                           *
*---------------------------------------------------------------------*
ERR0010  DS    0H
         MVI   XLOCSTAT,$XLOCER1       SET STATUS
         B     EXIT0000                EXIT
*---------------------------------------------------------------------*
*     SEARCH ARG LENGTH > 256                                         *
*---------------------------------------------------------------------*
ERR0020  DS    0H
         MVI   XLOCSTAT,$XLOCER2       SET STATUS
EXIT0000 DS    0H
         LM    R14,R12,12(R13)         RESTORE REGS
         BR    R14                     RETURN TO MAINLINE
         DS    0D
XLOCCOPY MVC   0(0,R8),0(R4)           COPY SEARCH STRING
XLOCTR   TR    0(0,R8),0(R9)           TRANSLATE INTO FOC VALUES
XLOCTRT  TRT   0(0,R6),0(R8)           SCAN FOR FOC CHARACTER
XLOCCLC  CLC   0(0,R1),0(R4)           SEARCH STRING FOUND??
H255     DC    H'255'                  CONSTANT
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
         XLOC TYPE=DSECT
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
./ ADD NAME=XSORT    0100-02291-02291-0123-00165-00165-00000-RLRICE
*---------------------------------------------------------------------*
*                                                                     *
*   I'm not sure what the algorithm is called, but it's faster'n      *
*   greased lightnin'.                                                *
*                                                                     *
*                                                                     *
*                                                                     *
*         EXAMPLE FORTRAN ALGORITHM:                                  *
*          K1 = N + 1                                                 *
*    10    K1 = INT(K1/2)                                             *
*          IF  (K1 .EQ. 0) GOTO 99                                    *
*          K2 = N - K1                                                *
*          J = 1                                                      *
*    20    I = J                                                      *
*    30    K3 = I + K1                                                *
*          IF (A(I) .LT. A(K3)) GOTO 40                               *
*          EXCHANGE (A(I),A(K3))                                      *
*          I = I - K1                                                 *
*          IF (I .GE. 1) GOTO 30                                      *
*    40    J = J + 1                                                  *
*          IF (J .GT. K2) GOTO 10                                     *
*          GOTO 20                                                    *
*   999    STOP                                                       *
*          END                                                        *
*                                                                     *
*---------------------------------------------------------------------*
XSORT    CSECT
         USING XSORT,R15         DECLARE ENTRY BASE REGISTER
         ID
         STM   R14,R12,12(R13)   STORE REGISTERS
         USING PLIST,R1          DECLARE SORT PARM LIST DSECT
         LH    R2,PKEYLEN        KEY LENGTH
         AH    R2,POFFSET        PLUS OFFSET
         CH    R2,PLRECL         TOO LONG??
         BH    RC4               YES
         CH    R2,H255           > 255??
         BH    RC4               YES
         CLC   PLRECL,HZERO      LRECL = ZERO??
         BE    RC8               YES .. EGAD
         CLC   PKEYLEN,HZERO     KEY LENGTH = ZERO??
         BE    RC8               YES .. EGAD AGAIN
         CLC   PCOUNT,HZERO      ANY RECORDS??
         BE    RC8               YES .. AND AGAIN EGAD
         CLC   PCOUNT,HONE       ONLY 1 RECORD??
         BE    RC0               THIS IS EASY
         ICM   R2,15,PDATA       DATA ADDRESS
         BZ    RC12              REALLY EGAD
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*             SORT ALGORITHM                                          *
*                                                                     *
*---------------------------------------------------------------------*
SORT0000 DS    0H
         LH    R3,PCOUNT         NUMBER OF RECORDS
         LH    R4,PKEYLEN        KEY LENGTH
         BCTR  R4,0              PREPARE IT FOR EXECUTE'S
         LH    R5,PLRECL         RECORD LENGTH
         BCTR  R5,0              PREPARE IT FOR EXECUTE'S
         LA    R6,1(R3)          INITIAL K1 VALUE
SORT0010 DS    0H
         SRL   R6,1              K1 = K1/2
         LTR   R6,R6             ZERO??
         BZ    RC0               ALL DONE
         LR    R7,R3             COPY N
         SR    R7,R6             K2 = N - K1
         LH    R8,HONE           J = 1
SORT0020 DS    0H
         LR    R9,R8             I = J
SORT0030 DS    0H
         LA    R14,0(R9,R6)      K3 = I + K1
         BCTR  R14,0             K3 = K3 -1
         BCTR  R9,0              I = I - 1
         SR    R10,R10           PREPARE FOR MULTIPLY
         LH    R11,PLRECL        LRECL
         MR    R10,R9            LRECL * I
         AH    R11,POFFSET       PLUS KEY OFFSET
         AR    R11,R2            PLUS BASE ADDRESS
         LR    R12,R11           SAVE ADDRESS
         SR    R10,R0            CLEAR FOR MULTIPLY
         LH    R11,PLRECL        LRECL
         MR    R10,R14           LRECL * K3
         LA    R14,1(R14)        K3 = K3 + 1
         LA    R9,1(R9)          I = I + 1
         AH    R11,POFFSET       PLUS KEY OFFSET
         AR    R11,R2            PLUS BASE ADDRESS
         EX    R4,KEYCLC         COMPARE KEYS
         BL    SORT0050          VALUE 1 < VALUE 2
         CR    R11,R12           SAME ADDRESS??
         BE    SORT0040          YES
         SH    R11,POFFSET       MINUS KEY OFFSET
         SH    R12,POFFSET       MINUS KEY OFFSET
         EX    R5,XC1            SWAP
         EX    R5,XC2              THE
         EX    R5,XC1                GUYS
SORT0040 DS    0H
         SR    R9,R6             I = I - K1
         CH    R9,HONE           I => 1??
         BH    SORT0030          YES
         BE    SORT0030          YES AGAIN
SORT0050 DS    0H
         LA    R8,1(R8)          J = J + 1
         CR    R8,R7             J > K2??
         BH    SORT0010          YES
         B     SORT0020          OTHERWISE
RC0      DS    0H
         SR    R14,R14           RETURN CODE = 0
         B     EXITEXIT
RC4      DS    0H
         LA    R14,4             RETURN CODE = 4
         B     EXITEXIT
RC8      DS    0H
         LA    R14,8             RETURN CODE = 8
         B     EXITEXIT
RC12     DS    0H
         LA    R14,12            RETURN CODE = 12
EXITEXIT DS    0H
         LR    R15,R14           RETURN CODE
         L     R14,12(R13)       RESTORE R14
         LM    R0,R12,20(R13)    RESTORE R0 - R12
         BR    R14               RETURN TO CALLER
*---------------------------------------------------------------------*
*                                                                     *
*             EXECUTED INSTRUCTIONS                                   *
*                                                                     *
*---------------------------------------------------------------------*
KEYCLC   CLC   0(0,R12),0(R11)   COMPARE KEYS
XC1      XC    0(0,R11),0(R12)   EXCHANGE
XC2      XC    0(0,R12),0(R11)   EXCHANGE
*---------------------------------------------------------------------*
*                                                                     *
*             CONSTANTS                                               *
*                                                                     *
*---------------------------------------------------------------------*
HZERO    DC    H'0'
HONE     DC    H'1'
H255     DC    H'255'
*---------------------------------------------------------------------*
*                                                                     *
*             DSECTS                                                  *
*                                                                     *
*---------------------------------------------------------------------*
PLIST    XSORT TYPE=DSECT
*---------------------------------------------------------------------*
*                                                                     *
*             REGISTER EQUATES                                        *
*                                                                     *
*---------------------------------------------------------------------*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END   XSORT
